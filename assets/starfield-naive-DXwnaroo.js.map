{"version":3,"file":"starfield-naive-DXwnaroo.js","sources":["../../src/pages/demo/optimization/starfield-naive.tsx"],"sourcesContent":["import \"./PixiStats.css\";\nimport * as PIXI from \"pixi.js\";\nimport {\n  createResource,\n  createSignal,\n  Index,\n  onCleanup,\n  Suspense,\n  type Component,\n} from \"solid-js\";\nimport {\n  Application,\n  Container,\n  onTick,\n  Sprite,\n  Text,\n} from \"@danneu/solid-pixi\";\nimport { Stats } from \"pixi-stats\";\n\n// https://svelte-pixi.mattjennin.gs/guides/optimizing-performance\n\nconst SPEED = 0.025;\nconst FOV = 20;\nconst WIDTH = 720;\nconst HEIGHT = 400;\nconst STAR_SIZE = 0.05;\n\nconst Star: Component<{ texture: PIXI.Texture; cameraZ: number }> = (props) => {\n  const deg = Math.random() * Math.PI * 2;\n  const initDistance = Math.random() * 50 + 1;\n  const initX = Math.cos(deg) * initDistance;\n  const initY = Math.sin(deg) * initDistance;\n  const [starZ, setStarZ] = createSignal(Math.random() * 1000 + 750);\n\n  // These are all computed values function of cameraZ\n\n  const z = () => {\n    let currentZ = starZ() - props.cameraZ;\n\n    // When star goes behind camera, reset it far ahead\n    if (currentZ < 1) {\n      setStarZ((prev) => prev + Math.random() * 2000 + 1000);\n      currentZ = starZ() - props.cameraZ;\n    }\n\n    return currentZ;\n  };\n\n  const x = () => {\n    return initX * (FOV / z()) * WIDTH + WIDTH / 2;\n  };\n\n  const y = () => {\n    return initY * (FOV / z()) * HEIGHT + HEIGHT / 2;\n  };\n\n  const distance = () => {\n    return Math.max(0, (2000 - z()) / 2000);\n  };\n\n  return (\n    <Sprite\n      texture={props.texture}\n      anchor={{ x: 0.5, y: 0.7 }}\n      scale={{\n        x: distance() * STAR_SIZE,\n        y: distance() * STAR_SIZE,\n      }}\n      x={x()}\n      y={y()}\n    />\n  );\n};\n\nconst Example: Component<{ starCount: number }> = (props) => {\n  const [cameraZ, setCameraZ] = createSignal(0);\n\n  const [texture] = createResource(async () => {\n    return await PIXI.Assets.load(\"/solid-pixi/img/star.png\");\n  });\n\n  // move the camera forward\n  onTick((tick) => {\n    setCameraZ((prev) => (prev += tick.deltaTime * 10 * SPEED));\n  });\n\n  return (\n    <Index each={Array(props.starCount).fill(0)}>\n      {() => <Star texture={texture()} cameraZ={cameraZ()} />}\n    </Index>\n  );\n};\n\nexport default function () {\n  const options = [100, 1000, 10000];\n  const [starCount, setStarCount] = createSignal(100);\n\n  let stats: Stats | undefined;\n\n  onCleanup(() => {\n    // Important to call this, else WebGL errors on unmount\n    stats?.pixiHooks.release();\n  });\n\n  const handleClick = () => {\n    setStarCount((prev) => {\n      // Pick next option in list\n      const nextIndex = (options.indexOf(prev) + 1) % options.length;\n      return options[nextIndex];\n    });\n  };\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Application\n          eventMode=\"static\"\n          ref={(app) => {\n            stats = new Stats(app.renderer, app.canvas.parentElement!);\n            app.stage.hitArea = app.screen;\n            app.stage.on(\"pointertap\", handleClick);\n            onCleanup(() => {\n              app.stage.off(\"pointertap\", handleClick);\n            });\n          }}\n        >\n          <Container>\n            <Text\n              text={`${starCount().toLocaleString()} stars. Click anywhere to change.`}\n              style={{\n                fill: \"white\",\n                fontSize: 16,\n              }}\n            />\n            <Example starCount={starCount()} />\n          </Container>\n        </Application>\n      </Suspense>\n    </div>\n  );\n}\n"],"names":["SPEED","FOV","WIDTH","HEIGHT","STAR_SIZE","Star","props","deg","Math","random","PI","initDistance","initX","cos","initY","sin","starZ","setStarZ","createSignal","z","currentZ","cameraZ","prev","x","y","distance","max","_$createComponent","Sprite","texture","anchor","scale","Example","setCameraZ","createResource","PIXI","load","onTick","tick","deltaTime","Index","each","Array","starCount","fill","children","options","setStarCount","stats","onCleanup","pixiHooks","release","handleClick","nextIndex","indexOf","length","_el$","_tmpl$","style","setProperty","Suspense","fallback","_tmpl$2","Application","eventMode","ref","app","Stats","renderer","canvas","parentElement","stage","hitArea","screen","on","off","Container","Text","text","toLocaleString","fontSize"],"mappings":"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"}