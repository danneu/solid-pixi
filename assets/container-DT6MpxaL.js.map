{"version":3,"file":"container-DT6MpxaL.js","sources":["../../src/pages/demo/basic/container.tsx"],"sourcesContent":["import { Application, onTick } from \"@danneu/solid-pixi\";\nimport { useApp } from \"@danneu/solid-pixi\";\nimport { Sprite } from \"@danneu/solid-pixi\";\nimport { Container } from \"@danneu/solid-pixi\";\nimport * as PIXI from \"pixi.js\";\nimport {\n  createResource,\n  createSignal,\n  Index,\n  Show,\n  Suspense,\n  type Component,\n} from \"solid-js\";\n\nconst Example: Component<{ texture: PIXI.Texture }> = (props) => {\n  const app = useApp();\n  const [rotation, setRotation] = createSignal(0);\n\n  onTick((tick) => {\n    setRotation(rotation() - 0.01 * tick.deltaTime);\n  });\n\n  return (\n    <Container\n      x={app.screen.width / 2}\n      y={app.screen.height / 2}\n      rotation={rotation()}\n      ref={(el) => {\n        // Wait til container is mounted so that we get its width/height\n        // which are set dynamically based on its children size (bunnies)\n        el.pivot.x = el.width / 2;\n        el.pivot.y = el.height / 2;\n      }}\n    >\n      <Index each={Array(25).fill(0)}>\n        {(_, i) => (\n          <Sprite\n            x={(i % 5) * 40}\n            y={Math.floor(i / 5) * 40}\n            texture={props.texture}\n          />\n        )}\n      </Index>\n    </Container>\n  );\n};\n\nexport default function () {\n  const [texture] = createResource(async () => {\n    return await PIXI.Assets.load(\"https://pixijs.com/assets/bunny.png\");\n  });\n\n  return (\n    <Suspense fallback={<div>Loading</div>}>\n      <Application backgroundColor={0x1099bb}>\n        <Show when={texture()}>\n          <Example texture={texture()} />\n        </Show>\n      </Application>\n    </Suspense>\n  );\n}\n"],"names":["Example","props","app","useApp","rotation","setRotation","createSignal","onTick","tick","deltaTime","_$createComponent","Container","x","screen","width","y","height","ref","el","pivot","children","Index","each","Array","fill","_","i","Sprite","Math","floor","texture","createResource","PIXI","load","Suspense","fallback","_tmpl$","Application","backgroundColor","Show","when"],"mappings":";;;;;;;;AAcA,MAAMA,UAAiDC,CAAU,UAAA;AAC/D,QAAMC,MAAMC,OAAO;AACnB,QAAM,CAACC,UAAUC,WAAW,IAAIC,aAAa,CAAC;AAE9CC,SAAQC,CAAS,SAAA;AACfH,gBAAYD,SAAS,IAAI,OAAOI,KAAKC,SAAS;AAAA,EAAA,CAC/C;AAED,SAAAC,gBACGC,WAAS;AAAA,IAAA,IACRC,IAAC;AAAEV,aAAAA,IAAIW,OAAOC,QAAQ;AAAA,IAAC;AAAA,IAAA,IACvBC,IAAC;AAAEb,aAAAA,IAAIW,OAAOG,SAAS;AAAA,IAAC;AAAA,IAAA,IACxBZ,WAAQ;AAAA,aAAEA,SAAS;AAAA,IAAC;AAAA,IAAAa,KACdC,CAAO,OAAA;AAGRC,SAAAA,MAAMP,IAAIM,GAAGJ,QAAQ;AACrBK,SAAAA,MAAMJ,IAAIG,GAAGF,SAAS;AAAA,IAC3B;AAAA,IAAC,IAAAI,WAAA;AAAA,aAAAV,gBAEAW,OAAK;AAAA,QAAA,IAACC,OAAI;AAAA,iBAAEC,MAAM,EAAE,EAAEC,KAAK,CAAC;AAAA,QAAC;AAAA,QAAAJ,UAC3BA,CAACK,GAAGC,MAAChB,gBACHiB,QAAM;AAAA,UACLf,GAAIc,IAAI,IAAK;AAAA,UAAE,IACfX,IAAC;AAAA,mBAAEa,KAAKC,MAAMH,IAAI,CAAC,IAAI;AAAA,UAAE;AAAA,UAAA,IACzBI,UAAO;AAAA,mBAAE7B,MAAM6B;AAAAA,UAAAA;AAAAA,QAAO,CAAA;AAAA,MAAA,CAEzB;AAAA,IAAA;AAAA,EAAA,CAAA;AAIT;AAE2B,SAAA,YAAA;AACzB,QAAM,CAACA,OAAO,IAAIC,eAAe,YAAY;AAC3C,WAAO,MAAMC,OAAYC,KAAK,qCAAqC;AAAA,EAAA,CACpE;AAED,SAAAvB,gBACGwB,UAAQ;AAAA,IAAA,IAACC,WAAQ;AAAA,aAAAC,OAAA;AAAA,IAAA;AAAA,IAAA,IAAAhB,WAAA;AAAA,aAAAV,gBACf2B,aAAW;AAAA,QAACC,iBAAiB;AAAA,QAAQ,IAAAlB,WAAA;AAAA,iBAAAV,gBACnC6B,MAAI;AAAA,YAAA,IAACC,OAAI;AAAA,qBAAEV,QAAQ;AAAA,YAAC;AAAA,YAAA,IAAAV,WAAA;AAAA,qBAAAV,gBAClBV,SAAO;AAAA,gBAAA,IAAC8B,UAAO;AAAA,yBAAEA,QAAQ;AAAA,gBAAA;AAAA,cAAC,CAAA;AAAA,YAAA;AAAA,UAAA,CAAA;AAAA,QAAA;AAAA,MAAA,CAAA;AAAA,IAAA;AAAA,EAAA,CAAA;AAKrC;"}