{"version":3,"file":"starfield-optimized-B75Eeeq7.js","sources":["../../src/pages/demo/optimization/starfield-optimized.tsx"],"sourcesContent":["import \"./PixiStats.css\";\nimport * as PIXI from \"pixi.js\";\nimport {\n  createEffect,\n  createResource,\n  createSignal,\n  on,\n  onCleanup,\n  Suspense,\n  type Component,\n} from \"solid-js\";\nimport { Application, Container, onTick, Text } from \"@danneu/solid-pixi\";\nimport { Stats } from \"pixi-stats\";\n\n// https://svelte-pixi.mattjennin.gs/guides/optimizing-performance\n\nconst SPEED = 0.025;\nconst FOV = 20;\nconst WIDTH = 720;\nconst HEIGHT = 400;\nconst STAR_SIZE = 0.05;\n\nconst Example: Component<{ starCount: number }> = (props) => {\n  const [cameraZ, setCameraZ] = createSignal(0);\n  const [container, setContainer] = createSignal<PIXI.Container | undefined>(\n    undefined\n  );\n\n  const [texture] = createResource(async () => {\n    return await PIXI.Assets.load(\"/solid-pixi/img/star.png\");\n  });\n\n  // move the camera forward\n  onTick((tick) => {\n    setCameraZ((prev) => (prev += tick.deltaTime * 10 * SPEED));\n    stars.forEach(updateStar);\n  });\n\n  type Star = PIXI.Sprite & {\n    initX: number;\n    initY: number;\n    initZ: number;\n    z: number;\n  };\n\n  let stars: Star[] = [];\n\n  createEffect(\n    on(\n      // Only run when starCount changes and when container & texture are loaded.\n      [() => props.starCount, container, texture],\n      ([starCount, container, texture]) => {\n        if (!container) return;\n        if (!texture) return;\n        // We want to run this code when texture and container are loaded + starCount changes.\n\n        // Initially and evey time the star count changes, create a new array of sprites\n\n        // Note: Slow. Would be faster to destroy container and create a new one.\n        stars.forEach((s) => s.destroy());\n\n        stars = Array.from({ length: starCount }, () => {\n          const star = new PIXI.Sprite(texture) as Star;\n          const deg = Math.random() * Math.PI * 2;\n          const distance = Math.random() * 50 + 1;\n\n          // these are custom values that we'll use in the updateStar function\n          star.initX = Math.cos(deg) * distance;\n          star.initY = Math.sin(deg) * distance;\n          star.initZ = Math.random() * 1000 + 750;\n\n          star.x = star.initX;\n          star.y = star.initY;\n          star.z = star.initZ;\n\n          star.anchor.set(0.5, 0.7);\n\n          return star;\n        });\n\n        // append the stars to the container\n        console.log(\"adding stars to container\", stars.length);\n        container.addChild(...stars);\n      }\n    )\n  );\n\n  function updateStar(star: Star) {\n    let z = star.z - cameraZ();\n\n    // When star goes behind camera, reset it far ahead\n    if (z < 1) {\n      star.z += Math.random() * 2000 + 1000; // Move star forward again\n      z = star.z - cameraZ(); // Recalculate z\n    }\n\n    const distance = Math.max(0, (2000 - z) / 2000);\n\n    star.scale.set(distance * STAR_SIZE);\n\n    star.x = star.initX * (FOV / z) * WIDTH + WIDTH / 2;\n    star.y = star.initY * (FOV / z) * HEIGHT + HEIGHT / 2;\n  }\n\n  onCleanup(() => {\n    // since we created the stars manually we'll need to destroy them manually on unmount\n    stars.forEach((s) => s.destroy());\n  });\n\n  return <Container ref={(c) => setContainer(c)} />;\n};\n\nexport default function () {\n  const options = [100, 1_000, 10_000];\n  const [starCount, setStarCount] = createSignal(options[0]);\n\n  let stats: Stats | undefined;\n\n  onCleanup(() => {\n    // Important to call this, else WebGL errors on unmount\n    stats?.pixiHooks.release();\n  });\n\n  const handleClick = () => {\n    setStarCount((prev) => {\n      // Pick next option in list\n      const nextIndex = (options.indexOf(prev) + 1) % options.length;\n      return options[nextIndex];\n    });\n  };\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Application\n          eventMode=\"static\"\n          ref={(app) => {\n            stats = new Stats(app.renderer, app.canvas.parentElement!);\n            app.stage.hitArea = app.screen;\n            app.stage.on(\"pointertap\", handleClick);\n            onCleanup(() => {\n              app.stage.off(\"pointertap\", handleClick);\n            });\n          }}\n        >\n          <Container>\n            <Text\n              text={`${starCount().toLocaleString()} stars. Click anywhere to change.`}\n              style={{\n                fill: \"white\",\n                fontSize: 16,\n              }}\n            />\n            <Example starCount={starCount()} />\n          </Container>\n        </Application>\n      </Suspense>\n    </div>\n  );\n}\n"],"names":["SPEED","FOV","WIDTH","HEIGHT","STAR_SIZE","Example","props","cameraZ","setCameraZ","createSignal","container","setContainer","undefined","texture","createResource","PIXI","load","onTick","tick","prev","deltaTime","stars","forEach","updateStar","on","starCount","s","destroy","Array","from","length","star","deg","Math","random","PI","distance","initX","cos","initY","sin","initZ","x","y","z","anchor","set","log","addChild","max","scale","onCleanup","_$createComponent","Container","ref","c","options","setStarCount","stats","pixiHooks","release","handleClick","nextIndex","indexOf","_el$","_tmpl$","style","setProperty","Suspense","fallback","_tmpl$2","children","Application","eventMode","app","Stats","renderer","canvas","parentElement","stage","hitArea","screen","off","Text","text","toLocaleString","fill","fontSize"],"mappings":"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"}