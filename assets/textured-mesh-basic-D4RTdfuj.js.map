{"version":3,"file":"textured-mesh-basic-D4RTdfuj.js","sources":["../../src/pages/demo/mesh-and-shaders/textured-mesh-basic.tsx"],"sourcesContent":["import * as PIXI from \"pixi.js\";\nimport { Application, Container, MeshRope, onTick } from \"@danneu/solid-pixi\";\nimport { createResource, Show, Suspense, type Component } from \"solid-js\";\n\nconst Example: Component<{ texture: PIXI.Texture }> = (props) => {\n  const ropeLength = 918 / 20;\n  const points = Array.from(\n    { length: 20 },\n    (_, i) => new PIXI.Point(i * ropeLength, 0)\n  );\n\n  let count = 0;\n\n  onTick(() => {\n    count += 0.1;\n\n    for (let i = 0; i < points.length; i++) {\n      points[i].y = Math.sin(i * 0.5 + count) * 30;\n      points[i].x = i * ropeLength + Math.cos(i * 0.3 + count) * 20;\n    }\n  });\n\n  return (\n    <Container x={400} y={300} scale={800 / 1100}>\n      <MeshRope texture={props.texture} points={points} x={-459} />;\n    </Container>\n  );\n};\n\nexport default function () {\n  const [texture] = createResource(async () => {\n    return await PIXI.Assets.load<PIXI.Texture>(\n      \"https://pixijs.com/assets/snake.png\"\n    );\n  });\n\n  return (\n    <>\n      <Suspense fallback={<div>Loading</div>}>\n        <Application backgroundColor={0x1099bb} eventMode=\"static\">\n          <Show when={texture()}>\n            {(texture) => <Example texture={texture()} />}\n          </Show>\n        </Application>\n      </Suspense>\n    </>\n  );\n}\n"],"names":["Example","props","ropeLength","points","Array","from","length","_","i","PIXI","count","onTick","y","Math","sin","x","cos","_$createComponent","Container","scale","children","MeshRope","texture","createResource","load","Suspense","fallback","_tmpl$","Application","backgroundColor","eventMode","Show","when"],"mappings":";;;;AAIA,MAAMA,UAAiDC,CAAU,UAAA;AAC/D,QAAMC,aAAa,MAAM;AACnBC,QAAAA,SAASC,MAAMC,KACnB;AAAA,IAAEC,QAAQ;AAAA,EAAA,GACV,CAACC,GAAGC,MAAM,IAAIC,MAAWD,IAAIN,YAAY,CAAC,CAC5C;AAEA,MAAIQ,QAAQ;AAEZC,SAAO,MAAM;AACF,aAAA;AAET,aAASH,IAAI,GAAGA,IAAIL,OAAOG,QAAQE,KAAK;AAC/BA,aAAAA,CAAC,EAAEI,IAAIC,KAAKC,IAAIN,IAAI,MAAME,KAAK,IAAI;AACnCF,aAAAA,CAAC,EAAEO,IAAIP,IAAIN,aAAaW,KAAKG,IAAIR,IAAI,MAAME,KAAK,IAAI;AAAA,IAAA;AAAA,EAC7D,CACD;AAED,SAAAO,gBACGC,WAAS;AAAA,IAACH,GAAG;AAAA,IAAKH,GAAG;AAAA,IAAKO,OAAO,MAAM;AAAA,IAAI,IAAAC,WAAA;AAAAH,aAAAA,CAAAA,gBACzCI,UAAQ;AAAA,QAAA,IAACC,UAAO;AAAA,iBAAErB,MAAMqB;AAAAA,QAAO;AAAA,QAAEnB;AAAAA,QAAgBY,GAAG;AAAA,MAAI,CAAA,GAAA,GAAA;AAAA,IAAA;AAAA,EAAA,CAAA;AAG/D;AAE2B,SAAA,oBAAA;AACzB,QAAM,CAACO,OAAO,IAAIC,eAAe,YAAY;AAC3C,WAAO,MAAMd,OAAYe,KACvB,qCACF;AAAA,EAAA,CACD;AAED,SAAAP,gBAEKQ,UAAQ;AAAA,IAAA,IAACC,WAAQ;AAAA,aAAAC,OAAA;AAAA,IAAA;AAAA,IAAA,IAAAP,WAAA;AAAA,aAAAH,gBACfW,aAAW;AAAA,QAACC,iBAAiB;AAAA,QAAUC,WAAS;AAAA,QAAA,IAAAV,WAAA;AAAA,iBAAAH,gBAC9Cc,MAAI;AAAA,YAAA,IAACC,OAAI;AAAA,qBAAEV,QAAQ;AAAA,YAAC;AAAA,YAAAF,UACjBE,CAAAA,aAAOL,gBAAMjB,SAAO;AAAA,cAAA,IAACsB,UAAO;AAAA,uBAAEA,SAAQ;AAAA,cAAA;AAAA,YAAC,CAAA;AAAA,UAAA,CAAI;AAAA,QAAA;AAAA,MAAA,CAAA;AAAA,IAAA;AAAA,EAAA,CAAA;AAMzD;"}