{"version":3,"file":"starfield-naive.desc-CTGBk-yl.js","sources":["../../src/pages/demo/optimization/starfield-naive.desc.tsx"],"sourcesContent":["import { A } from \"@solidjs/router\";\n\nexport default function () {\n  return (\n    <div>\n      <p>\n        A suboptimal way to update hundreds of sprites at a time is to create\n        hundreds of <code>&lt;Sprite /&gt;</code>s, each with its own\n        signals/props that get updated every frame.\n      </p>\n      <p>\n        As you click the canvas and increase the number of stars, you'll notice\n        that the performance degrades quickly.\n      </p>\n      <p>\n        In these cases, instead of managing a bunch of signals, you'll get much\n        better performance if you manage the <code>PIXI.Sprite</code> instances\n        directly. See:{\" \"}\n        <A href=\"/demo/optimization/starfield-optimized\">\n          the optimized version\n        </A>{\" \"}\n      </p>\n    </div>\n  );\n}\n"],"names":["_el$","_tmpl$","_el$2","firstChild","_el$3","nextSibling","_el$4","_el$5","_el$6","_el$7","_el$0","_$createComponent","A","href","children"],"mappings":";;AAE2B,SAAA,sBAAA;AACzB,UAAA,MAAA;AAAAA,QAAAA,OAAAC,OAAA,GAAAC,QAAAF,KAAAG,YAAAC,QAAAF,MAAAG,aAAAC,QAAAF,MAAAC,aAAAE,QAAAD,MAAAH,YAAAK,QAAAD,MAAAF,aAAAI,QAAAD,MAAAH,aAAAK,QAAAD,MAAAJ;AAAAK,UAAAL;AAAAC,WAAAA,OAAAK,gBAeOC,GAAC;AAAA,MAACC,MAAI;AAAA,MAAAC,UAAA;AAAA,IAAA,CAAA,GAAAJ,KAAA;AAAAV,WAAAA;AAAAA,EAAAA,GAAA;AAMf;"}