{"version":3,"file":"pixel-line-DwRwoFNN.js","sources":["../../src/pages/demo/graphics/pixel-line.tsx"],"sourcesContent":["import * as PIXI from \"pixi.js\";\nimport {\n  Application,\n  Container,\n  Text,\n  Graphics,\n  onTick,\n  useApp,\n} from \"@danneu/solid-pixi\";\nimport { createSignal, Suspense, type Component } from \"solid-js\";\n\nfunction buildGrid(graphics: PIXI.Graphics) {\n  // Draw 10 vertical lines spaced 10 pixels apart\n  for (let i = 0; i < 11; i++) {\n    // Move to top of each line (x = i*10, y = 0)\n    graphics\n      .moveTo(i * 10, 0)\n      // Draw down to bottom (x = i*10, y = 100)\n      .lineTo(i * 10, 100);\n  }\n\n  // Draw 10 horizontal lines spaced 10 pixels apart\n  for (let i = 0; i < 11; i++) {\n    // Move to start of each line (x = 0, y = i*10)\n    graphics\n      .moveTo(0, i * 10)\n      // Draw across to end (x = 100, y = i*10)\n      .lineTo(100, i * 10);\n  }\n\n  return graphics;\n}\n\nconst Example: Component = () => {\n  const app = useApp();\n\n  const [scale, setScale] = createSignal(1);\n\n  let ticks = 0;\n\n  onTick(() => {\n    ticks += 0.01;\n    setScale(1 + (Math.sin(ticks) + 1) * 2);\n  });\n\n  return (\n    <>\n      <Text\n        y={5}\n        x={10}\n        text=\"Normal graphics\"\n        style={{\n          fontSize: 16,\n          fill: {\n            color: 0xffffff,\n          },\n        }}\n      />\n      <Text\n        y={5}\n        ref={(el) => {\n          // align to right\n          el.x = app.screen.width - el.width - 10;\n        }}\n        text=\"Pixel-line graphics\"\n        style={{\n          fontSize: 16,\n          fill: {\n            color: 0xffffff,\n          },\n        }}\n      />\n      <Container\n        x={app.screen.width / 2}\n        y={app.screen.height / 2}\n        scale={scale()}\n      >\n        <Graphics // Non-pixel-line grid\n          x={-100}\n          y={-50}\n          ref={(g) =>\n            buildGrid(g).stroke({ color: 0xffffff, pixelLine: false })\n          }\n        />\n        <Graphics // Pixel-line grid\n          y={-50}\n          ref={(g) =>\n            buildGrid(g).stroke({ color: 0xffffff, pixelLine: true, width: 1 })\n          }\n        />\n      </Container>\n    </>\n  );\n};\n\nexport default function () {\n  return (\n    <Suspense fallback={<div>Loading</div>}>\n      <Application\n        antialias\n        resolution={devicePixelRatio}\n        width={800 / devicePixelRatio}\n        height={600 / devicePixelRatio}\n      >\n        <Example />\n      </Application>\n    </Suspense>\n  );\n}\n"],"names":["buildGrid","graphics","i","moveTo","lineTo","Example","app","useApp","scale","setScale","createSignal","ticks","onTick","Math","sin","_$createComponent","Text","y","x","text","style","fontSize","fill","color","ref","el","screen","width","Container","height","children","Graphics","g","stroke","pixelLine","Suspense","fallback","_tmpl$","Application","antialias","resolution","devicePixelRatio"],"mappings":";;;AAWA,SAASA,UAAUC,UAAyB;AAE1C,WAASC,IAAI,GAAGA,IAAI,IAAIA,KAAK;AAGxBC,aAAAA,OAAOD,IAAI,IAAI,CAAC,EAEhBE,OAAOF,IAAI,IAAI,GAAG;AAAA,EAAA;AAIvB,WAASA,IAAI,GAAGA,IAAI,IAAIA,KAAK;AAGxBC,aAAAA,OAAO,GAAGD,IAAI,EAAE,EAEhBE,OAAO,KAAKF,IAAI,EAAE;AAAA,EAAA;AAGhBD,SAAAA;AACT;AAEA,MAAMI,UAAqBA,MAAM;AAC/B,QAAMC,MAAMC,OAAO;AAEnB,QAAM,CAACC,OAAOC,QAAQ,IAAIC,aAAa,CAAC;AAExC,MAAIC,QAAQ;AAEZC,SAAO,MAAM;AACF,aAAA;AACTH,aAAS,KAAKI,KAAKC,IAAIH,KAAK,IAAI,KAAK,CAAC;AAAA,EAAA,CACvC;AAEDI,SAAAA,CAAAA,gBAEKC,MAAI;AAAA,IACHC,GAAG;AAAA,IACHC,GAAG;AAAA,IACHC,MAAI;AAAA,IACJC,OAAO;AAAA,MACLC,UAAU;AAAA,MACVC,MAAM;AAAA,QACJC,OAAO;AAAA,MAAA;AAAA,IACT;AAAA,EACF,CAACR,GAAAA,gBAEFC,MAAI;AAAA,IACHC,GAAG;AAAA,IAACO,KACEC,CAAO,OAAA;AAEXA,SAAGP,IAAIZ,IAAIoB,OAAOC,QAAQF,GAAGE,QAAQ;AAAA,IACvC;AAAA,IACAR,MAAI;AAAA,IACJC,OAAO;AAAA,MACLC,UAAU;AAAA,MACVC,MAAM;AAAA,QACJC,OAAO;AAAA,MAAA;AAAA,IACT;AAAA,EACF,CAACR,GAAAA,gBAEFa,WAAS;AAAA,IAAA,IACRV,IAAC;AAAEZ,aAAAA,IAAIoB,OAAOC,QAAQ;AAAA,IAAC;AAAA,IAAA,IACvBV,IAAC;AAAEX,aAAAA,IAAIoB,OAAOG,SAAS;AAAA,IAAC;AAAA,IAAA,IACxBrB,QAAK;AAAA,aAAEA,MAAM;AAAA,IAAC;AAAA,IAAA,IAAAsB,WAAA;AAAA,aAAAf,CAAAA;AAAAA,QAEbgB;AAAAA,QAAS;AAAA,UACRb,GAAG;AAAA,UACHD,GAAG;AAAA,UAAGO,KACAQ,CAAAA,MACJhC,UAAUgC,CAAC,EAAEC,OAAO;AAAA,YAAEV,OAAO;AAAA,YAAUW,WAAW;AAAA,UAAO,CAAA;AAAA,QAAA;AAAA,MAAC,GAAAnB;AAAAA,QAG7DgB;AAAAA,QAAS;AAAA,UACRd,GAAG;AAAA,UAAGO,KACAQ,CAAAA,MACJhC,UAAUgC,CAAC,EAAEC,OAAO;AAAA,YAAEV,OAAO;AAAA,YAAUW,WAAW;AAAA,YAAMP,OAAO;AAAA,UAAG,CAAA;AAAA,QAAA;AAAA,MAAC,CAAA;AAAA,IAAA;AAAA,EAAA,CAAA,CAAA;AAM/E;AAE2B,SAAA,YAAA;AACzB,SAAAZ,gBACGoB,UAAQ;AAAA,IAAA,IAACC,WAAQ;AAAA,aAAAC,OAAA;AAAA,IAAA;AAAA,IAAA,IAAAP,WAAA;AAAA,aAAAf,gBACfuB,aAAW;AAAA,QACVC,WAAS;AAAA,QACTC,YAAYC;AAAAA,QACZd,OAAO,MAAMc;AAAAA,QACbZ,QAAQ,MAAMY;AAAAA,QAAgB,IAAAX,WAAA;AAAAf,iBAAAA,gBAE7BV,SAAO,EAAA;AAAA,QAAA;AAAA,MAAA,CAAA;AAAA,IAAA;AAAA,EAAA,CAAA;AAIhB;"}