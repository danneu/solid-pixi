{"version":3,"mappings":"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","names":["a","b","s","value","c","v","p","error","e","o","context","children","memo","i","init","n","sources","k","insert","t","x","y","EventEmitter","l","j","d","out","a2","b2","identityMatrix","tempMatrix","idHash","_TextureStyle","_TextureSource","r","u","h","f","g","extend","_Color","colord","effect","uid","Container","Sprite","_Ticker","count","_VideoSource","cacheMap","_Spritesheet","out2","programCache","_GlProgram","_UniformGroup","_State","earcutModule","earcut","pointInTriangle","m","_AbstractRenderer","WebGPURenderer","WebGLRenderer","_Application","Application","_FillGradient","parse","path","x2","y2","tempRect","_Batcher","maxTextures","_DefaultBatcher","i2","y22","x22","tempTextureMatrix","_GraphicsContextSystem","RECURSION_LIMIT","FLT_EPSILON","PATH_DISTANCE_EPSILON","begin","recursive","ux","uy","vx","vy","w","_GraphicsContext","_TextStyle","_CanvasTextMetrics","j2","_DynamicBitmapFont","self","_MeshGeometry","_TilingSprite","TilingSprite","_PlaneGeometry","_RopeGeometry","_MeshRope","MeshRope","console","createLogger","assert","condition","msg","Error","ApplicationContext","createContext","useApp","app","useContext","onTick","callback","log","ticker","add","onCleanup","remove","Stage","props","stage","undefined","onscreenCanvas","canvas","OffscreenCanvas","HTMLCanvasElement","nodeProps","pixiProps","splitProps","createResource","PIXI","onMount","currentApp","ref","destroy","_$createComponent","Show","when","Provider","_$memo","_props","container","as","spread","_nodeProps","sprite","Text","text","pixiElement","Graphics","AnimatedSprite","BitmapText","MeshPlane"],"ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,218],"sources":["../../../node_modules/solid-js/dist/solid.js","../../../node_modules/solid-js/universal/dist/universal.js","../../../node_modules/pixi.js/lib/extensions/Extensions.mjs","../../../node_modules/pixi.js/lib/environment-browser/browserExt.mjs","../../../node_modules/pixi.js/lib/environment-webworker/webworkerExt.mjs","../../../node_modules/pixi.js/lib/maths/point/ObservablePoint.mjs","../../../node_modules/eventemitter3/index.js","../../../node_modules/pixi.js/lib/maths/misc/const.mjs","../../../node_modules/pixi.js/lib/maths/point/Point.mjs","../../../node_modules/pixi.js/lib/maths/matrix/Matrix.mjs","../../../node_modules/pixi.js/lib/maths/matrix/groupD8.mjs","../../../node_modules/pixi.js/lib/maths/shapes/Rectangle.mjs","../../../node_modules/pixi.js/lib/utils/data/uid.mjs","../../../node_modules/pixi.js/lib/utils/logging/deprecation.mjs","../../../node_modules/pixi.js/lib/utils/misc/NOOP.mjs","../../../node_modules/pixi.js/lib/maths/misc/pow2.mjs","../../../node_modules/pixi.js/lib/scene/container/utils/definedProps.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/shared/texture/TextureStyle.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/shared/texture/sources/TextureSource.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/shared/texture/sources/BufferImageSource.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/shared/texture/TextureMatrix.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/shared/texture/Texture.mjs","../../../node_modules/pixi.js/lib/utils/data/updateQuadBounds.mjs","../../../node_modules/pixi.js/lib/scene/container/bounds/Bounds.mjs","../../../node_modules/@pixi/colord/index.mjs","../../../node_modules/@pixi/colord/plugins/names.mjs","../../../node_modules/pixi.js/lib/color/Color.mjs","../../../node_modules/pixi.js/lib/culling/cullingMixin.mjs","../../../node_modules/pixi.js/lib/utils/pool/Pool.mjs","../../../node_modules/pixi.js/lib/utils/pool/PoolGroup.mjs","../../../node_modules/pixi.js/lib/scene/container/container-mixins/cacheAsTextureMixin.mjs","../../../node_modules/pixi.js/lib/utils/data/removeItems.mjs","../../../node_modules/pixi.js/lib/scene/container/container-mixins/childrenHelperMixin.mjs","../../../node_modules/pixi.js/lib/scene/container/container-mixins/collectRenderablesMixin.mjs","../../../node_modules/pixi.js/lib/filters/FilterEffect.mjs","../../../node_modules/pixi.js/lib/rendering/mask/MaskEffectManager.mjs","../../../node_modules/pixi.js/lib/scene/container/container-mixins/effectsMixin.mjs","../../../node_modules/pixi.js/lib/scene/container/container-mixins/findMixin.mjs","../../../node_modules/pixi.js/lib/scene/container/bounds/utils/matrixAndBoundsPool.mjs","../../../node_modules/pixi.js/lib/scene/container/container-mixins/getFastGlobalBoundsMixin.mjs","../../../node_modules/pixi.js/lib/scene/container/bounds/getGlobalBounds.mjs","../../../node_modules/pixi.js/lib/scene/container/utils/multiplyHexColors.mjs","../../../node_modules/pixi.js/lib/scene/container/utils/multiplyColors.mjs","../../../node_modules/pixi.js/lib/scene/container/container-mixins/getGlobalMixin.mjs","../../../node_modules/pixi.js/lib/utils/logging/warn.mjs","../../../node_modules/pixi.js/lib/scene/container/bounds/getLocalBounds.mjs","../../../node_modules/pixi.js/lib/scene/container/utils/checkChildrenDidChange.mjs","../../../node_modules/pixi.js/lib/scene/container/container-mixins/measureMixin.mjs","../../../node_modules/pixi.js/lib/scene/container/container-mixins/onRenderMixin.mjs","../../../node_modules/pixi.js/lib/scene/container/container-mixins/sortMixin.mjs","../../../node_modules/pixi.js/lib/scene/container/container-mixins/toLocalGlobalMixin.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/shared/instructions/InstructionSet.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/shared/texture/TexturePool.mjs","../../../node_modules/pixi.js/lib/scene/container/RenderGroup.mjs","../../../node_modules/pixi.js/lib/scene/container/utils/assignWithIgnore.mjs","../../../node_modules/pixi.js/lib/scene/container/Container.mjs","../../../node_modules/pixi.js/lib/scene/view/ViewContainer.mjs","../../../node_modules/pixi.js/lib/scene/sprite/Sprite.mjs","../../../node_modules/pixi.js/lib/rendering/mask/utils/addMaskBounds.mjs","../../../node_modules/pixi.js/lib/rendering/mask/utils/addMaskLocalBounds.mjs","../../../node_modules/pixi.js/lib/rendering/mask/alpha/AlphaMask.mjs","../../../node_modules/pixi.js/lib/rendering/mask/color/ColorMask.mjs","../../../node_modules/pixi.js/lib/rendering/mask/stencil/StencilMask.mjs","../../../node_modules/pixi.js/lib/environment-browser/BrowserAdapter.mjs","../../../node_modules/pixi.js/lib/environment/adapter.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/shared/texture/sources/CanvasSource.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/shared/texture/sources/ImageSource.mjs","../../../node_modules/pixi.js/lib/ticker/const.mjs","../../../node_modules/pixi.js/lib/ticker/TickerListener.mjs","../../../node_modules/pixi.js/lib/ticker/Ticker.mjs","../../../node_modules/pixi.js/lib/utils/browser/detectVideoAlphaMode.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/shared/texture/sources/VideoSource.mjs","../../../node_modules/pixi.js/lib/assets/utils/convertToList.mjs","../../../node_modules/pixi.js/lib/assets/cache/Cache.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/shared/texture/utils/textureFrom.mjs","../../../node_modules/pixi.js/lib/rendering/init.mjs","../../../node_modules/pixi.js/lib/assets/loader/parsers/LoaderParser.mjs","../../../node_modules/pixi.js/lib/utils/path.mjs","../../../node_modules/pixi.js/lib/assets/utils/createStringVariations.mjs","../../../node_modules/pixi.js/lib/assets/utils/isSingleItem.mjs","../../../node_modules/pixi.js/lib/assets/resolver/Resolver.mjs","../../../node_modules/pixi.js/lib/assets/utils/copySearchParams.mjs","../../../node_modules/pixi.js/lib/spritesheet/Spritesheet.mjs","../../../node_modules/pixi.js/lib/spritesheet/spritesheetAsset.mjs","../../../node_modules/pixi.js/lib/spritesheet/init.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/shared/utils/createIdFromString.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/getTestContext.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/getMaxFragmentPrecision.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/preprocessors/addProgramDefines.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/preprocessors/ensurePrecision.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/preprocessors/insertVersion.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/preprocessors/setProgramName.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/preprocessors/stripVersion.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/GlProgram.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/shared/geometry/utils/getAttributeInfoFromFormat.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/gpu/shader/utils/extractAttributesFromGpuProgram.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/gpu/shader/utils/extractStructAndGroups.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/shared/shader/const.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/gpu/shader/utils/generateGpuLayoutGroups.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/gpu/shader/utils/generateLayoutHash.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/gpu/shader/utils/removeStructAndGroupDuplicates.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/gpu/shader/GpuProgram.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/shared/shader/types.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/shared/shader/utils/getDefaultUniformValue.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/shared/shader/UniformGroup.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/gpu/shader/BindGroup.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/types.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/shared/shader/Shader.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/shared/state/State.mjs","../../../node_modules/pixi.js/lib/environment/autoDetectEnvironment.mjs","../../../node_modules/pixi.js/lib/utils/browser/unsafeEvalSupported.mjs","../../../node_modules/earcut/src/earcut.js","../../../node_modules/pixi.js/lib/rendering/renderers/gl/const.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/shared/system/SystemRunner.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/shared/system/AbstractRenderer.mjs","../../../node_modules/pixi.js/lib/utils/browser/isWebGLSupported.mjs","../../../node_modules/pixi.js/lib/utils/browser/isWebGPUSupported.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/autoDetectRenderer.mjs","../../../node_modules/pixi.js/lib/utils/const.mjs","../../../node_modules/pixi.js/lib/utils/global/globalHooks.mjs","../../../node_modules/pixi.js/lib/app/Application.mjs","../../../node_modules/pixi.js/lib/scene/text-bitmap/AbstractBitmapFont.mjs","../../../node_modules/pixi.js/lib/scene/graphics/shared/fill/FillGradient.mjs","../../../node_modules/pixi.js/lib/scene/graphics/shared/fill/FillPattern.mjs","../../../node_modules/parse-svg-path/index.js","../../../node_modules/pixi.js/lib/scene/graphics/shared/svg/parseSVGPath.mjs","../../../node_modules/pixi.js/lib/maths/shapes/Circle.mjs","../../../node_modules/pixi.js/lib/maths/shapes/Ellipse.mjs","../../../node_modules/pixi.js/lib/maths/misc/squaredDistanceToLineSegment.mjs","../../../node_modules/pixi.js/lib/maths/shapes/Polygon.mjs","../../../node_modules/pixi.js/lib/maths/shapes/RoundedRectangle.mjs","../../../node_modules/pixi.js/lib/rendering/batcher/gl/utils/checkMaxIfStatementsInShader.mjs","../../../node_modules/pixi.js/lib/rendering/batcher/gl/utils/maxRecommendedTextures.mjs","../../../node_modules/pixi.js/lib/rendering/batcher/gpu/getTextureBatchBindGroup.mjs","../../../node_modules/pixi.js/lib/utils/data/ViewableBuffer.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/shared/buffer/utils/fastCopy.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/shared/state/const.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/shared/state/getAdjustedBlendModeBlend.mjs","../../../node_modules/pixi.js/lib/rendering/batcher/shared/BatchTextureArray.mjs","../../../node_modules/pixi.js/lib/rendering/batcher/shared/Batcher.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/shared/buffer/const.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/shared/buffer/Buffer.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/shared/geometry/utils/ensureIsBuffer.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/shared/geometry/utils/getGeometryBounds.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/shared/geometry/Geometry.mjs","../../../node_modules/pixi.js/lib/rendering/batcher/shared/BatchGeometry.mjs","../../../node_modules/pixi.js/lib/rendering/high-shader/compiler/utils/addBits.mjs","../../../node_modules/pixi.js/lib/rendering/high-shader/compiler/utils/compileHooks.mjs","../../../node_modules/pixi.js/lib/rendering/high-shader/compiler/utils/compileInputs.mjs","../../../node_modules/pixi.js/lib/rendering/high-shader/compiler/utils/compileOutputs.mjs","../../../node_modules/pixi.js/lib/rendering/high-shader/compiler/utils/injectBits.mjs","../../../node_modules/pixi.js/lib/rendering/high-shader/compiler/compileHighShader.mjs","../../../node_modules/pixi.js/lib/rendering/high-shader/defaultProgramTemplate.mjs","../../../node_modules/pixi.js/lib/rendering/high-shader/shader-bits/globalUniformsBit.mjs","../../../node_modules/pixi.js/lib/rendering/high-shader/compileHighShaderToProgram.mjs","../../../node_modules/pixi.js/lib/rendering/high-shader/shader-bits/colorBit.mjs","../../../node_modules/pixi.js/lib/rendering/high-shader/shader-bits/generateTextureBatchBit.mjs","../../../node_modules/pixi.js/lib/rendering/high-shader/shader-bits/roundPixelsBit.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/gl/shader/getBatchSamplersUniformGroup.mjs","../../../node_modules/pixi.js/lib/rendering/batcher/shared/DefaultShader.mjs","../../../node_modules/pixi.js/lib/rendering/batcher/shared/DefaultBatcher.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/shared/geometry/utils/buildUvs.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/shared/geometry/utils/transformVertices.mjs","../../../node_modules/pixi.js/lib/scene/graphics/shared/BatchableGraphics.mjs","../../../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildCircle.mjs","../../../node_modules/pixi.js/lib/scene/graphics/shared/const.mjs","../../../node_modules/pixi.js/lib/scene/graphics/shared/utils/getOrientationOfPoints.mjs","../../../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildLine.mjs","../../../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildPixelLine.mjs","../../../node_modules/pixi.js/lib/scene/graphics/shared/utils/triangulateWithHoles.mjs","../../../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildPolygon.mjs","../../../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildRectangle.mjs","../../../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildTriangle.mjs","../../../node_modules/pixi.js/lib/scene/graphics/shared/utils/generateTextureFillMatrix.mjs","../../../node_modules/pixi.js/lib/scene/graphics/shared/utils/buildContextBatches.mjs","../../../node_modules/pixi.js/lib/scene/graphics/shared/GraphicsContextSystem.mjs","../../../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildAdaptiveBezier.mjs","../../../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildAdaptiveQuadratic.mjs","../../../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildArc.mjs","../../../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildArcTo.mjs","../../../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildArcToSvg.mjs","../../../node_modules/pixi.js/lib/scene/graphics/shared/path/roundShape.mjs","../../../node_modules/pixi.js/lib/scene/graphics/shared/path/ShapePath.mjs","../../../node_modules/pixi.js/lib/scene/graphics/shared/path/GraphicsPath.mjs","../../../node_modules/pixi.js/lib/scene/graphics/shared/svg/parseSVGFloatAttribute.mjs","../../../node_modules/pixi.js/lib/scene/graphics/shared/svg/parseSVGDefinitions.mjs","../../../node_modules/pixi.js/lib/scene/graphics/shared/svg/utils/extractSvgUrlId.mjs","../../../node_modules/pixi.js/lib/scene/graphics/shared/svg/parseSVGStyle.mjs","../../../node_modules/pixi.js/lib/scene/graphics/shared/svg/SVGParser.mjs","../../../node_modules/pixi.js/lib/scene/graphics/shared/utils/convertFillInputToFillStyle.mjs","../../../node_modules/pixi.js/lib/scene/graphics/shared/GraphicsContext.mjs","../../../node_modules/pixi.js/lib/scene/text/utils/generateTextStyleKey.mjs","../../../node_modules/pixi.js/lib/scene/text/TextStyle.mjs","../../../node_modules/pixi.js/lib/rendering/renderers/shared/texture/CanvasPool.mjs","../../../node_modules/pixi.js/lib/scene/text/canvas/utils/fontStringFromTextStyle.mjs","../../../node_modules/pixi.js/lib/scene/text/canvas/CanvasTextMetrics.mjs","../../../node_modules/pixi.js/lib/scene/text/canvas/utils/getCanvasFillStyle.mjs","../../../node_modules/pixi.js/lib/scene/text-bitmap/utils/resolveCharacters.mjs","../../../node_modules/pixi.js/lib/scene/text-bitmap/DynamicBitmapFont.mjs","../../../node_modules/pixi.js/lib/scene/text-bitmap/utils/getBitmapTextLayout.mjs","../../../node_modules/pixi.js/lib/scene/text-bitmap/BitmapFontManager.mjs","../../../node_modules/pixi.js/lib/maths/point/pointInTriangle.mjs","../../../node_modules/pixi.js/lib/scene/graphics/shared/Graphics.mjs","../../../node_modules/pixi.js/lib/scene/mesh/shared/MeshGeometry.mjs","../../../node_modules/pixi.js/lib/scene/mesh/shared/Mesh.mjs","../../../node_modules/pixi.js/lib/scene/sprite-animated/AnimatedSprite.mjs","../../../node_modules/pixi.js/lib/utils/misc/Transform.mjs","../../../node_modules/pixi.js/lib/scene/sprite-tiling/TilingSprite.mjs","../../../node_modules/pixi.js/lib/scene/text/AbstractText.mjs","../../../node_modules/pixi.js/lib/scene/text/Text.mjs","../../../node_modules/pixi.js/lib/scene/text-bitmap/BitmapText.mjs","../../../node_modules/pixi.js/lib/scene/mesh-plane/PlaneGeometry.mjs","../../../node_modules/pixi.js/lib/scene/mesh-plane/MeshPlane.mjs","../../../node_modules/pixi.js/lib/scene/mesh-simple/RopeGeometry.mjs","../../../node_modules/pixi.js/lib/scene/mesh-simple/MeshRope.mjs","../../../node_modules/pixi.js/lib/index.mjs","../../../src/debug.ts","../../../src/runtime.ts","../../../node_modules/solid-js/web/dist/web.js","../../../src/pixi.tsx"],"sourcesContent":["let taskIdCounter = 1,\n  isCallbackScheduled = false,\n  isPerformingWork = false,\n  taskQueue = [],\n  currentTask = null,\n  shouldYieldToHost = null,\n  yieldInterval = 5,\n  deadline = 0,\n  maxYieldInterval = 300,\n  scheduleCallback = null,\n  scheduledCallback = null;\nconst maxSigned31BitInt = 1073741823;\nfunction setupScheduler() {\n  const channel = new MessageChannel(),\n    port = channel.port2;\n  scheduleCallback = () => port.postMessage(null);\n  channel.port1.onmessage = () => {\n    if (scheduledCallback !== null) {\n      const currentTime = performance.now();\n      deadline = currentTime + yieldInterval;\n      const hasTimeRemaining = true;\n      try {\n        const hasMoreWork = scheduledCallback(hasTimeRemaining, currentTime);\n        if (!hasMoreWork) {\n          scheduledCallback = null;\n        } else port.postMessage(null);\n      } catch (error) {\n        port.postMessage(null);\n        throw error;\n      }\n    }\n  };\n  if (navigator && navigator.scheduling && navigator.scheduling.isInputPending) {\n    const scheduling = navigator.scheduling;\n    shouldYieldToHost = () => {\n      const currentTime = performance.now();\n      if (currentTime >= deadline) {\n        if (scheduling.isInputPending()) {\n          return true;\n        }\n        return currentTime >= maxYieldInterval;\n      } else {\n        return false;\n      }\n    };\n  } else {\n    shouldYieldToHost = () => performance.now() >= deadline;\n  }\n}\nfunction enqueue(taskQueue, task) {\n  function findIndex() {\n    let m = 0;\n    let n = taskQueue.length - 1;\n    while (m <= n) {\n      const k = n + m >> 1;\n      const cmp = task.expirationTime - taskQueue[k].expirationTime;\n      if (cmp > 0) m = k + 1;else if (cmp < 0) n = k - 1;else return k;\n    }\n    return m;\n  }\n  taskQueue.splice(findIndex(), 0, task);\n}\nfunction requestCallback(fn, options) {\n  if (!scheduleCallback) setupScheduler();\n  let startTime = performance.now(),\n    timeout = maxSigned31BitInt;\n  if (options && options.timeout) timeout = options.timeout;\n  const newTask = {\n    id: taskIdCounter++,\n    fn,\n    startTime,\n    expirationTime: startTime + timeout\n  };\n  enqueue(taskQueue, newTask);\n  if (!isCallbackScheduled && !isPerformingWork) {\n    isCallbackScheduled = true;\n    scheduledCallback = flushWork;\n    scheduleCallback();\n  }\n  return newTask;\n}\nfunction cancelCallback(task) {\n  task.fn = null;\n}\nfunction flushWork(hasTimeRemaining, initialTime) {\n  isCallbackScheduled = false;\n  isPerformingWork = true;\n  try {\n    return workLoop(hasTimeRemaining, initialTime);\n  } finally {\n    currentTask = null;\n    isPerformingWork = false;\n  }\n}\nfunction workLoop(hasTimeRemaining, initialTime) {\n  let currentTime = initialTime;\n  currentTask = taskQueue[0] || null;\n  while (currentTask !== null) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      break;\n    }\n    const callback = currentTask.fn;\n    if (callback !== null) {\n      currentTask.fn = null;\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      callback(didUserCallbackTimeout);\n      currentTime = performance.now();\n      if (currentTask === taskQueue[0]) {\n        taskQueue.shift();\n      }\n    } else taskQueue.shift();\n    currentTask = taskQueue[0] || null;\n  }\n  return currentTask !== null;\n}\n\nconst sharedConfig = {\n  context: undefined,\n  registry: undefined,\n  effects: undefined,\n  done: false,\n  getContextId() {\n    return getContextId(this.context.count);\n  },\n  getNextContextId() {\n    return getContextId(this.context.count++);\n  }\n};\nfunction getContextId(count) {\n  const num = String(count),\n    len = num.length - 1;\n  return sharedConfig.context.id + (len ? String.fromCharCode(96 + len) : \"\") + num;\n}\nfunction setHydrateContext(context) {\n  sharedConfig.context = context;\n}\nfunction nextHydrateContext() {\n  return {\n    ...sharedConfig.context,\n    id: sharedConfig.getNextContextId(),\n    count: 0\n  };\n}\n\nconst IS_DEV = false;\nconst equalFn = (a, b) => a === b;\nconst $PROXY = Symbol(\"solid-proxy\");\nconst SUPPORTS_PROXY = typeof Proxy === \"function\";\nconst $TRACK = Symbol(\"solid-track\");\nconst $DEVCOMP = Symbol(\"solid-dev-component\");\nconst signalOptions = {\n  equals: equalFn\n};\nlet ERROR = null;\nlet runEffects = runQueue;\nconst STALE = 1;\nconst PENDING = 2;\nconst UNOWNED = {\n  owned: null,\n  cleanups: null,\n  context: null,\n  owner: null\n};\nconst NO_INIT = {};\nvar Owner = null;\nlet Transition = null;\nlet Scheduler = null;\nlet ExternalSourceConfig = null;\nlet Listener = null;\nlet Updates = null;\nlet Effects = null;\nlet ExecCount = 0;\nfunction createRoot(fn, detachedOwner) {\n  const listener = Listener,\n    owner = Owner,\n    unowned = fn.length === 0,\n    current = detachedOwner === undefined ? owner : detachedOwner,\n    root = unowned ? UNOWNED : {\n      owned: null,\n      cleanups: null,\n      context: current ? current.context : null,\n      owner: current\n    },\n    updateFn = unowned ? fn : () => fn(() => untrack(() => cleanNode(root)));\n  Owner = root;\n  Listener = null;\n  try {\n    return runUpdates(updateFn, true);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n}\nfunction createSignal(value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const s = {\n    value,\n    observers: null,\n    observerSlots: null,\n    comparator: options.equals || undefined\n  };\n  const setter = value => {\n    if (typeof value === \"function\") {\n      if (Transition && Transition.running && Transition.sources.has(s)) value = value(s.tValue);else value = value(s.value);\n    }\n    return writeSignal(s, value);\n  };\n  return [readSignal.bind(s), setter];\n}\nfunction createComputed(fn, value, options) {\n  const c = createComputation(fn, value, true, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\n}\nfunction createRenderEffect(fn, value, options) {\n  const c = createComputation(fn, value, false, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\n}\nfunction createEffect(fn, value, options) {\n  runEffects = runUserEffects;\n  const c = createComputation(fn, value, false, STALE),\n    s = SuspenseContext && useContext(SuspenseContext);\n  if (s) c.suspense = s;\n  if (!options || !options.render) c.user = true;\n  Effects ? Effects.push(c) : updateComputation(c);\n}\nfunction createReaction(onInvalidate, options) {\n  let fn;\n  const c = createComputation(() => {\n      fn ? fn() : untrack(onInvalidate);\n      fn = undefined;\n    }, undefined, false, 0),\n    s = SuspenseContext && useContext(SuspenseContext);\n  if (s) c.suspense = s;\n  c.user = true;\n  return tracking => {\n    fn = tracking;\n    updateComputation(c);\n  };\n}\nfunction createMemo(fn, value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const c = createComputation(fn, value, true, 0);\n  c.observers = null;\n  c.observerSlots = null;\n  c.comparator = options.equals || undefined;\n  if (Scheduler && Transition && Transition.running) {\n    c.tState = STALE;\n    Updates.push(c);\n  } else updateComputation(c);\n  return readSignal.bind(c);\n}\nfunction isPromise(v) {\n  return v && typeof v === \"object\" && \"then\" in v;\n}\nfunction createResource(pSource, pFetcher, pOptions) {\n  let source;\n  let fetcher;\n  let options;\n  if (typeof pFetcher === \"function\") {\n    source = pSource;\n    fetcher = pFetcher;\n    options = pOptions || {};\n  } else {\n    source = true;\n    fetcher = pSource;\n    options = pFetcher || {};\n  }\n  let pr = null,\n    initP = NO_INIT,\n    id = null,\n    loadedUnderTransition = false,\n    scheduled = false,\n    resolved = \"initialValue\" in options,\n    dynamic = typeof source === \"function\" && createMemo(source);\n  const contexts = new Set(),\n    [value, setValue] = (options.storage || createSignal)(options.initialValue),\n    [error, setError] = createSignal(undefined),\n    [track, trigger] = createSignal(undefined, {\n      equals: false\n    }),\n    [state, setState] = createSignal(resolved ? \"ready\" : \"unresolved\");\n  if (sharedConfig.context) {\n    id = sharedConfig.getNextContextId();\n    if (options.ssrLoadFrom === \"initial\") initP = options.initialValue;else if (sharedConfig.load && sharedConfig.has(id)) initP = sharedConfig.load(id);\n  }\n  function loadEnd(p, v, error, key) {\n    if (pr === p) {\n      pr = null;\n      key !== undefined && (resolved = true);\n      if ((p === initP || v === initP) && options.onHydrated) queueMicrotask(() => options.onHydrated(key, {\n        value: v\n      }));\n      initP = NO_INIT;\n      if (Transition && p && loadedUnderTransition) {\n        Transition.promises.delete(p);\n        loadedUnderTransition = false;\n        runUpdates(() => {\n          Transition.running = true;\n          completeLoad(v, error);\n        }, false);\n      } else completeLoad(v, error);\n    }\n    return v;\n  }\n  function completeLoad(v, err) {\n    runUpdates(() => {\n      if (err === undefined) setValue(() => v);\n      setState(err !== undefined ? \"errored\" : resolved ? \"ready\" : \"unresolved\");\n      setError(err);\n      for (const c of contexts.keys()) c.decrement();\n      contexts.clear();\n    }, false);\n  }\n  function read() {\n    const c = SuspenseContext && useContext(SuspenseContext),\n      v = value(),\n      err = error();\n    if (err !== undefined && !pr) throw err;\n    if (Listener && !Listener.user && c) {\n      createComputed(() => {\n        track();\n        if (pr) {\n          if (c.resolved && Transition && loadedUnderTransition) Transition.promises.add(pr);else if (!contexts.has(c)) {\n            c.increment();\n            contexts.add(c);\n          }\n        }\n      });\n    }\n    return v;\n  }\n  function load(refetching = true) {\n    if (refetching !== false && scheduled) return;\n    scheduled = false;\n    const lookup = dynamic ? dynamic() : source;\n    loadedUnderTransition = Transition && Transition.running;\n    if (lookup == null || lookup === false) {\n      loadEnd(pr, untrack(value));\n      return;\n    }\n    if (Transition && pr) Transition.promises.delete(pr);\n    let error;\n    const p = initP !== NO_INIT ? initP : untrack(() => {\n      try {\n        return fetcher(lookup, {\n          value: value(),\n          refetching\n        });\n      } catch (fetcherError) {\n        error = fetcherError;\n      }\n    });\n    if (error !== undefined) {\n      loadEnd(pr, undefined, castError(error), lookup);\n      return;\n    } else if (!isPromise(p)) {\n      loadEnd(pr, p, undefined, lookup);\n      return p;\n    }\n    pr = p;\n    if (\"v\" in p) {\n      if (p.s === 1) loadEnd(pr, p.v, undefined, lookup);else loadEnd(pr, undefined, castError(p.v), lookup);\n      return p;\n    }\n    scheduled = true;\n    queueMicrotask(() => scheduled = false);\n    runUpdates(() => {\n      setState(resolved ? \"refreshing\" : \"pending\");\n      trigger();\n    }, false);\n    return p.then(v => loadEnd(p, v, undefined, lookup), e => loadEnd(p, undefined, castError(e), lookup));\n  }\n  Object.defineProperties(read, {\n    state: {\n      get: () => state()\n    },\n    error: {\n      get: () => error()\n    },\n    loading: {\n      get() {\n        const s = state();\n        return s === \"pending\" || s === \"refreshing\";\n      }\n    },\n    latest: {\n      get() {\n        if (!resolved) return read();\n        const err = error();\n        if (err && !pr) throw err;\n        return value();\n      }\n    }\n  });\n  let owner = Owner;\n  if (dynamic) createComputed(() => (owner = Owner, load(false)));else load(false);\n  return [read, {\n    refetch: info => runWithOwner(owner, () => load(info)),\n    mutate: setValue\n  }];\n}\nfunction createDeferred(source, options) {\n  let t,\n    timeout = options ? options.timeoutMs : undefined;\n  const node = createComputation(() => {\n    if (!t || !t.fn) t = requestCallback(() => setDeferred(() => node.value), timeout !== undefined ? {\n      timeout\n    } : undefined);\n    return source();\n  }, undefined, true);\n  const [deferred, setDeferred] = createSignal(Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value, options);\n  updateComputation(node);\n  setDeferred(() => Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value);\n  return deferred;\n}\nfunction createSelector(source, fn = equalFn, options) {\n  const subs = new Map();\n  const node = createComputation(p => {\n    const v = source();\n    for (const [key, val] of subs.entries()) if (fn(key, v) !== fn(key, p)) {\n      for (const c of val.values()) {\n        c.state = STALE;\n        if (c.pure) Updates.push(c);else Effects.push(c);\n      }\n    }\n    return v;\n  }, undefined, true, STALE);\n  updateComputation(node);\n  return key => {\n    const listener = Listener;\n    if (listener) {\n      let l;\n      if (l = subs.get(key)) l.add(listener);else subs.set(key, l = new Set([listener]));\n      onCleanup(() => {\n        l.delete(listener);\n        !l.size && subs.delete(key);\n      });\n    }\n    return fn(key, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value);\n  };\n}\nfunction batch(fn) {\n  return runUpdates(fn, false);\n}\nfunction untrack(fn) {\n  if (!ExternalSourceConfig && Listener === null) return fn();\n  const listener = Listener;\n  Listener = null;\n  try {\n    if (ExternalSourceConfig) return ExternalSourceConfig.untrack(fn);\n    return fn();\n  } finally {\n    Listener = listener;\n  }\n}\nfunction on(deps, fn, options) {\n  const isArray = Array.isArray(deps);\n  let prevInput;\n  let defer = options && options.defer;\n  return prevValue => {\n    let input;\n    if (isArray) {\n      input = Array(deps.length);\n      for (let i = 0; i < deps.length; i++) input[i] = deps[i]();\n    } else input = deps();\n    if (defer) {\n      defer = false;\n      return prevValue;\n    }\n    const result = untrack(() => fn(input, prevInput, prevValue));\n    prevInput = input;\n    return result;\n  };\n}\nfunction onMount(fn) {\n  createEffect(() => untrack(fn));\n}\nfunction onCleanup(fn) {\n  if (Owner === null) ;else if (Owner.cleanups === null) Owner.cleanups = [fn];else Owner.cleanups.push(fn);\n  return fn;\n}\nfunction catchError(fn, handler) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  Owner = createComputation(undefined, undefined, true);\n  Owner.context = {\n    ...Owner.context,\n    [ERROR]: [handler]\n  };\n  if (Transition && Transition.running) Transition.sources.add(Owner);\n  try {\n    return fn();\n  } catch (err) {\n    handleError(err);\n  } finally {\n    Owner = Owner.owner;\n  }\n}\nfunction getListener() {\n  return Listener;\n}\nfunction getOwner() {\n  return Owner;\n}\nfunction runWithOwner(o, fn) {\n  const prev = Owner;\n  const prevListener = Listener;\n  Owner = o;\n  Listener = null;\n  try {\n    return runUpdates(fn, true);\n  } catch (err) {\n    handleError(err);\n  } finally {\n    Owner = prev;\n    Listener = prevListener;\n  }\n}\nfunction enableScheduling(scheduler = requestCallback) {\n  Scheduler = scheduler;\n}\nfunction startTransition(fn) {\n  if (Transition && Transition.running) {\n    fn();\n    return Transition.done;\n  }\n  const l = Listener;\n  const o = Owner;\n  return Promise.resolve().then(() => {\n    Listener = l;\n    Owner = o;\n    let t;\n    if (Scheduler || SuspenseContext) {\n      t = Transition || (Transition = {\n        sources: new Set(),\n        effects: [],\n        promises: new Set(),\n        disposed: new Set(),\n        queue: new Set(),\n        running: true\n      });\n      t.done || (t.done = new Promise(res => t.resolve = res));\n      t.running = true;\n    }\n    runUpdates(fn, false);\n    Listener = Owner = null;\n    return t ? t.done : undefined;\n  });\n}\nconst [transPending, setTransPending] = /*@__PURE__*/createSignal(false);\nfunction useTransition() {\n  return [transPending, startTransition];\n}\nfunction resumeEffects(e) {\n  Effects.push.apply(Effects, e);\n  e.length = 0;\n}\nfunction createContext(defaultValue, options) {\n  const id = Symbol(\"context\");\n  return {\n    id,\n    Provider: createProvider(id),\n    defaultValue\n  };\n}\nfunction useContext(context) {\n  let value;\n  return Owner && Owner.context && (value = Owner.context[context.id]) !== undefined ? value : context.defaultValue;\n}\nfunction children(fn) {\n  const children = createMemo(fn);\n  const memo = createMemo(() => resolveChildren(children()));\n  memo.toArray = () => {\n    const c = memo();\n    return Array.isArray(c) ? c : c != null ? [c] : [];\n  };\n  return memo;\n}\nlet SuspenseContext;\nfunction getSuspenseContext() {\n  return SuspenseContext || (SuspenseContext = createContext());\n}\nfunction enableExternalSource(factory, untrack = fn => fn()) {\n  if (ExternalSourceConfig) {\n    const {\n      factory: oldFactory,\n      untrack: oldUntrack\n    } = ExternalSourceConfig;\n    ExternalSourceConfig = {\n      factory: (fn, trigger) => {\n        const oldSource = oldFactory(fn, trigger);\n        const source = factory(x => oldSource.track(x), trigger);\n        return {\n          track: x => source.track(x),\n          dispose() {\n            source.dispose();\n            oldSource.dispose();\n          }\n        };\n      },\n      untrack: fn => oldUntrack(() => untrack(fn))\n    };\n  } else {\n    ExternalSourceConfig = {\n      factory,\n      untrack\n    };\n  }\n}\nfunction readSignal() {\n  const runningTransition = Transition && Transition.running;\n  if (this.sources && (runningTransition ? this.tState : this.state)) {\n    if ((runningTransition ? this.tState : this.state) === STALE) updateComputation(this);else {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(this), false);\n      Updates = updates;\n    }\n  }\n  if (Listener) {\n    const sSlot = this.observers ? this.observers.length : 0;\n    if (!Listener.sources) {\n      Listener.sources = [this];\n      Listener.sourceSlots = [sSlot];\n    } else {\n      Listener.sources.push(this);\n      Listener.sourceSlots.push(sSlot);\n    }\n    if (!this.observers) {\n      this.observers = [Listener];\n      this.observerSlots = [Listener.sources.length - 1];\n    } else {\n      this.observers.push(Listener);\n      this.observerSlots.push(Listener.sources.length - 1);\n    }\n  }\n  if (runningTransition && Transition.sources.has(this)) return this.tValue;\n  return this.value;\n}\nfunction writeSignal(node, value, isComp) {\n  let current = Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value;\n  if (!node.comparator || !node.comparator(current, value)) {\n    if (Transition) {\n      const TransitionRunning = Transition.running;\n      if (TransitionRunning || !isComp && Transition.sources.has(node)) {\n        Transition.sources.add(node);\n        node.tValue = value;\n      }\n      if (!TransitionRunning) node.value = value;\n    } else node.value = value;\n    if (node.observers && node.observers.length) {\n      runUpdates(() => {\n        for (let i = 0; i < node.observers.length; i += 1) {\n          const o = node.observers[i];\n          const TransitionRunning = Transition && Transition.running;\n          if (TransitionRunning && Transition.disposed.has(o)) continue;\n          if (TransitionRunning ? !o.tState : !o.state) {\n            if (o.pure) Updates.push(o);else Effects.push(o);\n            if (o.observers) markDownstream(o);\n          }\n          if (!TransitionRunning) o.state = STALE;else o.tState = STALE;\n        }\n        if (Updates.length > 10e5) {\n          Updates = [];\n          if (IS_DEV) ;\n          throw new Error();\n        }\n      }, false);\n    }\n  }\n  return value;\n}\nfunction updateComputation(node) {\n  if (!node.fn) return;\n  cleanNode(node);\n  const time = ExecCount;\n  runComputation(node, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value, time);\n  if (Transition && !Transition.running && Transition.sources.has(node)) {\n    queueMicrotask(() => {\n      runUpdates(() => {\n        Transition && (Transition.running = true);\n        Listener = Owner = node;\n        runComputation(node, node.tValue, time);\n        Listener = Owner = null;\n      }, false);\n    });\n  }\n}\nfunction runComputation(node, value, time) {\n  let nextValue;\n  const owner = Owner,\n    listener = Listener;\n  Listener = Owner = node;\n  try {\n    nextValue = node.fn(value);\n  } catch (err) {\n    if (node.pure) {\n      if (Transition && Transition.running) {\n        node.tState = STALE;\n        node.tOwned && node.tOwned.forEach(cleanNode);\n        node.tOwned = undefined;\n      } else {\n        node.state = STALE;\n        node.owned && node.owned.forEach(cleanNode);\n        node.owned = null;\n      }\n    }\n    node.updatedAt = time + 1;\n    return handleError(err);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n  if (!node.updatedAt || node.updatedAt <= time) {\n    if (node.updatedAt != null && \"observers\" in node) {\n      writeSignal(node, nextValue, true);\n    } else if (Transition && Transition.running && node.pure) {\n      Transition.sources.add(node);\n      node.tValue = nextValue;\n    } else node.value = nextValue;\n    node.updatedAt = time;\n  }\n}\nfunction createComputation(fn, init, pure, state = STALE, options) {\n  const c = {\n    fn,\n    state: state,\n    updatedAt: null,\n    owned: null,\n    sources: null,\n    sourceSlots: null,\n    cleanups: null,\n    value: init,\n    owner: Owner,\n    context: Owner ? Owner.context : null,\n    pure\n  };\n  if (Transition && Transition.running) {\n    c.state = 0;\n    c.tState = state;\n  }\n  if (Owner === null) ;else if (Owner !== UNOWNED) {\n    if (Transition && Transition.running && Owner.pure) {\n      if (!Owner.tOwned) Owner.tOwned = [c];else Owner.tOwned.push(c);\n    } else {\n      if (!Owner.owned) Owner.owned = [c];else Owner.owned.push(c);\n    }\n  }\n  if (ExternalSourceConfig && c.fn) {\n    const [track, trigger] = createSignal(undefined, {\n      equals: false\n    });\n    const ordinary = ExternalSourceConfig.factory(c.fn, trigger);\n    onCleanup(() => ordinary.dispose());\n    const triggerInTransition = () => startTransition(trigger).then(() => inTransition.dispose());\n    const inTransition = ExternalSourceConfig.factory(c.fn, triggerInTransition);\n    c.fn = x => {\n      track();\n      return Transition && Transition.running ? inTransition.track(x) : ordinary.track(x);\n    };\n  }\n  return c;\n}\nfunction runTop(node) {\n  const runningTransition = Transition && Transition.running;\n  if ((runningTransition ? node.tState : node.state) === 0) return;\n  if ((runningTransition ? node.tState : node.state) === PENDING) return lookUpstream(node);\n  if (node.suspense && untrack(node.suspense.inFallback)) return node.suspense.effects.push(node);\n  const ancestors = [node];\n  while ((node = node.owner) && (!node.updatedAt || node.updatedAt < ExecCount)) {\n    if (runningTransition && Transition.disposed.has(node)) return;\n    if (runningTransition ? node.tState : node.state) ancestors.push(node);\n  }\n  for (let i = ancestors.length - 1; i >= 0; i--) {\n    node = ancestors[i];\n    if (runningTransition) {\n      let top = node,\n        prev = ancestors[i + 1];\n      while ((top = top.owner) && top !== prev) {\n        if (Transition.disposed.has(top)) return;\n      }\n    }\n    if ((runningTransition ? node.tState : node.state) === STALE) {\n      updateComputation(node);\n    } else if ((runningTransition ? node.tState : node.state) === PENDING) {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(node, ancestors[0]), false);\n      Updates = updates;\n    }\n  }\n}\nfunction runUpdates(fn, init) {\n  if (Updates) return fn();\n  let wait = false;\n  if (!init) Updates = [];\n  if (Effects) wait = true;else Effects = [];\n  ExecCount++;\n  try {\n    const res = fn();\n    completeUpdates(wait);\n    return res;\n  } catch (err) {\n    if (!wait) Effects = null;\n    Updates = null;\n    handleError(err);\n  }\n}\nfunction completeUpdates(wait) {\n  if (Updates) {\n    if (Scheduler && Transition && Transition.running) scheduleQueue(Updates);else runQueue(Updates);\n    Updates = null;\n  }\n  if (wait) return;\n  let res;\n  if (Transition) {\n    if (!Transition.promises.size && !Transition.queue.size) {\n      const sources = Transition.sources;\n      const disposed = Transition.disposed;\n      Effects.push.apply(Effects, Transition.effects);\n      res = Transition.resolve;\n      for (const e of Effects) {\n        \"tState\" in e && (e.state = e.tState);\n        delete e.tState;\n      }\n      Transition = null;\n      runUpdates(() => {\n        for (const d of disposed) cleanNode(d);\n        for (const v of sources) {\n          v.value = v.tValue;\n          if (v.owned) {\n            for (let i = 0, len = v.owned.length; i < len; i++) cleanNode(v.owned[i]);\n          }\n          if (v.tOwned) v.owned = v.tOwned;\n          delete v.tValue;\n          delete v.tOwned;\n          v.tState = 0;\n        }\n        setTransPending(false);\n      }, false);\n    } else if (Transition.running) {\n      Transition.running = false;\n      Transition.effects.push.apply(Transition.effects, Effects);\n      Effects = null;\n      setTransPending(true);\n      return;\n    }\n  }\n  const e = Effects;\n  Effects = null;\n  if (e.length) runUpdates(() => runEffects(e), false);\n  if (res) res();\n}\nfunction runQueue(queue) {\n  for (let i = 0; i < queue.length; i++) runTop(queue[i]);\n}\nfunction scheduleQueue(queue) {\n  for (let i = 0; i < queue.length; i++) {\n    const item = queue[i];\n    const tasks = Transition.queue;\n    if (!tasks.has(item)) {\n      tasks.add(item);\n      Scheduler(() => {\n        tasks.delete(item);\n        runUpdates(() => {\n          Transition.running = true;\n          runTop(item);\n        }, false);\n        Transition && (Transition.running = false);\n      });\n    }\n  }\n}\nfunction runUserEffects(queue) {\n  let i,\n    userLength = 0;\n  for (i = 0; i < queue.length; i++) {\n    const e = queue[i];\n    if (!e.user) runTop(e);else queue[userLength++] = e;\n  }\n  if (sharedConfig.context) {\n    if (sharedConfig.count) {\n      sharedConfig.effects || (sharedConfig.effects = []);\n      sharedConfig.effects.push(...queue.slice(0, userLength));\n      return;\n    }\n    setHydrateContext();\n  }\n  if (sharedConfig.effects && (sharedConfig.done || !sharedConfig.count)) {\n    queue = [...sharedConfig.effects, ...queue];\n    userLength += sharedConfig.effects.length;\n    delete sharedConfig.effects;\n  }\n  for (i = 0; i < userLength; i++) runTop(queue[i]);\n}\nfunction lookUpstream(node, ignore) {\n  const runningTransition = Transition && Transition.running;\n  if (runningTransition) node.tState = 0;else node.state = 0;\n  for (let i = 0; i < node.sources.length; i += 1) {\n    const source = node.sources[i];\n    if (source.sources) {\n      const state = runningTransition ? source.tState : source.state;\n      if (state === STALE) {\n        if (source !== ignore && (!source.updatedAt || source.updatedAt < ExecCount)) runTop(source);\n      } else if (state === PENDING) lookUpstream(source, ignore);\n    }\n  }\n}\nfunction markDownstream(node) {\n  const runningTransition = Transition && Transition.running;\n  for (let i = 0; i < node.observers.length; i += 1) {\n    const o = node.observers[i];\n    if (runningTransition ? !o.tState : !o.state) {\n      if (runningTransition) o.tState = PENDING;else o.state = PENDING;\n      if (o.pure) Updates.push(o);else Effects.push(o);\n      o.observers && markDownstream(o);\n    }\n  }\n}\nfunction cleanNode(node) {\n  let i;\n  if (node.sources) {\n    while (node.sources.length) {\n      const source = node.sources.pop(),\n        index = node.sourceSlots.pop(),\n        obs = source.observers;\n      if (obs && obs.length) {\n        const n = obs.pop(),\n          s = source.observerSlots.pop();\n        if (index < obs.length) {\n          n.sourceSlots[s] = index;\n          obs[index] = n;\n          source.observerSlots[index] = s;\n        }\n      }\n    }\n  }\n  if (node.tOwned) {\n    for (i = node.tOwned.length - 1; i >= 0; i--) cleanNode(node.tOwned[i]);\n    delete node.tOwned;\n  }\n  if (Transition && Transition.running && node.pure) {\n    reset(node, true);\n  } else if (node.owned) {\n    for (i = node.owned.length - 1; i >= 0; i--) cleanNode(node.owned[i]);\n    node.owned = null;\n  }\n  if (node.cleanups) {\n    for (i = node.cleanups.length - 1; i >= 0; i--) node.cleanups[i]();\n    node.cleanups = null;\n  }\n  if (Transition && Transition.running) node.tState = 0;else node.state = 0;\n}\nfunction reset(node, top) {\n  if (!top) {\n    node.tState = 0;\n    Transition.disposed.add(node);\n  }\n  if (node.owned) {\n    for (let i = 0; i < node.owned.length; i++) reset(node.owned[i]);\n  }\n}\nfunction castError(err) {\n  if (err instanceof Error) return err;\n  return new Error(typeof err === \"string\" ? err : \"Unknown error\", {\n    cause: err\n  });\n}\nfunction runErrors(err, fns, owner) {\n  try {\n    for (const f of fns) f(err);\n  } catch (e) {\n    handleError(e, owner && owner.owner || null);\n  }\n}\nfunction handleError(err, owner = Owner) {\n  const fns = ERROR && owner && owner.context && owner.context[ERROR];\n  const error = castError(err);\n  if (!fns) throw error;\n  if (Effects) Effects.push({\n    fn() {\n      runErrors(error, fns, owner);\n    },\n    state: STALE\n  });else runErrors(error, fns, owner);\n}\nfunction resolveChildren(children) {\n  if (typeof children === \"function\" && !children.length) return resolveChildren(children());\n  if (Array.isArray(children)) {\n    const results = [];\n    for (let i = 0; i < children.length; i++) {\n      const result = resolveChildren(children[i]);\n      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n    }\n    return results;\n  }\n  return children;\n}\nfunction createProvider(id, options) {\n  return function provider(props) {\n    let res;\n    createRenderEffect(() => res = untrack(() => {\n      Owner.context = {\n        ...Owner.context,\n        [id]: props.value\n      };\n      return children(() => props.children);\n    }), undefined);\n    return res;\n  };\n}\nfunction onError(fn) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  if (Owner === null) ;else if (Owner.context === null || !Owner.context[ERROR]) {\n    Owner.context = {\n      ...Owner.context,\n      [ERROR]: [fn]\n    };\n    mutateContext(Owner, ERROR, [fn]);\n  } else Owner.context[ERROR].push(fn);\n}\nfunction mutateContext(o, key, value) {\n  if (o.owned) {\n    for (let i = 0; i < o.owned.length; i++) {\n      if (o.owned[i].context === o.context) mutateContext(o.owned[i], key, value);\n      if (!o.owned[i].context) {\n        o.owned[i].context = o.context;\n        mutateContext(o.owned[i], key, value);\n      } else if (!o.owned[i].context[key]) {\n        o.owned[i].context[key] = value;\n        mutateContext(o.owned[i], key, value);\n      }\n    }\n  }\n}\n\nfunction observable(input) {\n  return {\n    subscribe(observer) {\n      if (!(observer instanceof Object) || observer == null) {\n        throw new TypeError(\"Expected the observer to be an object.\");\n      }\n      const handler = typeof observer === \"function\" ? observer : observer.next && observer.next.bind(observer);\n      if (!handler) {\n        return {\n          unsubscribe() {}\n        };\n      }\n      const dispose = createRoot(disposer => {\n        createEffect(() => {\n          const v = input();\n          untrack(() => handler(v));\n        });\n        return disposer;\n      });\n      if (getOwner()) onCleanup(dispose);\n      return {\n        unsubscribe() {\n          dispose();\n        }\n      };\n    },\n    [Symbol.observable || \"@@observable\"]() {\n      return this;\n    }\n  };\n}\nfunction from(producer, initalValue = undefined) {\n  const [s, set] = createSignal(initalValue, {\n    equals: false\n  });\n  if (\"subscribe\" in producer) {\n    const unsub = producer.subscribe(v => set(() => v));\n    onCleanup(() => \"unsubscribe\" in unsub ? unsub.unsubscribe() : unsub());\n  } else {\n    const clean = producer(set);\n    onCleanup(clean);\n  }\n  return s;\n}\n\nconst FALLBACK = Symbol(\"fallback\");\nfunction dispose(d) {\n  for (let i = 0; i < d.length; i++) d[i]();\n}\nfunction mapArray(list, mapFn, options = {}) {\n  let items = [],\n    mapped = [],\n    disposers = [],\n    len = 0,\n    indexes = mapFn.length > 1 ? [] : null;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    let newItems = list() || [],\n      newLen = newItems.length,\n      i,\n      j;\n    newItems[$TRACK];\n    return untrack(() => {\n      let newIndices, newIndicesNext, temp, tempdisposers, tempIndexes, start, end, newEnd, item;\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          indexes && (indexes = []);\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n      }\n      else if (len === 0) {\n        mapped = new Array(newLen);\n        for (j = 0; j < newLen; j++) {\n          items[j] = newItems[j];\n          mapped[j] = createRoot(mapper);\n        }\n        len = newLen;\n      } else {\n        temp = new Array(newLen);\n        tempdisposers = new Array(newLen);\n        indexes && (tempIndexes = new Array(newLen));\n        for (start = 0, end = Math.min(len, newLen); start < end && items[start] === newItems[start]; start++);\n        for (end = len - 1, newEnd = newLen - 1; end >= start && newEnd >= start && items[end] === newItems[newEnd]; end--, newEnd--) {\n          temp[newEnd] = mapped[end];\n          tempdisposers[newEnd] = disposers[end];\n          indexes && (tempIndexes[newEnd] = indexes[end]);\n        }\n        newIndices = new Map();\n        newIndicesNext = new Array(newEnd + 1);\n        for (j = newEnd; j >= start; j--) {\n          item = newItems[j];\n          i = newIndices.get(item);\n          newIndicesNext[j] = i === undefined ? -1 : i;\n          newIndices.set(item, j);\n        }\n        for (i = start; i <= end; i++) {\n          item = items[i];\n          j = newIndices.get(item);\n          if (j !== undefined && j !== -1) {\n            temp[j] = mapped[i];\n            tempdisposers[j] = disposers[i];\n            indexes && (tempIndexes[j] = indexes[i]);\n            j = newIndicesNext[j];\n            newIndices.set(item, j);\n          } else disposers[i]();\n        }\n        for (j = start; j < newLen; j++) {\n          if (j in temp) {\n            mapped[j] = temp[j];\n            disposers[j] = tempdisposers[j];\n            if (indexes) {\n              indexes[j] = tempIndexes[j];\n              indexes[j](j);\n            }\n          } else mapped[j] = createRoot(mapper);\n        }\n        mapped = mapped.slice(0, len = newLen);\n        items = newItems.slice(0);\n      }\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[j] = disposer;\n      if (indexes) {\n        const [s, set] = createSignal(j);\n        indexes[j] = set;\n        return mapFn(newItems[j], s);\n      }\n      return mapFn(newItems[j]);\n    }\n  };\n}\nfunction indexArray(list, mapFn, options = {}) {\n  let items = [],\n    mapped = [],\n    disposers = [],\n    signals = [],\n    len = 0,\n    i;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    const newItems = list() || [],\n      newLen = newItems.length;\n    newItems[$TRACK];\n    return untrack(() => {\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          signals = [];\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n        return mapped;\n      }\n      if (items[0] === FALLBACK) {\n        disposers[0]();\n        disposers = [];\n        items = [];\n        mapped = [];\n        len = 0;\n      }\n      for (i = 0; i < newLen; i++) {\n        if (i < items.length && items[i] !== newItems[i]) {\n          signals[i](() => newItems[i]);\n        } else if (i >= items.length) {\n          mapped[i] = createRoot(mapper);\n        }\n      }\n      for (; i < items.length; i++) {\n        disposers[i]();\n      }\n      len = signals.length = disposers.length = newLen;\n      items = newItems.slice(0);\n      return mapped = mapped.slice(0, len);\n    });\n    function mapper(disposer) {\n      disposers[i] = disposer;\n      const [s, set] = createSignal(newItems[i]);\n      signals[i] = set;\n      return mapFn(s, i);\n    }\n  };\n}\n\nlet hydrationEnabled = false;\nfunction enableHydration() {\n  hydrationEnabled = true;\n}\nfunction createComponent(Comp, props) {\n  if (hydrationEnabled) {\n    if (sharedConfig.context) {\n      const c = sharedConfig.context;\n      setHydrateContext(nextHydrateContext());\n      const r = untrack(() => Comp(props || {}));\n      setHydrateContext(c);\n      return r;\n    }\n  }\n  return untrack(() => Comp(props || {}));\n}\nfunction trueFn() {\n  return true;\n}\nconst propTraps = {\n  get(_, property, receiver) {\n    if (property === $PROXY) return receiver;\n    return _.get(property);\n  },\n  has(_, property) {\n    if (property === $PROXY) return true;\n    return _.has(property);\n  },\n  set: trueFn,\n  deleteProperty: trueFn,\n  getOwnPropertyDescriptor(_, property) {\n    return {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return _.get(property);\n      },\n      set: trueFn,\n      deleteProperty: trueFn\n    };\n  },\n  ownKeys(_) {\n    return _.keys();\n  }\n};\nfunction resolveSource(s) {\n  return !(s = typeof s === \"function\" ? s() : s) ? {} : s;\n}\nfunction resolveSources() {\n  for (let i = 0, length = this.length; i < length; ++i) {\n    const v = this[i]();\n    if (v !== undefined) return v;\n  }\n}\nfunction mergeProps(...sources) {\n  let proxy = false;\n  for (let i = 0; i < sources.length; i++) {\n    const s = sources[i];\n    proxy = proxy || !!s && $PROXY in s;\n    sources[i] = typeof s === \"function\" ? (proxy = true, createMemo(s)) : s;\n  }\n  if (SUPPORTS_PROXY && proxy) {\n    return new Proxy({\n      get(property) {\n        for (let i = sources.length - 1; i >= 0; i--) {\n          const v = resolveSource(sources[i])[property];\n          if (v !== undefined) return v;\n        }\n      },\n      has(property) {\n        for (let i = sources.length - 1; i >= 0; i--) {\n          if (property in resolveSource(sources[i])) return true;\n        }\n        return false;\n      },\n      keys() {\n        const keys = [];\n        for (let i = 0; i < sources.length; i++) keys.push(...Object.keys(resolveSource(sources[i])));\n        return [...new Set(keys)];\n      }\n    }, propTraps);\n  }\n  const sourcesMap = {};\n  const defined = Object.create(null);\n  for (let i = sources.length - 1; i >= 0; i--) {\n    const source = sources[i];\n    if (!source) continue;\n    const sourceKeys = Object.getOwnPropertyNames(source);\n    for (let i = sourceKeys.length - 1; i >= 0; i--) {\n      const key = sourceKeys[i];\n      if (key === \"__proto__\" || key === \"constructor\") continue;\n      const desc = Object.getOwnPropertyDescriptor(source, key);\n      if (!defined[key]) {\n        defined[key] = desc.get ? {\n          enumerable: true,\n          configurable: true,\n          get: resolveSources.bind(sourcesMap[key] = [desc.get.bind(source)])\n        } : desc.value !== undefined ? desc : undefined;\n      } else {\n        const sources = sourcesMap[key];\n        if (sources) {\n          if (desc.get) sources.push(desc.get.bind(source));else if (desc.value !== undefined) sources.push(() => desc.value);\n        }\n      }\n    }\n  }\n  const target = {};\n  const definedKeys = Object.keys(defined);\n  for (let i = definedKeys.length - 1; i >= 0; i--) {\n    const key = definedKeys[i],\n      desc = defined[key];\n    if (desc && desc.get) Object.defineProperty(target, key, desc);else target[key] = desc ? desc.value : undefined;\n  }\n  return target;\n}\nfunction splitProps(props, ...keys) {\n  if (SUPPORTS_PROXY && $PROXY in props) {\n    const blocked = new Set(keys.length > 1 ? keys.flat() : keys[0]);\n    const res = keys.map(k => {\n      return new Proxy({\n        get(property) {\n          return k.includes(property) ? props[property] : undefined;\n        },\n        has(property) {\n          return k.includes(property) && property in props;\n        },\n        keys() {\n          return k.filter(property => property in props);\n        }\n      }, propTraps);\n    });\n    res.push(new Proxy({\n      get(property) {\n        return blocked.has(property) ? undefined : props[property];\n      },\n      has(property) {\n        return blocked.has(property) ? false : property in props;\n      },\n      keys() {\n        return Object.keys(props).filter(k => !blocked.has(k));\n      }\n    }, propTraps));\n    return res;\n  }\n  const otherObject = {};\n  const objects = keys.map(() => ({}));\n  for (const propName of Object.getOwnPropertyNames(props)) {\n    const desc = Object.getOwnPropertyDescriptor(props, propName);\n    const isDefaultDesc = !desc.get && !desc.set && desc.enumerable && desc.writable && desc.configurable;\n    let blocked = false;\n    let objectIndex = 0;\n    for (const k of keys) {\n      if (k.includes(propName)) {\n        blocked = true;\n        isDefaultDesc ? objects[objectIndex][propName] = desc.value : Object.defineProperty(objects[objectIndex], propName, desc);\n      }\n      ++objectIndex;\n    }\n    if (!blocked) {\n      isDefaultDesc ? otherObject[propName] = desc.value : Object.defineProperty(otherObject, propName, desc);\n    }\n  }\n  return [...objects, otherObject];\n}\nfunction lazy(fn) {\n  let comp;\n  let p;\n  const wrap = props => {\n    const ctx = sharedConfig.context;\n    if (ctx) {\n      const [s, set] = createSignal();\n      sharedConfig.count || (sharedConfig.count = 0);\n      sharedConfig.count++;\n      (p || (p = fn())).then(mod => {\n        !sharedConfig.done && setHydrateContext(ctx);\n        sharedConfig.count--;\n        set(() => mod.default);\n        setHydrateContext();\n      });\n      comp = s;\n    } else if (!comp) {\n      const [s] = createResource(() => (p || (p = fn())).then(mod => mod.default));\n      comp = s;\n    }\n    let Comp;\n    return createMemo(() => (Comp = comp()) ? untrack(() => {\n      if (IS_DEV) ;\n      if (!ctx || sharedConfig.done) return Comp(props);\n      const c = sharedConfig.context;\n      setHydrateContext(ctx);\n      const r = Comp(props);\n      setHydrateContext(c);\n      return r;\n    }) : \"\");\n  };\n  wrap.preload = () => p || ((p = fn()).then(mod => comp = () => mod.default), p);\n  return wrap;\n}\nlet counter = 0;\nfunction createUniqueId() {\n  const ctx = sharedConfig.context;\n  return ctx ? sharedConfig.getNextContextId() : `cl-${counter++}`;\n}\n\nconst narrowedError = name => `Stale read from <${name}>.`;\nfunction For(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(mapArray(() => props.each, props.children, fallback || undefined));\n}\nfunction Index(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(indexArray(() => props.each, props.children, fallback || undefined));\n}\nfunction Show(props) {\n  const keyed = props.keyed;\n  const conditionValue = createMemo(() => props.when, undefined, undefined);\n  const condition = keyed ? conditionValue : createMemo(conditionValue, undefined, {\n    equals: (a, b) => !a === !b\n  });\n  return createMemo(() => {\n    const c = condition();\n    if (c) {\n      const child = props.children;\n      const fn = typeof child === \"function\" && child.length > 0;\n      return fn ? untrack(() => child(keyed ? c : () => {\n        if (!untrack(condition)) throw narrowedError(\"Show\");\n        return conditionValue();\n      })) : child;\n    }\n    return props.fallback;\n  }, undefined, undefined);\n}\nfunction Switch(props) {\n  const chs = children(() => props.children);\n  const switchFunc = createMemo(() => {\n    const ch = chs();\n    const mps = Array.isArray(ch) ? ch : [ch];\n    let func = () => undefined;\n    for (let i = 0; i < mps.length; i++) {\n      const index = i;\n      const mp = mps[i];\n      const prevFunc = func;\n      const conditionValue = createMemo(() => prevFunc() ? undefined : mp.when, undefined, undefined);\n      const condition = mp.keyed ? conditionValue : createMemo(conditionValue, undefined, {\n        equals: (a, b) => !a === !b\n      });\n      func = () => prevFunc() || (condition() ? [index, conditionValue, mp] : undefined);\n    }\n    return func;\n  });\n  return createMemo(() => {\n    const sel = switchFunc()();\n    if (!sel) return props.fallback;\n    const [index, conditionValue, mp] = sel;\n    const child = mp.children;\n    const fn = typeof child === \"function\" && child.length > 0;\n    return fn ? untrack(() => child(mp.keyed ? conditionValue() : () => {\n      if (untrack(switchFunc)()?.[0] !== index) throw narrowedError(\"Match\");\n      return conditionValue();\n    })) : child;\n  }, undefined, undefined);\n}\nfunction Match(props) {\n  return props;\n}\nlet Errors;\nfunction resetErrorBoundaries() {\n  Errors && [...Errors].forEach(fn => fn());\n}\nfunction ErrorBoundary(props) {\n  let err;\n  if (sharedConfig.context && sharedConfig.load) err = sharedConfig.load(sharedConfig.getContextId());\n  const [errored, setErrored] = createSignal(err, undefined);\n  Errors || (Errors = new Set());\n  Errors.add(setErrored);\n  onCleanup(() => Errors.delete(setErrored));\n  return createMemo(() => {\n    let e;\n    if (e = errored()) {\n      const f = props.fallback;\n      return typeof f === \"function\" && f.length ? untrack(() => f(e, () => setErrored())) : f;\n    }\n    return catchError(() => props.children, setErrored);\n  }, undefined, undefined);\n}\n\nconst suspenseListEquals = (a, b) => a.showContent === b.showContent && a.showFallback === b.showFallback;\nconst SuspenseListContext = /* #__PURE__ */createContext();\nfunction SuspenseList(props) {\n  let [wrapper, setWrapper] = createSignal(() => ({\n      inFallback: false\n    })),\n    show;\n  const listContext = useContext(SuspenseListContext);\n  const [registry, setRegistry] = createSignal([]);\n  if (listContext) {\n    show = listContext.register(createMemo(() => wrapper()().inFallback));\n  }\n  const resolved = createMemo(prev => {\n    const reveal = props.revealOrder,\n      tail = props.tail,\n      {\n        showContent = true,\n        showFallback = true\n      } = show ? show() : {},\n      reg = registry(),\n      reverse = reveal === \"backwards\";\n    if (reveal === \"together\") {\n      const all = reg.every(inFallback => !inFallback());\n      const res = reg.map(() => ({\n        showContent: all && showContent,\n        showFallback\n      }));\n      res.inFallback = !all;\n      return res;\n    }\n    let stop = false;\n    let inFallback = prev.inFallback;\n    const res = [];\n    for (let i = 0, len = reg.length; i < len; i++) {\n      const n = reverse ? len - i - 1 : i,\n        s = reg[n]();\n      if (!stop && !s) {\n        res[n] = {\n          showContent,\n          showFallback\n        };\n      } else {\n        const next = !stop;\n        if (next) inFallback = true;\n        res[n] = {\n          showContent: next,\n          showFallback: !tail || next && tail === \"collapsed\" ? showFallback : false\n        };\n        stop = true;\n      }\n    }\n    if (!stop) inFallback = false;\n    res.inFallback = inFallback;\n    return res;\n  }, {\n    inFallback: false\n  });\n  setWrapper(() => resolved);\n  return createComponent(SuspenseListContext.Provider, {\n    value: {\n      register: inFallback => {\n        let index;\n        setRegistry(registry => {\n          index = registry.length;\n          return [...registry, inFallback];\n        });\n        return createMemo(() => resolved()[index], undefined, {\n          equals: suspenseListEquals\n        });\n      }\n    },\n    get children() {\n      return props.children;\n    }\n  });\n}\nfunction Suspense(props) {\n  let counter = 0,\n    show,\n    ctx,\n    p,\n    flicker,\n    error;\n  const [inFallback, setFallback] = createSignal(false),\n    SuspenseContext = getSuspenseContext(),\n    store = {\n      increment: () => {\n        if (++counter === 1) setFallback(true);\n      },\n      decrement: () => {\n        if (--counter === 0) setFallback(false);\n      },\n      inFallback,\n      effects: [],\n      resolved: false\n    },\n    owner = getOwner();\n  if (sharedConfig.context && sharedConfig.load) {\n    const key = sharedConfig.getContextId();\n    let ref = sharedConfig.load(key);\n    if (ref) {\n      if (typeof ref !== \"object\" || ref.s !== 1) p = ref;else sharedConfig.gather(key);\n    }\n    if (p && p !== \"$$f\") {\n      const [s, set] = createSignal(undefined, {\n        equals: false\n      });\n      flicker = s;\n      p.then(() => {\n        if (sharedConfig.done) return set();\n        sharedConfig.gather(key);\n        setHydrateContext(ctx);\n        set();\n        setHydrateContext();\n      }, err => {\n        error = err;\n        set();\n      });\n    }\n  }\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) show = listContext.register(store.inFallback);\n  let dispose;\n  onCleanup(() => dispose && dispose());\n  return createComponent(SuspenseContext.Provider, {\n    value: store,\n    get children() {\n      return createMemo(() => {\n        if (error) throw error;\n        ctx = sharedConfig.context;\n        if (flicker) {\n          flicker();\n          return flicker = undefined;\n        }\n        if (ctx && p === \"$$f\") setHydrateContext();\n        const rendered = createMemo(() => props.children);\n        return createMemo(prev => {\n          const inFallback = store.inFallback(),\n            {\n              showContent = true,\n              showFallback = true\n            } = show ? show() : {};\n          if ((!inFallback || p && p !== \"$$f\") && showContent) {\n            store.resolved = true;\n            dispose && dispose();\n            dispose = ctx = p = undefined;\n            resumeEffects(store.effects);\n            return rendered();\n          }\n          if (!showFallback) return;\n          if (dispose) return prev;\n          return createRoot(disposer => {\n            dispose = disposer;\n            if (ctx) {\n              setHydrateContext({\n                id: ctx.id + \"F\",\n                count: 0\n              });\n              ctx = undefined;\n            }\n            return props.fallback;\n          }, owner);\n        });\n      });\n    }\n  });\n}\n\nconst DEV = undefined;\n\nexport { $DEVCOMP, $PROXY, $TRACK, DEV, ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, batch, cancelCallback, catchError, children, createComponent, createComputed, createContext, createDeferred, createEffect, createMemo, createReaction, createRenderEffect, createResource, createRoot, createSelector, createSignal, createUniqueId, enableExternalSource, enableHydration, enableScheduling, equalFn, from, getListener, getOwner, indexArray, lazy, mapArray, mergeProps, observable, on, onCleanup, onError, onMount, requestCallback, resetErrorBoundaries, runWithOwner, sharedConfig, splitProps, startTransition, untrack, useContext, useTransition };\n","import { createMemo, createRoot, createRenderEffect, mergeProps, createComponent, untrack } from 'solid-js';\n\nconst memo = fn => createMemo(() => fn());\n\nfunction createRenderer$1({\n  createElement,\n  createTextNode,\n  isTextNode,\n  replaceText,\n  insertNode,\n  removeNode,\n  setProperty,\n  getParentNode,\n  getFirstChild,\n  getNextSibling\n}) {\n  function insert(parent, accessor, marker, initial) {\n    if (marker !== undefined && !initial) initial = [];\n    if (typeof accessor !== \"function\") return insertExpression(parent, accessor, initial, marker);\n    createRenderEffect(current => insertExpression(parent, accessor(), current, marker), initial);\n  }\n  function insertExpression(parent, value, current, marker, unwrapArray) {\n    while (typeof current === \"function\") current = current();\n    if (value === current) return current;\n    const t = typeof value,\n      multi = marker !== undefined;\n    if (t === \"string\" || t === \"number\") {\n      if (t === \"number\") value = value.toString();\n      if (multi) {\n        let node = current[0];\n        if (node && isTextNode(node)) {\n          replaceText(node, value);\n        } else node = createTextNode(value);\n        current = cleanChildren(parent, current, marker, node);\n      } else {\n        if (current !== \"\" && typeof current === \"string\") {\n          replaceText(getFirstChild(parent), current = value);\n        } else {\n          cleanChildren(parent, current, marker, createTextNode(value));\n          current = value;\n        }\n      }\n    } else if (value == null || t === \"boolean\") {\n      current = cleanChildren(parent, current, marker);\n    } else if (t === \"function\") {\n      createRenderEffect(() => {\n        let v = value();\n        while (typeof v === \"function\") v = v();\n        current = insertExpression(parent, v, current, marker);\n      });\n      return () => current;\n    } else if (Array.isArray(value)) {\n      const array = [];\n      if (normalizeIncomingArray(array, value, unwrapArray)) {\n        createRenderEffect(() => current = insertExpression(parent, array, current, marker, true));\n        return () => current;\n      }\n      if (array.length === 0) {\n        const replacement = cleanChildren(parent, current, marker);\n        if (multi) return current = replacement;\n      } else {\n        if (Array.isArray(current)) {\n          if (current.length === 0) {\n            appendNodes(parent, array, marker);\n          } else reconcileArrays(parent, current, array);\n        } else if (current == null || current === \"\") {\n          appendNodes(parent, array);\n        } else {\n          reconcileArrays(parent, multi && current || [getFirstChild(parent)], array);\n        }\n      }\n      current = array;\n    } else {\n      if (Array.isArray(current)) {\n        if (multi) return current = cleanChildren(parent, current, marker, value);\n        cleanChildren(parent, current, null, value);\n      } else if (current == null || current === \"\" || !getFirstChild(parent)) {\n        insertNode(parent, value);\n      } else replaceNode(parent, value, getFirstChild(parent));\n      current = value;\n    }\n    return current;\n  }\n  function normalizeIncomingArray(normalized, array, unwrap) {\n    let dynamic = false;\n    for (let i = 0, len = array.length; i < len; i++) {\n      let item = array[i],\n        t;\n      if (item == null || item === true || item === false) ; else if (Array.isArray(item)) {\n        dynamic = normalizeIncomingArray(normalized, item) || dynamic;\n      } else if ((t = typeof item) === \"string\" || t === \"number\") {\n        normalized.push(createTextNode(item));\n      } else if (t === \"function\") {\n        if (unwrap) {\n          while (typeof item === \"function\") item = item();\n          dynamic = normalizeIncomingArray(normalized, Array.isArray(item) ? item : [item]) || dynamic;\n        } else {\n          normalized.push(item);\n          dynamic = true;\n        }\n      } else normalized.push(item);\n    }\n    return dynamic;\n  }\n  function reconcileArrays(parentNode, a, b) {\n    let bLength = b.length,\n      aEnd = a.length,\n      bEnd = bLength,\n      aStart = 0,\n      bStart = 0,\n      after = getNextSibling(a[aEnd - 1]),\n      map = null;\n    while (aStart < aEnd || bStart < bEnd) {\n      if (a[aStart] === b[bStart]) {\n        aStart++;\n        bStart++;\n        continue;\n      }\n      while (a[aEnd - 1] === b[bEnd - 1]) {\n        aEnd--;\n        bEnd--;\n      }\n      if (aEnd === aStart) {\n        const node = bEnd < bLength ? bStart ? getNextSibling(b[bStart - 1]) : b[bEnd - bStart] : after;\n        while (bStart < bEnd) insertNode(parentNode, b[bStart++], node);\n      } else if (bEnd === bStart) {\n        while (aStart < aEnd) {\n          if (!map || !map.has(a[aStart])) removeNode(parentNode, a[aStart]);\n          aStart++;\n        }\n      } else if (a[aStart] === b[bEnd - 1] && b[bStart] === a[aEnd - 1]) {\n        const node = getNextSibling(a[--aEnd]);\n        insertNode(parentNode, b[bStart++], getNextSibling(a[aStart++]));\n        insertNode(parentNode, b[--bEnd], node);\n        a[aEnd] = b[bEnd];\n      } else {\n        if (!map) {\n          map = new Map();\n          let i = bStart;\n          while (i < bEnd) map.set(b[i], i++);\n        }\n        const index = map.get(a[aStart]);\n        if (index != null) {\n          if (bStart < index && index < bEnd) {\n            let i = aStart,\n              sequence = 1,\n              t;\n            while (++i < aEnd && i < bEnd) {\n              if ((t = map.get(a[i])) == null || t !== index + sequence) break;\n              sequence++;\n            }\n            if (sequence > index - bStart) {\n              const node = a[aStart];\n              while (bStart < index) insertNode(parentNode, b[bStart++], node);\n            } else replaceNode(parentNode, b[bStart++], a[aStart++]);\n          } else aStart++;\n        } else removeNode(parentNode, a[aStart++]);\n      }\n    }\n  }\n  function cleanChildren(parent, current, marker, replacement) {\n    if (marker === undefined) {\n      let removed;\n      while (removed = getFirstChild(parent)) removeNode(parent, removed);\n      replacement && insertNode(parent, replacement);\n      return \"\";\n    }\n    const node = replacement || createTextNode(\"\");\n    if (current.length) {\n      let inserted = false;\n      for (let i = current.length - 1; i >= 0; i--) {\n        const el = current[i];\n        if (node !== el) {\n          const isParent = getParentNode(el) === parent;\n          if (!inserted && !i) isParent ? replaceNode(parent, node, el) : insertNode(parent, node, marker);else isParent && removeNode(parent, el);\n        } else inserted = true;\n      }\n    } else insertNode(parent, node, marker);\n    return [node];\n  }\n  function appendNodes(parent, array, marker) {\n    for (let i = 0, len = array.length; i < len; i++) insertNode(parent, array[i], marker);\n  }\n  function replaceNode(parent, newNode, oldNode) {\n    insertNode(parent, newNode, oldNode);\n    removeNode(parent, oldNode);\n  }\n  function spreadExpression(node, props, prevProps = {}, skipChildren) {\n    props || (props = {});\n    if (!skipChildren) {\n      createRenderEffect(() => prevProps.children = insertExpression(node, props.children, prevProps.children));\n    }\n    createRenderEffect(() => props.ref && props.ref(node));\n    createRenderEffect(() => {\n      for (const prop in props) {\n        if (prop === \"children\" || prop === \"ref\") continue;\n        const value = props[prop];\n        if (value === prevProps[prop]) continue;\n        setProperty(node, prop, value, prevProps[prop]);\n        prevProps[prop] = value;\n      }\n    });\n    return prevProps;\n  }\n  return {\n    render(code, element) {\n      let disposer;\n      createRoot(dispose => {\n        disposer = dispose;\n        insert(element, code());\n      });\n      return disposer;\n    },\n    insert,\n    spread(node, accessor, skipChildren) {\n      if (typeof accessor === \"function\") {\n        createRenderEffect(current => spreadExpression(node, accessor(), current, skipChildren));\n      } else spreadExpression(node, accessor, undefined, skipChildren);\n    },\n    createElement,\n    createTextNode,\n    insertNode,\n    setProp(node, name, value, prev) {\n      setProperty(node, name, value, prev);\n      return value;\n    },\n    mergeProps,\n    effect: createRenderEffect,\n    memo,\n    createComponent,\n    use(fn, element, arg) {\n      return untrack(() => fn(element, arg));\n    }\n  };\n}\n\nfunction createRenderer(options) {\n  const renderer = createRenderer$1(options);\n  renderer.mergeProps = mergeProps;\n  return renderer;\n}\n\nexport { createRenderer };\n","\"use strict\";\nvar ExtensionType = /* @__PURE__ */ ((ExtensionType2) => {\n  ExtensionType2[\"Application\"] = \"application\";\n  ExtensionType2[\"WebGLPipes\"] = \"webgl-pipes\";\n  ExtensionType2[\"WebGLPipesAdaptor\"] = \"webgl-pipes-adaptor\";\n  ExtensionType2[\"WebGLSystem\"] = \"webgl-system\";\n  ExtensionType2[\"WebGPUPipes\"] = \"webgpu-pipes\";\n  ExtensionType2[\"WebGPUPipesAdaptor\"] = \"webgpu-pipes-adaptor\";\n  ExtensionType2[\"WebGPUSystem\"] = \"webgpu-system\";\n  ExtensionType2[\"CanvasSystem\"] = \"canvas-system\";\n  ExtensionType2[\"CanvasPipesAdaptor\"] = \"canvas-pipes-adaptor\";\n  ExtensionType2[\"CanvasPipes\"] = \"canvas-pipes\";\n  ExtensionType2[\"Asset\"] = \"asset\";\n  ExtensionType2[\"LoadParser\"] = \"load-parser\";\n  ExtensionType2[\"ResolveParser\"] = \"resolve-parser\";\n  ExtensionType2[\"CacheParser\"] = \"cache-parser\";\n  ExtensionType2[\"DetectionParser\"] = \"detection-parser\";\n  ExtensionType2[\"MaskEffect\"] = \"mask-effect\";\n  ExtensionType2[\"BlendMode\"] = \"blend-mode\";\n  ExtensionType2[\"TextureSource\"] = \"texture-source\";\n  ExtensionType2[\"Environment\"] = \"environment\";\n  ExtensionType2[\"ShapeBuilder\"] = \"shape-builder\";\n  ExtensionType2[\"Batcher\"] = \"batcher\";\n  return ExtensionType2;\n})(ExtensionType || {});\nconst normalizeExtension = (ext) => {\n  if (typeof ext === \"function\" || typeof ext === \"object\" && ext.extension) {\n    if (!ext.extension) {\n      throw new Error(\"Extension class must have an extension object\");\n    }\n    const metadata = typeof ext.extension !== \"object\" ? { type: ext.extension } : ext.extension;\n    ext = { ...metadata, ref: ext };\n  }\n  if (typeof ext === \"object\") {\n    ext = { ...ext };\n  } else {\n    throw new Error(\"Invalid extension type\");\n  }\n  if (typeof ext.type === \"string\") {\n    ext.type = [ext.type];\n  }\n  return ext;\n};\nconst normalizeExtensionPriority = (ext, defaultPriority) => normalizeExtension(ext).priority ?? defaultPriority;\nconst extensions = {\n  /** @ignore */\n  _addHandlers: {},\n  /** @ignore */\n  _removeHandlers: {},\n  /** @ignore */\n  _queue: {},\n  /**\n   * Remove extensions from PixiJS.\n   * @param extensions - Extensions to be removed.\n   * @returns {extensions} For chaining.\n   */\n  remove(...extensions2) {\n    extensions2.map(normalizeExtension).forEach((ext) => {\n      ext.type.forEach((type) => this._removeHandlers[type]?.(ext));\n    });\n    return this;\n  },\n  /**\n   * Register new extensions with PixiJS.\n   * @param extensions - The spread of extensions to add to PixiJS.\n   * @returns {extensions} For chaining.\n   */\n  add(...extensions2) {\n    extensions2.map(normalizeExtension).forEach((ext) => {\n      ext.type.forEach((type) => {\n        const handlers = this._addHandlers;\n        const queue = this._queue;\n        if (!handlers[type]) {\n          queue[type] = queue[type] || [];\n          queue[type]?.push(ext);\n        } else {\n          handlers[type]?.(ext);\n        }\n      });\n    });\n    return this;\n  },\n  /**\n   * Internal method to handle extensions by name.\n   * @param type - The extension type.\n   * @param onAdd  - Function handler when extensions are added/registered {@link StrictExtensionFormat}.\n   * @param onRemove  - Function handler when extensions are removed/unregistered {@link StrictExtensionFormat}.\n   * @returns {extensions} For chaining.\n   */\n  handle(type, onAdd, onRemove) {\n    const addHandlers = this._addHandlers;\n    const removeHandlers = this._removeHandlers;\n    if (addHandlers[type] || removeHandlers[type]) {\n      throw new Error(`Extension type ${type} already has a handler`);\n    }\n    addHandlers[type] = onAdd;\n    removeHandlers[type] = onRemove;\n    const queue = this._queue;\n    if (queue[type]) {\n      queue[type]?.forEach((ext) => onAdd(ext));\n      delete queue[type];\n    }\n    return this;\n  },\n  /**\n   * Handle a type, but using a map by `name` property.\n   * @param type - Type of extension to handle.\n   * @param map - The object map of named extensions.\n   * @returns {extensions} For chaining.\n   */\n  handleByMap(type, map) {\n    return this.handle(\n      type,\n      (extension) => {\n        if (extension.name) {\n          map[extension.name] = extension.ref;\n        }\n      },\n      (extension) => {\n        if (extension.name) {\n          delete map[extension.name];\n        }\n      }\n    );\n  },\n  /**\n   * Handle a type, but using a list of extensions with a `name` property.\n   * @param type - Type of extension to handle.\n   * @param map - The array of named extensions.\n   * @param defaultPriority - Fallback priority if none is defined.\n   * @returns {extensions} For chaining.\n   */\n  handleByNamedList(type, map, defaultPriority = -1) {\n    return this.handle(\n      type,\n      (extension) => {\n        const index = map.findIndex((item) => item.name === extension.name);\n        if (index >= 0)\n          return;\n        map.push({ name: extension.name, value: extension.ref });\n        map.sort((a, b) => normalizeExtensionPriority(b.value, defaultPriority) - normalizeExtensionPriority(a.value, defaultPriority));\n      },\n      (extension) => {\n        const index = map.findIndex((item) => item.name === extension.name);\n        if (index !== -1) {\n          map.splice(index, 1);\n        }\n      }\n    );\n  },\n  /**\n   * Handle a type, but using a list of extensions.\n   * @param type - Type of extension to handle.\n   * @param list - The list of extensions.\n   * @param defaultPriority - The default priority to use if none is specified.\n   * @returns {extensions} For chaining.\n   */\n  handleByList(type, list, defaultPriority = -1) {\n    return this.handle(\n      type,\n      (extension) => {\n        if (list.includes(extension.ref)) {\n          return;\n        }\n        list.push(extension.ref);\n        list.sort((a, b) => normalizeExtensionPriority(b, defaultPriority) - normalizeExtensionPriority(a, defaultPriority));\n      },\n      (extension) => {\n        const index = list.indexOf(extension.ref);\n        if (index !== -1) {\n          list.splice(index, 1);\n        }\n      }\n    );\n  },\n  /**\n   * Mixin the source object into the target object.\n   * @param Target - The target object to mix into.\n   * @param sources - The source(s) object to mix from\n   */\n  mixin(Target, ...sources) {\n    for (const source of sources) {\n      Object.defineProperties(Target.prototype, Object.getOwnPropertyDescriptors(source));\n    }\n  }\n};\n\nexport { ExtensionType, extensions, normalizeExtensionPriority };\n//# sourceMappingURL=Extensions.mjs.map\n","import { ExtensionType } from '../extensions/Extensions.mjs';\n\n\"use strict\";\nconst browserExt = {\n  extension: {\n    type: ExtensionType.Environment,\n    name: \"browser\",\n    priority: -1\n  },\n  test: () => true,\n  load: async () => {\n    await import('./browserAll.mjs');\n  }\n};\n\nexport { browserExt };\n//# sourceMappingURL=browserExt.mjs.map\n","import { ExtensionType } from '../extensions/Extensions.mjs';\n\n\"use strict\";\nconst webworkerExt = {\n  extension: {\n    type: ExtensionType.Environment,\n    name: \"webworker\",\n    priority: 0\n  },\n  test: () => typeof self !== \"undefined\" && self.WorkerGlobalScope !== void 0,\n  load: async () => {\n    await import('./webworkerAll.mjs');\n  }\n};\n\nexport { webworkerExt };\n//# sourceMappingURL=webworkerExt.mjs.map\n","\"use strict\";\nclass ObservablePoint {\n  /**\n   * Creates a new `ObservablePoint`\n   * @param observer - Observer to pass to listen for change events.\n   * @param {number} [x=0] - position of the point on the x axis\n   * @param {number} [y=0] - position of the point on the y axis\n   */\n  constructor(observer, x, y) {\n    this._x = x || 0;\n    this._y = y || 0;\n    this._observer = observer;\n  }\n  /**\n   * Creates a clone of this point.\n   * @param observer - Optional observer to pass to the new observable point.\n   * @returns a copy of this observable point\n   */\n  clone(observer) {\n    return new ObservablePoint(observer ?? this._observer, this._x, this._y);\n  }\n  /**\n   * Sets the point to a new `x` and `y` position.\n   * If `y` is omitted, both `x` and `y` will be set to `x`.\n   * @param {number} [x=0] - position of the point on the x axis\n   * @param {number} [y=x] - position of the point on the y axis\n   * @returns The observable point instance itself\n   */\n  set(x = 0, y = x) {\n    if (this._x !== x || this._y !== y) {\n      this._x = x;\n      this._y = y;\n      this._observer._onUpdate(this);\n    }\n    return this;\n  }\n  /**\n   * Copies x and y from the given point (`p`)\n   * @param p - The point to copy from. Can be any of type that is or extends `PointData`\n   * @returns The observable point instance itself\n   */\n  copyFrom(p) {\n    if (this._x !== p.x || this._y !== p.y) {\n      this._x = p.x;\n      this._y = p.y;\n      this._observer._onUpdate(this);\n    }\n    return this;\n  }\n  /**\n   * Copies this point's x and y into that of the given point (`p`)\n   * @param p - The point to copy to. Can be any of type that is or extends `PointData`\n   * @returns The point (`p`) with values updated\n   */\n  copyTo(p) {\n    p.set(this._x, this._y);\n    return p;\n  }\n  /**\n   * Accepts another point (`p`) and returns `true` if the given point is equal to this point\n   * @param p - The point to check\n   * @returns Returns `true` if both `x` and `y` are equal\n   */\n  equals(p) {\n    return p.x === this._x && p.y === this._y;\n  }\n  toString() {\n    return `[pixi.js/math:ObservablePoint x=${0} y=${0} scope=${this._observer}]`;\n  }\n  /** Position of the observable point on the x axis. */\n  get x() {\n    return this._x;\n  }\n  set x(value) {\n    if (this._x !== value) {\n      this._x = value;\n      this._observer._onUpdate(this);\n    }\n  }\n  /** Position of the observable point on the y axis. */\n  get y() {\n    return this._y;\n  }\n  set y(value) {\n    if (this._y !== value) {\n      this._y = value;\n      this._observer._onUpdate(this);\n    }\n  }\n}\n\nexport { ObservablePoint };\n//# sourceMappingURL=ObservablePoint.mjs.map\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","\"use strict\";\nconst PI_2 = Math.PI * 2;\nconst RAD_TO_DEG = 180 / Math.PI;\nconst DEG_TO_RAD = Math.PI / 180;\n\nexport { DEG_TO_RAD, PI_2, RAD_TO_DEG };\n//# sourceMappingURL=const.mjs.map\n","\"use strict\";\nclass Point {\n  /**\n   * Creates a new `Point`\n   * @param {number} [x=0] - position of the point on the x axis\n   * @param {number} [y=0] - position of the point on the y axis\n   */\n  constructor(x = 0, y = 0) {\n    /** Position of the point on the x axis */\n    this.x = 0;\n    /** Position of the point on the y axis */\n    this.y = 0;\n    this.x = x;\n    this.y = y;\n  }\n  /**\n   * Creates a clone of this point\n   * @returns A clone of this point\n   */\n  clone() {\n    return new Point(this.x, this.y);\n  }\n  /**\n   * Copies `x` and `y` from the given point into this point\n   * @param p - The point to copy from\n   * @returns The point instance itself\n   */\n  copyFrom(p) {\n    this.set(p.x, p.y);\n    return this;\n  }\n  /**\n   * Copies this point's x and y into the given point (`p`).\n   * @param p - The point to copy to. Can be any of type that is or extends `PointData`\n   * @returns The point (`p`) with values updated\n   */\n  copyTo(p) {\n    p.set(this.x, this.y);\n    return p;\n  }\n  /**\n   * Accepts another point (`p`) and returns `true` if the given point is equal to this point\n   * @param p - The point to check\n   * @returns Returns `true` if both `x` and `y` are equal\n   */\n  equals(p) {\n    return p.x === this.x && p.y === this.y;\n  }\n  /**\n   * Sets the point to a new `x` and `y` position.\n   * If `y` is omitted, both `x` and `y` will be set to `x`.\n   * @param {number} [x=0] - position of the point on the `x` axis\n   * @param {number} [y=x] - position of the point on the `y` axis\n   * @returns The point instance itself\n   */\n  set(x = 0, y = x) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n  toString() {\n    return `[pixi.js/math:Point x=${this.x} y=${this.y}]`;\n  }\n  /**\n   * A static Point object with `x` and `y` values of `0`. Can be used to avoid creating new objects multiple times.\n   * @readonly\n   */\n  static get shared() {\n    tempPoint.x = 0;\n    tempPoint.y = 0;\n    return tempPoint;\n  }\n}\nconst tempPoint = new Point();\n\nexport { Point };\n//# sourceMappingURL=Point.mjs.map\n","import { PI_2 } from '../misc/const.mjs';\nimport { Point } from '../point/Point.mjs';\n\n\"use strict\";\nclass Matrix {\n  /**\n   * @param a - x scale\n   * @param b - y skew\n   * @param c - x skew\n   * @param d - y scale\n   * @param tx - x translation\n   * @param ty - y translation\n   */\n  constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\n    /** An array of the current matrix. Only populated when `toArray` is called */\n    this.array = null;\n    this.a = a;\n    this.b = b;\n    this.c = c;\n    this.d = d;\n    this.tx = tx;\n    this.ty = ty;\n  }\n  /**\n   * Creates a Matrix object based on the given array. The Element to Matrix mapping order is as follows:\n   *\n   * a = array[0]\n   * b = array[1]\n   * c = array[3]\n   * d = array[4]\n   * tx = array[2]\n   * ty = array[5]\n   * @param array - The array that the matrix will be populated from.\n   */\n  fromArray(array) {\n    this.a = array[0];\n    this.b = array[1];\n    this.c = array[3];\n    this.d = array[4];\n    this.tx = array[2];\n    this.ty = array[5];\n  }\n  /**\n   * Sets the matrix properties.\n   * @param a - Matrix component\n   * @param b - Matrix component\n   * @param c - Matrix component\n   * @param d - Matrix component\n   * @param tx - Matrix component\n   * @param ty - Matrix component\n   * @returns This matrix. Good for chaining method calls.\n   */\n  set(a, b, c, d, tx, ty) {\n    this.a = a;\n    this.b = b;\n    this.c = c;\n    this.d = d;\n    this.tx = tx;\n    this.ty = ty;\n    return this;\n  }\n  /**\n   * Creates an array from the current Matrix object.\n   * @param transpose - Whether we need to transpose the matrix or not\n   * @param [out=new Float32Array(9)] - If provided the array will be assigned to out\n   * @returns The newly created array which contains the matrix\n   */\n  toArray(transpose, out) {\n    if (!this.array) {\n      this.array = new Float32Array(9);\n    }\n    const array = out || this.array;\n    if (transpose) {\n      array[0] = this.a;\n      array[1] = this.b;\n      array[2] = 0;\n      array[3] = this.c;\n      array[4] = this.d;\n      array[5] = 0;\n      array[6] = this.tx;\n      array[7] = this.ty;\n      array[8] = 1;\n    } else {\n      array[0] = this.a;\n      array[1] = this.c;\n      array[2] = this.tx;\n      array[3] = this.b;\n      array[4] = this.d;\n      array[5] = this.ty;\n      array[6] = 0;\n      array[7] = 0;\n      array[8] = 1;\n    }\n    return array;\n  }\n  /**\n   * Get a new position with the current transformation applied.\n   * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\n   * @param pos - The origin\n   * @param {Point} [newPos] - The point that the new position is assigned to (allowed to be same as input)\n   * @returns {Point} The new point, transformed through this matrix\n   */\n  apply(pos, newPos) {\n    newPos = newPos || new Point();\n    const x = pos.x;\n    const y = pos.y;\n    newPos.x = this.a * x + this.c * y + this.tx;\n    newPos.y = this.b * x + this.d * y + this.ty;\n    return newPos;\n  }\n  /**\n   * Get a new position with the inverse of the current transformation applied.\n   * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\n   * @param pos - The origin\n   * @param {Point} [newPos] - The point that the new position is assigned to (allowed to be same as input)\n   * @returns {Point} The new point, inverse-transformed through this matrix\n   */\n  applyInverse(pos, newPos) {\n    newPos = newPos || new Point();\n    const a = this.a;\n    const b = this.b;\n    const c = this.c;\n    const d = this.d;\n    const tx = this.tx;\n    const ty = this.ty;\n    const id = 1 / (a * d + c * -b);\n    const x = pos.x;\n    const y = pos.y;\n    newPos.x = d * id * x + -c * id * y + (ty * c - tx * d) * id;\n    newPos.y = a * id * y + -b * id * x + (-ty * a + tx * b) * id;\n    return newPos;\n  }\n  /**\n   * Translates the matrix on the x and y.\n   * @param x - How much to translate x by\n   * @param y - How much to translate y by\n   * @returns This matrix. Good for chaining method calls.\n   */\n  translate(x, y) {\n    this.tx += x;\n    this.ty += y;\n    return this;\n  }\n  /**\n   * Applies a scale transformation to the matrix.\n   * @param x - The amount to scale horizontally\n   * @param y - The amount to scale vertically\n   * @returns This matrix. Good for chaining method calls.\n   */\n  scale(x, y) {\n    this.a *= x;\n    this.d *= y;\n    this.c *= x;\n    this.b *= y;\n    this.tx *= x;\n    this.ty *= y;\n    return this;\n  }\n  /**\n   * Applies a rotation transformation to the matrix.\n   * @param angle - The angle in radians.\n   * @returns This matrix. Good for chaining method calls.\n   */\n  rotate(angle) {\n    const cos = Math.cos(angle);\n    const sin = Math.sin(angle);\n    const a1 = this.a;\n    const c1 = this.c;\n    const tx1 = this.tx;\n    this.a = a1 * cos - this.b * sin;\n    this.b = a1 * sin + this.b * cos;\n    this.c = c1 * cos - this.d * sin;\n    this.d = c1 * sin + this.d * cos;\n    this.tx = tx1 * cos - this.ty * sin;\n    this.ty = tx1 * sin + this.ty * cos;\n    return this;\n  }\n  /**\n   * Appends the given Matrix to this Matrix.\n   * @param matrix - The matrix to append.\n   * @returns This matrix. Good for chaining method calls.\n   */\n  append(matrix) {\n    const a1 = this.a;\n    const b1 = this.b;\n    const c1 = this.c;\n    const d1 = this.d;\n    this.a = matrix.a * a1 + matrix.b * c1;\n    this.b = matrix.a * b1 + matrix.b * d1;\n    this.c = matrix.c * a1 + matrix.d * c1;\n    this.d = matrix.c * b1 + matrix.d * d1;\n    this.tx = matrix.tx * a1 + matrix.ty * c1 + this.tx;\n    this.ty = matrix.tx * b1 + matrix.ty * d1 + this.ty;\n    return this;\n  }\n  /**\n   * Appends two matrix's and sets the result to this matrix. AB = A * B\n   * @param a - The matrix to append.\n   * @param b - The matrix to append.\n   * @returns This matrix. Good for chaining method calls.\n   */\n  appendFrom(a, b) {\n    const a1 = a.a;\n    const b1 = a.b;\n    const c1 = a.c;\n    const d1 = a.d;\n    const tx = a.tx;\n    const ty = a.ty;\n    const a2 = b.a;\n    const b2 = b.b;\n    const c2 = b.c;\n    const d2 = b.d;\n    this.a = a1 * a2 + b1 * c2;\n    this.b = a1 * b2 + b1 * d2;\n    this.c = c1 * a2 + d1 * c2;\n    this.d = c1 * b2 + d1 * d2;\n    this.tx = tx * a2 + ty * c2 + b.tx;\n    this.ty = tx * b2 + ty * d2 + b.ty;\n    return this;\n  }\n  /**\n   * Sets the matrix based on all the available properties\n   * @param x - Position on the x axis\n   * @param y - Position on the y axis\n   * @param pivotX - Pivot on the x axis\n   * @param pivotY - Pivot on the y axis\n   * @param scaleX - Scale on the x axis\n   * @param scaleY - Scale on the y axis\n   * @param rotation - Rotation in radians\n   * @param skewX - Skew on the x axis\n   * @param skewY - Skew on the y axis\n   * @returns This matrix. Good for chaining method calls.\n   */\n  setTransform(x, y, pivotX, pivotY, scaleX, scaleY, rotation, skewX, skewY) {\n    this.a = Math.cos(rotation + skewY) * scaleX;\n    this.b = Math.sin(rotation + skewY) * scaleX;\n    this.c = -Math.sin(rotation - skewX) * scaleY;\n    this.d = Math.cos(rotation - skewX) * scaleY;\n    this.tx = x - (pivotX * this.a + pivotY * this.c);\n    this.ty = y - (pivotX * this.b + pivotY * this.d);\n    return this;\n  }\n  /**\n   * Prepends the given Matrix to this Matrix.\n   * @param matrix - The matrix to prepend\n   * @returns This matrix. Good for chaining method calls.\n   */\n  prepend(matrix) {\n    const tx1 = this.tx;\n    if (matrix.a !== 1 || matrix.b !== 0 || matrix.c !== 0 || matrix.d !== 1) {\n      const a1 = this.a;\n      const c1 = this.c;\n      this.a = a1 * matrix.a + this.b * matrix.c;\n      this.b = a1 * matrix.b + this.b * matrix.d;\n      this.c = c1 * matrix.a + this.d * matrix.c;\n      this.d = c1 * matrix.b + this.d * matrix.d;\n    }\n    this.tx = tx1 * matrix.a + this.ty * matrix.c + matrix.tx;\n    this.ty = tx1 * matrix.b + this.ty * matrix.d + matrix.ty;\n    return this;\n  }\n  /**\n   * Decomposes the matrix (x, y, scaleX, scaleY, and rotation) and sets the properties on to a transform.\n   * @param transform - The transform to apply the properties to.\n   * @returns The transform with the newly applied properties\n   */\n  decompose(transform) {\n    const a = this.a;\n    const b = this.b;\n    const c = this.c;\n    const d = this.d;\n    const pivot = transform.pivot;\n    const skewX = -Math.atan2(-c, d);\n    const skewY = Math.atan2(b, a);\n    const delta = Math.abs(skewX + skewY);\n    if (delta < 1e-5 || Math.abs(PI_2 - delta) < 1e-5) {\n      transform.rotation = skewY;\n      transform.skew.x = transform.skew.y = 0;\n    } else {\n      transform.rotation = 0;\n      transform.skew.x = skewX;\n      transform.skew.y = skewY;\n    }\n    transform.scale.x = Math.sqrt(a * a + b * b);\n    transform.scale.y = Math.sqrt(c * c + d * d);\n    transform.position.x = this.tx + (pivot.x * a + pivot.y * c);\n    transform.position.y = this.ty + (pivot.x * b + pivot.y * d);\n    return transform;\n  }\n  /**\n   * Inverts this matrix\n   * @returns This matrix. Good for chaining method calls.\n   */\n  invert() {\n    const a1 = this.a;\n    const b1 = this.b;\n    const c1 = this.c;\n    const d1 = this.d;\n    const tx1 = this.tx;\n    const n = a1 * d1 - b1 * c1;\n    this.a = d1 / n;\n    this.b = -b1 / n;\n    this.c = -c1 / n;\n    this.d = a1 / n;\n    this.tx = (c1 * this.ty - d1 * tx1) / n;\n    this.ty = -(a1 * this.ty - b1 * tx1) / n;\n    return this;\n  }\n  /** Checks if this matrix is an identity matrix */\n  isIdentity() {\n    return this.a === 1 && this.b === 0 && this.c === 0 && this.d === 1 && this.tx === 0 && this.ty === 0;\n  }\n  /**\n   * Resets this Matrix to an identity (default) matrix.\n   * @returns This matrix. Good for chaining method calls.\n   */\n  identity() {\n    this.a = 1;\n    this.b = 0;\n    this.c = 0;\n    this.d = 1;\n    this.tx = 0;\n    this.ty = 0;\n    return this;\n  }\n  /**\n   * Creates a new Matrix object with the same values as this one.\n   * @returns A copy of this matrix. Good for chaining method calls.\n   */\n  clone() {\n    const matrix = new Matrix();\n    matrix.a = this.a;\n    matrix.b = this.b;\n    matrix.c = this.c;\n    matrix.d = this.d;\n    matrix.tx = this.tx;\n    matrix.ty = this.ty;\n    return matrix;\n  }\n  /**\n   * Changes the values of the given matrix to be the same as the ones in this matrix\n   * @param matrix - The matrix to copy to.\n   * @returns The matrix given in parameter with its values updated.\n   */\n  copyTo(matrix) {\n    matrix.a = this.a;\n    matrix.b = this.b;\n    matrix.c = this.c;\n    matrix.d = this.d;\n    matrix.tx = this.tx;\n    matrix.ty = this.ty;\n    return matrix;\n  }\n  /**\n   * Changes the values of the matrix to be the same as the ones in given matrix\n   * @param matrix - The matrix to copy from.\n   * @returns this\n   */\n  copyFrom(matrix) {\n    this.a = matrix.a;\n    this.b = matrix.b;\n    this.c = matrix.c;\n    this.d = matrix.d;\n    this.tx = matrix.tx;\n    this.ty = matrix.ty;\n    return this;\n  }\n  /**\n   * check to see if two matrices are the same\n   * @param matrix - The matrix to compare to.\n   */\n  equals(matrix) {\n    return matrix.a === this.a && matrix.b === this.b && matrix.c === this.c && matrix.d === this.d && matrix.tx === this.tx && matrix.ty === this.ty;\n  }\n  toString() {\n    return `[pixi.js:Matrix a=${this.a} b=${this.b} c=${this.c} d=${this.d} tx=${this.tx} ty=${this.ty}]`;\n  }\n  /**\n   * A default (identity) matrix.\n   *\n   * This is a shared object, if you want to modify it consider creating a new `Matrix`\n   * @readonly\n   */\n  static get IDENTITY() {\n    return identityMatrix.identity();\n  }\n  /**\n   * A static Matrix that can be used to avoid creating new objects.\n   * Will always ensure the matrix is reset to identity when requested.\n   * Use this object for fast but temporary calculations, as it may be mutated later on.\n   * This is a different object to the `IDENTITY` object and so can be modified without changing `IDENTITY`.\n   * @readonly\n   */\n  static get shared() {\n    return tempMatrix.identity();\n  }\n}\nconst tempMatrix = new Matrix();\nconst identityMatrix = new Matrix();\n\nexport { Matrix };\n//# sourceMappingURL=Matrix.mjs.map\n","import { Matrix } from './Matrix.mjs';\n\n\"use strict\";\nconst ux = [1, 1, 0, -1, -1, -1, 0, 1, 1, 1, 0, -1, -1, -1, 0, 1];\nconst uy = [0, 1, 1, 1, 0, -1, -1, -1, 0, 1, 1, 1, 0, -1, -1, -1];\nconst vx = [0, -1, -1, -1, 0, 1, 1, 1, 0, 1, 1, 1, 0, -1, -1, -1];\nconst vy = [1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, 1, 1, 1, 0, -1];\nconst rotationCayley = [];\nconst rotationMatrices = [];\nconst signum = Math.sign;\nfunction init() {\n  for (let i = 0; i < 16; i++) {\n    const row = [];\n    rotationCayley.push(row);\n    for (let j = 0; j < 16; j++) {\n      const _ux = signum(ux[i] * ux[j] + vx[i] * uy[j]);\n      const _uy = signum(uy[i] * ux[j] + vy[i] * uy[j]);\n      const _vx = signum(ux[i] * vx[j] + vx[i] * vy[j]);\n      const _vy = signum(uy[i] * vx[j] + vy[i] * vy[j]);\n      for (let k = 0; k < 16; k++) {\n        if (ux[k] === _ux && uy[k] === _uy && vx[k] === _vx && vy[k] === _vy) {\n          row.push(k);\n          break;\n        }\n      }\n    }\n  }\n  for (let i = 0; i < 16; i++) {\n    const mat = new Matrix();\n    mat.set(ux[i], uy[i], vx[i], vy[i], 0, 0);\n    rotationMatrices.push(mat);\n  }\n}\ninit();\nconst groupD8 = {\n  /**\n   * | Rotation | Direction |\n   * |----------|-----------|\n   * | 0°       | East      |\n   * @memberof maths.groupD8\n   * @constant {GD8Symmetry}\n   */\n  E: 0,\n  /**\n   * | Rotation | Direction |\n   * |----------|-----------|\n   * | 45°↻     | Southeast |\n   * @memberof maths.groupD8\n   * @constant {GD8Symmetry}\n   */\n  SE: 1,\n  /**\n   * | Rotation | Direction |\n   * |----------|-----------|\n   * | 90°↻     | South     |\n   * @memberof maths.groupD8\n   * @constant {GD8Symmetry}\n   */\n  S: 2,\n  /**\n   * | Rotation | Direction |\n   * |----------|-----------|\n   * | 135°↻    | Southwest |\n   * @memberof maths.groupD8\n   * @constant {GD8Symmetry}\n   */\n  SW: 3,\n  /**\n   * | Rotation | Direction |\n   * |----------|-----------|\n   * | 180°     | West      |\n   * @memberof maths.groupD8\n   * @constant {GD8Symmetry}\n   */\n  W: 4,\n  /**\n   * | Rotation    | Direction    |\n   * |-------------|--------------|\n   * | -135°/225°↻ | Northwest    |\n   * @memberof maths.groupD8\n   * @constant {GD8Symmetry}\n   */\n  NW: 5,\n  /**\n   * | Rotation    | Direction    |\n   * |-------------|--------------|\n   * | -90°/270°↻  | North        |\n   * @memberof maths.groupD8\n   * @constant {GD8Symmetry}\n   */\n  N: 6,\n  /**\n   * | Rotation    | Direction    |\n   * |-------------|--------------|\n   * | -45°/315°↻  | Northeast    |\n   * @memberof maths.groupD8\n   * @constant {GD8Symmetry}\n   */\n  NE: 7,\n  /**\n   * Reflection about Y-axis.\n   * @memberof maths.groupD8\n   * @constant {GD8Symmetry}\n   */\n  MIRROR_VERTICAL: 8,\n  /**\n   * Reflection about the main diagonal.\n   * @memberof maths.groupD8\n   * @constant {GD8Symmetry}\n   */\n  MAIN_DIAGONAL: 10,\n  /**\n   * Reflection about X-axis.\n   * @memberof maths.groupD8\n   * @constant {GD8Symmetry}\n   */\n  MIRROR_HORIZONTAL: 12,\n  /**\n   * Reflection about reverse diagonal.\n   * @memberof maths.groupD8\n   * @constant {GD8Symmetry}\n   */\n  REVERSE_DIAGONAL: 14,\n  /**\n   * @memberof maths.groupD8\n   * @param {GD8Symmetry} ind - sprite rotation angle.\n   * @returns {GD8Symmetry} The X-component of the U-axis\n   *    after rotating the axes.\n   */\n  uX: (ind) => ux[ind],\n  /**\n   * @memberof maths.groupD8\n   * @param {GD8Symmetry} ind - sprite rotation angle.\n   * @returns {GD8Symmetry} The Y-component of the U-axis\n   *    after rotating the axes.\n   */\n  uY: (ind) => uy[ind],\n  /**\n   * @memberof maths.groupD8\n   * @param {GD8Symmetry} ind - sprite rotation angle.\n   * @returns {GD8Symmetry} The X-component of the V-axis\n   *    after rotating the axes.\n   */\n  vX: (ind) => vx[ind],\n  /**\n   * @memberof maths.groupD8\n   * @param {GD8Symmetry} ind - sprite rotation angle.\n   * @returns {GD8Symmetry} The Y-component of the V-axis\n   *    after rotating the axes.\n   */\n  vY: (ind) => vy[ind],\n  /**\n   * @memberof maths.groupD8\n   * @param {GD8Symmetry} rotation - symmetry whose opposite\n   *   is needed. Only rotations have opposite symmetries while\n   *   reflections don't.\n   * @returns {GD8Symmetry} The opposite symmetry of `rotation`\n   */\n  inv: (rotation) => {\n    if (rotation & 8) {\n      return rotation & 15;\n    }\n    return -rotation & 7;\n  },\n  /**\n   * Composes the two D8 operations.\n   *\n   * Taking `^` as reflection:\n   *\n   * |       | E=0 | S=2 | W=4 | N=6 | E^=8 | S^=10 | W^=12 | N^=14 |\n   * |-------|-----|-----|-----|-----|------|-------|-------|-------|\n   * | E=0   | E   | S   | W   | N   | E^   | S^    | W^    | N^    |\n   * | S=2   | S   | W   | N   | E   | S^   | W^    | N^    | E^    |\n   * | W=4   | W   | N   | E   | S   | W^   | N^    | E^    | S^    |\n   * | N=6   | N   | E   | S   | W   | N^   | E^    | S^    | W^    |\n   * | E^=8  | E^  | N^  | W^  | S^  | E    | N     | W     | S     |\n   * | S^=10 | S^  | E^  | N^  | W^  | S    | E     | N     | W     |\n   * | W^=12 | W^  | S^  | E^  | N^  | W    | S     | E     | N     |\n   * | N^=14 | N^  | W^  | S^  | E^  | N    | W     | S     | E     |\n   *\n   * [This is a Cayley table]{@link https://en.wikipedia.org/wiki/Cayley_table}\n   * @memberof maths.groupD8\n   * @param {GD8Symmetry} rotationSecond - Second operation, which\n   *   is the row in the above cayley table.\n   * @param {GD8Symmetry} rotationFirst - First operation, which\n   *   is the column in the above cayley table.\n   * @returns {GD8Symmetry} Composed operation\n   */\n  add: (rotationSecond, rotationFirst) => rotationCayley[rotationSecond][rotationFirst],\n  /**\n   * Reverse of `add`.\n   * @memberof maths.groupD8\n   * @param {GD8Symmetry} rotationSecond - Second operation\n   * @param {GD8Symmetry} rotationFirst - First operation\n   * @returns {GD8Symmetry} Result\n   */\n  sub: (rotationSecond, rotationFirst) => rotationCayley[rotationSecond][groupD8.inv(rotationFirst)],\n  /**\n   * Adds 180 degrees to rotation, which is a commutative\n   * operation.\n   * @memberof maths.groupD8\n   * @param {number} rotation - The number to rotate.\n   * @returns {number} Rotated number\n   */\n  rotate180: (rotation) => rotation ^ 4,\n  /**\n   * Checks if the rotation angle is vertical, i.e. south\n   * or north. It doesn't work for reflections.\n   * @memberof maths.groupD8\n   * @param {GD8Symmetry} rotation - The number to check.\n   * @returns {boolean} Whether or not the direction is vertical\n   */\n  isVertical: (rotation) => (rotation & 3) === 2,\n  // rotation % 4 === 2\n  /**\n   * Approximates the vector `V(dx,dy)` into one of the\n   * eight directions provided by `groupD8`.\n   * @memberof maths.groupD8\n   * @param {number} dx - X-component of the vector\n   * @param {number} dy - Y-component of the vector\n   * @returns {GD8Symmetry} Approximation of the vector into\n   *  one of the eight symmetries.\n   */\n  byDirection: (dx, dy) => {\n    if (Math.abs(dx) * 2 <= Math.abs(dy)) {\n      if (dy >= 0) {\n        return groupD8.S;\n      }\n      return groupD8.N;\n    } else if (Math.abs(dy) * 2 <= Math.abs(dx)) {\n      if (dx > 0) {\n        return groupD8.E;\n      }\n      return groupD8.W;\n    } else if (dy > 0) {\n      if (dx > 0) {\n        return groupD8.SE;\n      }\n      return groupD8.SW;\n    } else if (dx > 0) {\n      return groupD8.NE;\n    }\n    return groupD8.NW;\n  },\n  /**\n   * Helps sprite to compensate texture packer rotation.\n   * @memberof maths.groupD8\n   * @param {Matrix} matrix - sprite world matrix\n   * @param {GD8Symmetry} rotation - The rotation factor to use.\n   * @param {number} tx - sprite anchoring\n   * @param {number} ty - sprite anchoring\n   */\n  matrixAppendRotationInv: (matrix, rotation, tx = 0, ty = 0) => {\n    const mat = rotationMatrices[groupD8.inv(rotation)];\n    mat.tx = tx;\n    mat.ty = ty;\n    matrix.append(mat);\n  }\n};\n\nexport { groupD8 };\n//# sourceMappingURL=groupD8.mjs.map\n","import { Point } from '../point/Point.mjs';\n\n\"use strict\";\nconst tempPoints = [new Point(), new Point(), new Point(), new Point()];\nclass Rectangle {\n  /**\n   * @param x - The X coordinate of the upper-left corner of the rectangle\n   * @param y - The Y coordinate of the upper-left corner of the rectangle\n   * @param width - The overall width of the rectangle\n   * @param height - The overall height of the rectangle\n   */\n  constructor(x = 0, y = 0, width = 0, height = 0) {\n    /**\n     * The type of the object, mainly used to avoid `instanceof` checks\n     * @default 'rectangle'\n     */\n    this.type = \"rectangle\";\n    this.x = Number(x);\n    this.y = Number(y);\n    this.width = Number(width);\n    this.height = Number(height);\n  }\n  /** Returns the left edge of the rectangle. */\n  get left() {\n    return this.x;\n  }\n  /** Returns the right edge of the rectangle. */\n  get right() {\n    return this.x + this.width;\n  }\n  /** Returns the top edge of the rectangle. */\n  get top() {\n    return this.y;\n  }\n  /** Returns the bottom edge of the rectangle. */\n  get bottom() {\n    return this.y + this.height;\n  }\n  /** Determines whether the Rectangle is empty. */\n  isEmpty() {\n    return this.left === this.right || this.top === this.bottom;\n  }\n  /** A constant empty rectangle. This is a new object every time the property is accessed */\n  static get EMPTY() {\n    return new Rectangle(0, 0, 0, 0);\n  }\n  /**\n   * Creates a clone of this Rectangle\n   * @returns a copy of the rectangle\n   */\n  clone() {\n    return new Rectangle(this.x, this.y, this.width, this.height);\n  }\n  /**\n   * Converts a Bounds object to a Rectangle object.\n   * @param bounds - The bounds to copy and convert to a rectangle.\n   * @returns Returns itself.\n   */\n  copyFromBounds(bounds) {\n    this.x = bounds.minX;\n    this.y = bounds.minY;\n    this.width = bounds.maxX - bounds.minX;\n    this.height = bounds.maxY - bounds.minY;\n    return this;\n  }\n  /**\n   * Copies another rectangle to this one.\n   * @param rectangle - The rectangle to copy from.\n   * @returns Returns itself.\n   */\n  copyFrom(rectangle) {\n    this.x = rectangle.x;\n    this.y = rectangle.y;\n    this.width = rectangle.width;\n    this.height = rectangle.height;\n    return this;\n  }\n  /**\n   * Copies this rectangle to another one.\n   * @param rectangle - The rectangle to copy to.\n   * @returns Returns given parameter.\n   */\n  copyTo(rectangle) {\n    rectangle.copyFrom(this);\n    return rectangle;\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this Rectangle\n   * @param x - The X coordinate of the point to test\n   * @param y - The Y coordinate of the point to test\n   * @returns Whether the x/y coordinates are within this Rectangle\n   */\n  contains(x, y) {\n    if (this.width <= 0 || this.height <= 0) {\n      return false;\n    }\n    if (x >= this.x && x < this.x + this.width) {\n      if (y >= this.y && y < this.y + this.height) {\n        return true;\n      }\n    }\n    return false;\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this rectangle including the stroke.\n   * @param x - The X coordinate of the point to test\n   * @param y - The Y coordinate of the point to test\n   * @param strokeWidth - The width of the line to check\n   * @param alignment - The alignment of the stroke, 0.5 by default\n   * @returns Whether the x/y coordinates are within this rectangle\n   */\n  strokeContains(x, y, strokeWidth, alignment = 0.5) {\n    const { width, height } = this;\n    if (width <= 0 || height <= 0)\n      return false;\n    const _x = this.x;\n    const _y = this.y;\n    const strokeWidthOuter = strokeWidth * (1 - alignment);\n    const strokeWidthInner = strokeWidth - strokeWidthOuter;\n    const outerLeft = _x - strokeWidthOuter;\n    const outerRight = _x + width + strokeWidthOuter;\n    const outerTop = _y - strokeWidthOuter;\n    const outerBottom = _y + height + strokeWidthOuter;\n    const innerLeft = _x + strokeWidthInner;\n    const innerRight = _x + width - strokeWidthInner;\n    const innerTop = _y + strokeWidthInner;\n    const innerBottom = _y + height - strokeWidthInner;\n    return x >= outerLeft && x <= outerRight && y >= outerTop && y <= outerBottom && !(x > innerLeft && x < innerRight && y > innerTop && y < innerBottom);\n  }\n  /**\n   * Determines whether the `other` Rectangle transformed by `transform` intersects with `this` Rectangle object.\n   * Returns true only if the area of the intersection is >0, this means that Rectangles\n   * sharing a side are not overlapping. Another side effect is that an arealess rectangle\n   * (width or height equal to zero) can't intersect any other rectangle.\n   * @param {Rectangle} other - The Rectangle to intersect with `this`.\n   * @param {Matrix} transform - The transformation matrix of `other`.\n   * @returns {boolean} A value of `true` if the transformed `other` Rectangle intersects with `this`; otherwise `false`.\n   */\n  intersects(other, transform) {\n    if (!transform) {\n      const x02 = this.x < other.x ? other.x : this.x;\n      const x12 = this.right > other.right ? other.right : this.right;\n      if (x12 <= x02) {\n        return false;\n      }\n      const y02 = this.y < other.y ? other.y : this.y;\n      const y12 = this.bottom > other.bottom ? other.bottom : this.bottom;\n      return y12 > y02;\n    }\n    const x0 = this.left;\n    const x1 = this.right;\n    const y0 = this.top;\n    const y1 = this.bottom;\n    if (x1 <= x0 || y1 <= y0) {\n      return false;\n    }\n    const lt = tempPoints[0].set(other.left, other.top);\n    const lb = tempPoints[1].set(other.left, other.bottom);\n    const rt = tempPoints[2].set(other.right, other.top);\n    const rb = tempPoints[3].set(other.right, other.bottom);\n    if (rt.x <= lt.x || lb.y <= lt.y) {\n      return false;\n    }\n    const s = Math.sign(transform.a * transform.d - transform.b * transform.c);\n    if (s === 0) {\n      return false;\n    }\n    transform.apply(lt, lt);\n    transform.apply(lb, lb);\n    transform.apply(rt, rt);\n    transform.apply(rb, rb);\n    if (Math.max(lt.x, lb.x, rt.x, rb.x) <= x0 || Math.min(lt.x, lb.x, rt.x, rb.x) >= x1 || Math.max(lt.y, lb.y, rt.y, rb.y) <= y0 || Math.min(lt.y, lb.y, rt.y, rb.y) >= y1) {\n      return false;\n    }\n    const nx = s * (lb.y - lt.y);\n    const ny = s * (lt.x - lb.x);\n    const n00 = nx * x0 + ny * y0;\n    const n10 = nx * x1 + ny * y0;\n    const n01 = nx * x0 + ny * y1;\n    const n11 = nx * x1 + ny * y1;\n    if (Math.max(n00, n10, n01, n11) <= nx * lt.x + ny * lt.y || Math.min(n00, n10, n01, n11) >= nx * rb.x + ny * rb.y) {\n      return false;\n    }\n    const mx = s * (lt.y - rt.y);\n    const my = s * (rt.x - lt.x);\n    const m00 = mx * x0 + my * y0;\n    const m10 = mx * x1 + my * y0;\n    const m01 = mx * x0 + my * y1;\n    const m11 = mx * x1 + my * y1;\n    if (Math.max(m00, m10, m01, m11) <= mx * lt.x + my * lt.y || Math.min(m00, m10, m01, m11) >= mx * rb.x + my * rb.y) {\n      return false;\n    }\n    return true;\n  }\n  /**\n   * Pads the rectangle making it grow in all directions.\n   * If paddingY is omitted, both paddingX and paddingY will be set to paddingX.\n   * @param paddingX - The horizontal padding amount.\n   * @param paddingY - The vertical padding amount.\n   * @returns Returns itself.\n   */\n  pad(paddingX = 0, paddingY = paddingX) {\n    this.x -= paddingX;\n    this.y -= paddingY;\n    this.width += paddingX * 2;\n    this.height += paddingY * 2;\n    return this;\n  }\n  /**\n   * Fits this rectangle around the passed one.\n   * @param rectangle - The rectangle to fit.\n   * @returns Returns itself.\n   */\n  fit(rectangle) {\n    const x1 = Math.max(this.x, rectangle.x);\n    const x2 = Math.min(this.x + this.width, rectangle.x + rectangle.width);\n    const y1 = Math.max(this.y, rectangle.y);\n    const y2 = Math.min(this.y + this.height, rectangle.y + rectangle.height);\n    this.x = x1;\n    this.width = Math.max(x2 - x1, 0);\n    this.y = y1;\n    this.height = Math.max(y2 - y1, 0);\n    return this;\n  }\n  /**\n   * Enlarges rectangle that way its corners lie on grid\n   * @param resolution - resolution\n   * @param eps - precision\n   * @returns Returns itself.\n   */\n  ceil(resolution = 1, eps = 1e-3) {\n    const x2 = Math.ceil((this.x + this.width - eps) * resolution) / resolution;\n    const y2 = Math.ceil((this.y + this.height - eps) * resolution) / resolution;\n    this.x = Math.floor((this.x + eps) * resolution) / resolution;\n    this.y = Math.floor((this.y + eps) * resolution) / resolution;\n    this.width = x2 - this.x;\n    this.height = y2 - this.y;\n    return this;\n  }\n  /**\n   * Enlarges this rectangle to include the passed rectangle.\n   * @param rectangle - The rectangle to include.\n   * @returns Returns itself.\n   */\n  enlarge(rectangle) {\n    const x1 = Math.min(this.x, rectangle.x);\n    const x2 = Math.max(this.x + this.width, rectangle.x + rectangle.width);\n    const y1 = Math.min(this.y, rectangle.y);\n    const y2 = Math.max(this.y + this.height, rectangle.y + rectangle.height);\n    this.x = x1;\n    this.width = x2 - x1;\n    this.y = y1;\n    this.height = y2 - y1;\n    return this;\n  }\n  /**\n   * Returns the framing rectangle of the rectangle as a Rectangle object\n   * @param out - optional rectangle to store the result\n   * @returns The framing rectangle\n   */\n  getBounds(out) {\n    out || (out = new Rectangle());\n    out.copyFrom(this);\n    return out;\n  }\n  /**\n   * Checks if this rectangle fully contains another rectangle.\n   *\n   * A rectangle contains another rectangle if all four corners of the other rectangle\n   * lie within the bounds of this rectangle.\n   *\n   * ```ts\n   * const container = new Rectangle(0, 0, 100, 100);\n   * const inside = new Rectangle(25, 25, 50, 50);\n   * const partial = new Rectangle(75, 75, 50, 50);\n   *\n   * container.containsRect(inside); // Returns true\n   * container.containsRect(partial); // Returns false - partial overlap\n   * ```\n   *\n   * Note: If either rectangle has a width or height of 0, this method returns false\n   * since a zero-area rectangle cannot meaningfully contain another rectangle.\n   * @param other - The rectangle to check if it is contained within this one\n   * @returns True if the other rectangle is fully contained within this one\n   */\n  containsRect(other) {\n    if (this.width <= 0 || this.height <= 0)\n      return false;\n    const x1 = other.x;\n    const y1 = other.y;\n    const x2 = other.x + other.width;\n    const y2 = other.y + other.height;\n    return x1 >= this.x && x1 < this.x + this.width && y1 >= this.y && y1 < this.y + this.height && x2 >= this.x && x2 < this.x + this.width && y2 >= this.y && y2 < this.y + this.height;\n  }\n  toString() {\n    return `[pixi.js/math:Rectangle x=${this.x} y=${this.y} width=${this.width} height=${this.height}]`;\n  }\n}\n\nexport { Rectangle };\n//# sourceMappingURL=Rectangle.mjs.map\n","\"use strict\";\nconst uidCache = {\n  default: -1\n};\nfunction uid(name = \"default\") {\n  if (uidCache[name] === void 0) {\n    uidCache[name] = -1;\n  }\n  return ++uidCache[name];\n}\nfunction resetUids() {\n  for (const key in uidCache) {\n    delete uidCache[key];\n  }\n}\n\nexport { resetUids, uid };\n//# sourceMappingURL=uid.mjs.map\n","\"use strict\";\nconst warnings = {};\nconst v8_0_0 = \"8.0.0\";\nconst v8_3_4 = \"8.3.4\";\nfunction deprecation(version, message, ignoreDepth = 3) {\n  if (warnings[message]) {\n    return;\n  }\n  let stack = new Error().stack;\n  if (typeof stack === \"undefined\") {\n    console.warn(\"PixiJS Deprecation Warning: \", `${message}\nDeprecated since v${version}`);\n  } else {\n    stack = stack.split(\"\\n\").splice(ignoreDepth).join(\"\\n\");\n    if (console.groupCollapsed) {\n      console.groupCollapsed(\n        \"%cPixiJS Deprecation Warning: %c%s\",\n        \"color:#614108;background:#fffbe6\",\n        \"font-weight:normal;color:#614108;background:#fffbe6\",\n        `${message}\nDeprecated since v${version}`\n      );\n      console.warn(stack);\n      console.groupEnd();\n    } else {\n      console.warn(\"PixiJS Deprecation Warning: \", `${message}\nDeprecated since v${version}`);\n      console.warn(stack);\n    }\n  }\n  warnings[message] = true;\n}\n\nexport { deprecation, v8_0_0, v8_3_4 };\n//# sourceMappingURL=deprecation.mjs.map\n","\"use strict\";\nconst NOOP = () => {\n};\n\nexport { NOOP };\n//# sourceMappingURL=NOOP.mjs.map\n","\"use strict\";\nfunction nextPow2(v) {\n  v += v === 0 ? 1 : 0;\n  --v;\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v + 1;\n}\nfunction isPow2(v) {\n  return !(v & v - 1) && !!v;\n}\nfunction log2(v) {\n  let r = (v > 65535 ? 1 : 0) << 4;\n  v >>>= r;\n  let shift = (v > 255 ? 1 : 0) << 3;\n  v >>>= shift;\n  r |= shift;\n  shift = (v > 15 ? 1 : 0) << 2;\n  v >>>= shift;\n  r |= shift;\n  shift = (v > 3 ? 1 : 0) << 1;\n  v >>>= shift;\n  r |= shift;\n  return r | v >> 1;\n}\n\nexport { isPow2, log2, nextPow2 };\n//# sourceMappingURL=pow2.mjs.map\n","\"use strict\";\nfunction definedProps(obj) {\n  const result = {};\n  for (const key in obj) {\n    if (obj[key] !== void 0) {\n      result[key] = obj[key];\n    }\n  }\n  return result;\n}\n\nexport { definedProps };\n//# sourceMappingURL=definedProps.mjs.map\n","import EventEmitter from 'eventemitter3';\nimport { uid } from '../../../../utils/data/uid.mjs';\nimport { deprecation, v8_0_0 } from '../../../../utils/logging/deprecation.mjs';\n\n\"use strict\";\nconst idHash = /* @__PURE__ */ Object.create(null);\nfunction createResourceIdFromString(value) {\n  const id = idHash[value];\n  if (id === void 0) {\n    idHash[value] = uid(\"resource\");\n  }\n  return id;\n}\nconst _TextureStyle = class _TextureStyle extends EventEmitter {\n  /**\n   * @param options - options for the style\n   */\n  constructor(options = {}) {\n    super();\n    this._resourceType = \"textureSampler\";\n    this._touched = 0;\n    /**\n     * Specifies the maximum anisotropy value clamp used by the sampler.\n     * Note: Most implementations support {@link GPUSamplerDescriptor#maxAnisotropy} values in range\n     * between 1 and 16, inclusive. The used value of {@link GPUSamplerDescriptor#maxAnisotropy} will\n     * be clamped to the maximum value that the platform supports.\n     * @internal\n     * @ignore\n     */\n    this._maxAnisotropy = 1;\n    /**\n     * Has the style been destroyed?\n     * @readonly\n     */\n    this.destroyed = false;\n    options = { ..._TextureStyle.defaultOptions, ...options };\n    this.addressMode = options.addressMode;\n    this.addressModeU = options.addressModeU ?? this.addressModeU;\n    this.addressModeV = options.addressModeV ?? this.addressModeV;\n    this.addressModeW = options.addressModeW ?? this.addressModeW;\n    this.scaleMode = options.scaleMode;\n    this.magFilter = options.magFilter ?? this.magFilter;\n    this.minFilter = options.minFilter ?? this.minFilter;\n    this.mipmapFilter = options.mipmapFilter ?? this.mipmapFilter;\n    this.lodMinClamp = options.lodMinClamp;\n    this.lodMaxClamp = options.lodMaxClamp;\n    this.compare = options.compare;\n    this.maxAnisotropy = options.maxAnisotropy ?? 1;\n  }\n  set addressMode(value) {\n    this.addressModeU = value;\n    this.addressModeV = value;\n    this.addressModeW = value;\n  }\n  /** setting this will set wrapModeU,wrapModeV and wrapModeW all at once! */\n  get addressMode() {\n    return this.addressModeU;\n  }\n  set wrapMode(value) {\n    deprecation(v8_0_0, \"TextureStyle.wrapMode is now TextureStyle.addressMode\");\n    this.addressMode = value;\n  }\n  get wrapMode() {\n    return this.addressMode;\n  }\n  set scaleMode(value) {\n    this.magFilter = value;\n    this.minFilter = value;\n    this.mipmapFilter = value;\n  }\n  /** setting this will set magFilter,minFilter and mipmapFilter all at once!  */\n  get scaleMode() {\n    return this.magFilter;\n  }\n  /** Specifies the maximum anisotropy value clamp used by the sampler. */\n  set maxAnisotropy(value) {\n    this._maxAnisotropy = Math.min(value, 16);\n    if (this._maxAnisotropy > 1) {\n      this.scaleMode = \"linear\";\n    }\n  }\n  get maxAnisotropy() {\n    return this._maxAnisotropy;\n  }\n  // TODO - move this to WebGL?\n  get _resourceId() {\n    return this._sharedResourceId || this._generateResourceId();\n  }\n  update() {\n    this.emit(\"change\", this);\n    this._sharedResourceId = null;\n  }\n  _generateResourceId() {\n    const bigKey = `${this.addressModeU}-${this.addressModeV}-${this.addressModeW}-${this.magFilter}-${this.minFilter}-${this.mipmapFilter}-${this.lodMinClamp}-${this.lodMaxClamp}-${this.compare}-${this._maxAnisotropy}`;\n    this._sharedResourceId = createResourceIdFromString(bigKey);\n    return this._resourceId;\n  }\n  /** Destroys the style */\n  destroy() {\n    this.destroyed = true;\n    this.emit(\"destroy\", this);\n    this.emit(\"change\", this);\n    this.removeAllListeners();\n  }\n};\n/** default options for the style */\n_TextureStyle.defaultOptions = {\n  addressMode: \"clamp-to-edge\",\n  scaleMode: \"linear\"\n};\nlet TextureStyle = _TextureStyle;\n\nexport { TextureStyle };\n//# sourceMappingURL=TextureStyle.mjs.map\n","import EventEmitter from 'eventemitter3';\nimport { isPow2 } from '../../../../../maths/misc/pow2.mjs';\nimport { definedProps } from '../../../../../scene/container/utils/definedProps.mjs';\nimport { uid } from '../../../../../utils/data/uid.mjs';\nimport { TextureStyle } from '../TextureStyle.mjs';\n\n\"use strict\";\nconst _TextureSource = class _TextureSource extends EventEmitter {\n  /**\n   * @param options - options for creating a new TextureSource\n   */\n  constructor(options = {}) {\n    super();\n    this.options = options;\n    /** unique id for this Texture source */\n    this.uid = uid(\"textureSource\");\n    /**\n     * The resource type used by this TextureSource. This is used by the bind groups to determine\n     * how to handle this resource.\n     * @ignore\n     * @internal\n     */\n    this._resourceType = \"textureSource\";\n    /**\n     * i unique resource id, used by the bind group systems.\n     * This can change if the texture is resized or its resource changes\n     */\n    this._resourceId = uid(\"resource\");\n    /**\n     * this is how the backends know how to upload this texture to the GPU\n     * It changes depending on the resource type. Classes that extend TextureSource\n     * should override this property.\n     * @ignore\n     * @internal\n     */\n    this.uploadMethodId = \"unknown\";\n    // dimensions\n    this._resolution = 1;\n    /** the pixel width of this texture source. This is the REAL pure number, not accounting resolution */\n    this.pixelWidth = 1;\n    /** the pixel height of this texture source. This is the REAL pure number, not accounting resolution */\n    this.pixelHeight = 1;\n    /**\n     * the width of this texture source, accounting for resolution\n     * eg pixelWidth 200, resolution 2, then width will be 100\n     */\n    this.width = 1;\n    /**\n     * the height of this texture source, accounting for resolution\n     * eg pixelHeight 200, resolution 2, then height will be 100\n     */\n    this.height = 1;\n    /**\n     * The number of samples of a multisample texture. This is always 1 for non-multisample textures.\n     * To enable multisample for a texture, set antialias to true\n     * @internal\n     * @ignore\n     */\n    this.sampleCount = 1;\n    /** The number of mip levels to generate for this texture. this is  overridden if autoGenerateMipmaps is true */\n    this.mipLevelCount = 1;\n    /**\n     * Should we auto generate mipmaps for this texture? This will automatically generate mipmaps\n     * for this texture when uploading to the GPU. Mipmapped textures take up more memory, but\n     * can look better when scaled down.\n     *\n     * For performance reasons, it is recommended to NOT use this with RenderTextures, as they are often updated every frame.\n     * If you do, make sure to call `updateMipmaps` after you update the texture.\n     */\n    this.autoGenerateMipmaps = false;\n    /** the format that the texture data has */\n    this.format = \"rgba8unorm\";\n    /** how many dimensions does this texture have? currently v8 only supports 2d */\n    this.dimension = \"2d\";\n    /**\n     * Only really affects RenderTextures.\n     * Should we use antialiasing for this texture. It will look better, but may impact performance as a\n     * Blit operation will be required to resolve the texture.\n     */\n    this.antialias = false;\n    /**\n     * Used by automatic texture Garbage Collection, stores last GC tick when it was bound\n     * @protected\n     */\n    this._touched = 0;\n    /**\n     * Used by the batcher to build texture batches. faster to have the variable here!\n     * @protected\n     */\n    this._batchTick = -1;\n    /**\n     * A temporary batch location for the texture batching. Here for performance reasons only!\n     * @protected\n     */\n    this._textureBindLocation = -1;\n    options = { ..._TextureSource.defaultOptions, ...options };\n    this.label = options.label ?? \"\";\n    this.resource = options.resource;\n    this.autoGarbageCollect = options.autoGarbageCollect;\n    this._resolution = options.resolution;\n    if (options.width) {\n      this.pixelWidth = options.width * this._resolution;\n    } else {\n      this.pixelWidth = this.resource ? this.resourceWidth ?? 1 : 1;\n    }\n    if (options.height) {\n      this.pixelHeight = options.height * this._resolution;\n    } else {\n      this.pixelHeight = this.resource ? this.resourceHeight ?? 1 : 1;\n    }\n    this.width = this.pixelWidth / this._resolution;\n    this.height = this.pixelHeight / this._resolution;\n    this.format = options.format;\n    this.dimension = options.dimensions;\n    this.mipLevelCount = options.mipLevelCount;\n    this.autoGenerateMipmaps = options.autoGenerateMipmaps;\n    this.sampleCount = options.sampleCount;\n    this.antialias = options.antialias;\n    this.alphaMode = options.alphaMode;\n    this.style = new TextureStyle(definedProps(options));\n    this.destroyed = false;\n    this._refreshPOT();\n  }\n  /** returns itself */\n  get source() {\n    return this;\n  }\n  /** the style of the texture */\n  get style() {\n    return this._style;\n  }\n  set style(value) {\n    if (this.style === value)\n      return;\n    this._style?.off(\"change\", this._onStyleChange, this);\n    this._style = value;\n    this._style?.on(\"change\", this._onStyleChange, this);\n    this._onStyleChange();\n  }\n  /** setting this will set wrapModeU,wrapModeV and wrapModeW all at once! */\n  get addressMode() {\n    return this._style.addressMode;\n  }\n  set addressMode(value) {\n    this._style.addressMode = value;\n  }\n  /** setting this will set wrapModeU,wrapModeV and wrapModeW all at once! */\n  get repeatMode() {\n    return this._style.addressMode;\n  }\n  set repeatMode(value) {\n    this._style.addressMode = value;\n  }\n  /** Specifies the sampling behavior when the sample footprint is smaller than or equal to one texel. */\n  get magFilter() {\n    return this._style.magFilter;\n  }\n  set magFilter(value) {\n    this._style.magFilter = value;\n  }\n  /** Specifies the sampling behavior when the sample footprint is larger than one texel. */\n  get minFilter() {\n    return this._style.minFilter;\n  }\n  set minFilter(value) {\n    this._style.minFilter = value;\n  }\n  /** Specifies behavior for sampling between mipmap levels. */\n  get mipmapFilter() {\n    return this._style.mipmapFilter;\n  }\n  set mipmapFilter(value) {\n    this._style.mipmapFilter = value;\n  }\n  /** Specifies the minimum and maximum levels of detail, respectively, used internally when sampling a texture. */\n  get lodMinClamp() {\n    return this._style.lodMinClamp;\n  }\n  set lodMinClamp(value) {\n    this._style.lodMinClamp = value;\n  }\n  /** Specifies the minimum and maximum levels of detail, respectively, used internally when sampling a texture. */\n  get lodMaxClamp() {\n    return this._style.lodMaxClamp;\n  }\n  set lodMaxClamp(value) {\n    this._style.lodMaxClamp = value;\n  }\n  _onStyleChange() {\n    this.emit(\"styleChange\", this);\n  }\n  /** call this if you have modified the texture outside of the constructor */\n  update() {\n    if (this.resource) {\n      const resolution = this._resolution;\n      const didResize = this.resize(this.resourceWidth / resolution, this.resourceHeight / resolution);\n      if (didResize)\n        return;\n    }\n    this.emit(\"update\", this);\n  }\n  /** Destroys this texture source */\n  destroy() {\n    this.destroyed = true;\n    this.emit(\"destroy\", this);\n    this.emit(\"change\", this);\n    if (this._style) {\n      this._style.destroy();\n      this._style = null;\n    }\n    this.uploadMethodId = null;\n    this.resource = null;\n    this.removeAllListeners();\n  }\n  /**\n   * This will unload the Texture source from the GPU. This will free up the GPU memory\n   * As soon as it is required fore rendering, it will be re-uploaded.\n   */\n  unload() {\n    this._resourceId = uid(\"resource\");\n    this.emit(\"change\", this);\n    this.emit(\"unload\", this);\n  }\n  /** the width of the resource. This is the REAL pure number, not accounting resolution   */\n  get resourceWidth() {\n    const { resource } = this;\n    return resource.naturalWidth || resource.videoWidth || resource.displayWidth || resource.width;\n  }\n  /** the height of the resource. This is the REAL pure number, not accounting resolution */\n  get resourceHeight() {\n    const { resource } = this;\n    return resource.naturalHeight || resource.videoHeight || resource.displayHeight || resource.height;\n  }\n  /**\n   * the resolution of the texture. Changing this number, will not change the number of pixels in the actual texture\n   * but will the size of the texture when rendered.\n   *\n   * changing the resolution of this texture to 2 for example will make it appear twice as small when rendered (as pixel\n   * density will have increased)\n   */\n  get resolution() {\n    return this._resolution;\n  }\n  set resolution(resolution) {\n    if (this._resolution === resolution)\n      return;\n    this._resolution = resolution;\n    this.width = this.pixelWidth / resolution;\n    this.height = this.pixelHeight / resolution;\n  }\n  /**\n   * Resize the texture, this is handy if you want to use the texture as a render texture\n   * @param width - the new width of the texture\n   * @param height - the new height of the texture\n   * @param resolution - the new resolution of the texture\n   * @returns - if the texture was resized\n   */\n  resize(width, height, resolution) {\n    resolution || (resolution = this._resolution);\n    width || (width = this.width);\n    height || (height = this.height);\n    const newPixelWidth = Math.round(width * resolution);\n    const newPixelHeight = Math.round(height * resolution);\n    this.width = newPixelWidth / resolution;\n    this.height = newPixelHeight / resolution;\n    this._resolution = resolution;\n    if (this.pixelWidth === newPixelWidth && this.pixelHeight === newPixelHeight) {\n      return false;\n    }\n    this._refreshPOT();\n    this.pixelWidth = newPixelWidth;\n    this.pixelHeight = newPixelHeight;\n    this.emit(\"resize\", this);\n    this._resourceId = uid(\"resource\");\n    this.emit(\"change\", this);\n    return true;\n  }\n  /**\n   * Lets the renderer know that this texture has been updated and its mipmaps should be re-generated.\n   * This is only important for RenderTexture instances, as standard Texture instances will have their\n   * mipmaps generated on upload. You should call this method after you make any change to the texture\n   *\n   * The reason for this is is can be quite expensive to update mipmaps for a texture. So by default,\n   * We want you, the developer to specify when this action should happen.\n   *\n   * Generally you don't want to have mipmaps generated on Render targets that are changed every frame,\n   */\n  updateMipmaps() {\n    if (this.autoGenerateMipmaps && this.mipLevelCount > 1) {\n      this.emit(\"updateMipmaps\", this);\n    }\n  }\n  set wrapMode(value) {\n    this._style.wrapMode = value;\n  }\n  get wrapMode() {\n    return this._style.wrapMode;\n  }\n  set scaleMode(value) {\n    this._style.scaleMode = value;\n  }\n  /** setting this will set magFilter,minFilter and mipmapFilter all at once!  */\n  get scaleMode() {\n    return this._style.scaleMode;\n  }\n  /**\n   * Refresh check for isPowerOfTwo texture based on size\n   * @private\n   */\n  _refreshPOT() {\n    this.isPowerOfTwo = isPow2(this.pixelWidth) && isPow2(this.pixelHeight);\n  }\n  static test(_resource) {\n    throw new Error(\"Unimplemented\");\n  }\n};\n/** The default options used when creating a new TextureSource. override these to add your own defaults */\n_TextureSource.defaultOptions = {\n  resolution: 1,\n  format: \"bgra8unorm\",\n  alphaMode: \"premultiply-alpha-on-upload\",\n  dimensions: \"2d\",\n  mipLevelCount: 1,\n  autoGenerateMipmaps: false,\n  sampleCount: 1,\n  antialias: false,\n  autoGarbageCollect: false\n};\nlet TextureSource = _TextureSource;\n\nexport { TextureSource };\n//# sourceMappingURL=TextureSource.mjs.map\n","import { ExtensionType } from '../../../../../extensions/Extensions.mjs';\nimport { TextureSource } from './TextureSource.mjs';\n\n\"use strict\";\nclass BufferImageSource extends TextureSource {\n  constructor(options) {\n    const buffer = options.resource || new Float32Array(options.width * options.height * 4);\n    let format = options.format;\n    if (!format) {\n      if (buffer instanceof Float32Array) {\n        format = \"rgba32float\";\n      } else if (buffer instanceof Int32Array) {\n        format = \"rgba32uint\";\n      } else if (buffer instanceof Uint32Array) {\n        format = \"rgba32uint\";\n      } else if (buffer instanceof Int16Array) {\n        format = \"rgba16uint\";\n      } else if (buffer instanceof Uint16Array) {\n        format = \"rgba16uint\";\n      } else if (buffer instanceof Int8Array) {\n        format = \"bgra8unorm\";\n      } else {\n        format = \"bgra8unorm\";\n      }\n    }\n    super({\n      ...options,\n      resource: buffer,\n      format\n    });\n    this.uploadMethodId = \"buffer\";\n  }\n  static test(resource) {\n    return resource instanceof Int8Array || resource instanceof Uint8Array || resource instanceof Uint8ClampedArray || resource instanceof Int16Array || resource instanceof Uint16Array || resource instanceof Int32Array || resource instanceof Uint32Array || resource instanceof Float32Array;\n  }\n}\nBufferImageSource.extension = ExtensionType.TextureSource;\n\nexport { BufferImageSource };\n//# sourceMappingURL=BufferImageSource.mjs.map\n","import { Matrix } from '../../../../maths/matrix/Matrix.mjs';\n\n\"use strict\";\nconst tempMat = new Matrix();\nclass TextureMatrix {\n  /**\n   * @param texture - observed texture\n   * @param clampMargin - Changes frame clamping, 0.5 by default. Use -0.5 for extra border.\n   */\n  constructor(texture, clampMargin) {\n    this.mapCoord = new Matrix();\n    this.uClampFrame = new Float32Array(4);\n    this.uClampOffset = new Float32Array(2);\n    this._textureID = -1;\n    this._updateID = 0;\n    this.clampOffset = 0;\n    if (typeof clampMargin === \"undefined\") {\n      this.clampMargin = texture.width < 10 ? 0 : 0.5;\n    } else {\n      this.clampMargin = clampMargin;\n    }\n    this.isSimple = false;\n    this.texture = texture;\n  }\n  /** Texture property. */\n  get texture() {\n    return this._texture;\n  }\n  set texture(value) {\n    if (this.texture === value)\n      return;\n    this._texture?.removeListener(\"update\", this.update, this);\n    this._texture = value;\n    this._texture.addListener(\"update\", this.update, this);\n    this.update();\n  }\n  /**\n   * Multiplies uvs array to transform\n   * @param uvs - mesh uvs\n   * @param [out=uvs] - output\n   * @returns - output\n   */\n  multiplyUvs(uvs, out) {\n    if (out === void 0) {\n      out = uvs;\n    }\n    const mat = this.mapCoord;\n    for (let i = 0; i < uvs.length; i += 2) {\n      const x = uvs[i];\n      const y = uvs[i + 1];\n      out[i] = x * mat.a + y * mat.c + mat.tx;\n      out[i + 1] = x * mat.b + y * mat.d + mat.ty;\n    }\n    return out;\n  }\n  /**\n   * Updates matrices if texture was changed\n   * @returns - whether or not it was updated\n   */\n  update() {\n    const tex = this._texture;\n    this._updateID++;\n    const uvs = tex.uvs;\n    this.mapCoord.set(uvs.x1 - uvs.x0, uvs.y1 - uvs.y0, uvs.x3 - uvs.x0, uvs.y3 - uvs.y0, uvs.x0, uvs.y0);\n    const orig = tex.orig;\n    const trim = tex.trim;\n    if (trim) {\n      tempMat.set(\n        orig.width / trim.width,\n        0,\n        0,\n        orig.height / trim.height,\n        -trim.x / trim.width,\n        -trim.y / trim.height\n      );\n      this.mapCoord.append(tempMat);\n    }\n    const texBase = tex.source;\n    const frame = this.uClampFrame;\n    const margin = this.clampMargin / texBase._resolution;\n    const offset = this.clampOffset / texBase._resolution;\n    frame[0] = (tex.frame.x + margin + offset) / texBase.width;\n    frame[1] = (tex.frame.y + margin + offset) / texBase.height;\n    frame[2] = (tex.frame.x + tex.frame.width - margin + offset) / texBase.width;\n    frame[3] = (tex.frame.y + tex.frame.height - margin + offset) / texBase.height;\n    this.uClampOffset[0] = this.clampOffset / texBase.pixelWidth;\n    this.uClampOffset[1] = this.clampOffset / texBase.pixelHeight;\n    this.isSimple = tex.frame.width === texBase.width && tex.frame.height === texBase.height && tex.rotate === 0;\n    return true;\n  }\n}\n\nexport { TextureMatrix };\n//# sourceMappingURL=TextureMatrix.mjs.map\n","import EventEmitter from 'eventemitter3';\nimport { groupD8 } from '../../../../maths/matrix/groupD8.mjs';\nimport { Rectangle } from '../../../../maths/shapes/Rectangle.mjs';\nimport { uid } from '../../../../utils/data/uid.mjs';\nimport { deprecation, v8_0_0 } from '../../../../utils/logging/deprecation.mjs';\nimport { NOOP } from '../../../../utils/misc/NOOP.mjs';\nimport { BufferImageSource } from './sources/BufferImageSource.mjs';\nimport { TextureSource } from './sources/TextureSource.mjs';\nimport { TextureMatrix } from './TextureMatrix.mjs';\n\n\"use strict\";\nclass Texture extends EventEmitter {\n  /**\n   * @param {rendering.TextureOptions} options - Options for the texture\n   */\n  constructor({\n    source,\n    label,\n    frame,\n    orig,\n    trim,\n    defaultAnchor,\n    defaultBorders,\n    rotate,\n    dynamic\n  } = {}) {\n    super();\n    /** unique id for this texture */\n    this.uid = uid(\"texture\");\n    /** A uvs object based on the given frame and the texture source */\n    this.uvs = { x0: 0, y0: 0, x1: 0, y1: 0, x2: 0, y2: 0, x3: 0, y3: 0 };\n    /**\n     * This is the area of the BaseTexture image to actually copy to the Canvas / WebGL when rendering,\n     * irrespective of the actual frame size or placement (which can be influenced by trimmed texture atlases)\n     */\n    this.frame = new Rectangle();\n    /**\n     * Does this Texture have any frame data assigned to it?\n     *\n     * This mode is enabled automatically if no frame was passed inside constructor.\n     *\n     * In this mode texture is subscribed to baseTexture events, and fires `update` on any change.\n     *\n     * Beware, after loading or resize of baseTexture event can fired two times!\n     * If you want more control, subscribe on baseTexture itself.\n     * @example\n     * texture.on('update', () => {});\n     */\n    this.noFrame = false;\n    /**\n     * Set to true if you plan on modifying the uvs of this texture.\n     * When this is the case, sprites and other objects using the texture will\n     * make sure to listen for changes to the uvs and update their vertices accordingly.\n     */\n    this.dynamic = false;\n    /** is it a texture? yes! used for type checking */\n    this.isTexture = true;\n    this.label = label;\n    this.source = source?.source ?? new TextureSource();\n    this.noFrame = !frame;\n    if (frame) {\n      this.frame.copyFrom(frame);\n    } else {\n      const { width, height } = this._source;\n      this.frame.width = width;\n      this.frame.height = height;\n    }\n    this.orig = orig || this.frame;\n    this.trim = trim;\n    this.rotate = rotate ?? 0;\n    this.defaultAnchor = defaultAnchor;\n    this.defaultBorders = defaultBorders;\n    this.destroyed = false;\n    this.dynamic = dynamic || false;\n    this.updateUvs();\n  }\n  set source(value) {\n    if (this._source) {\n      this._source.off(\"resize\", this.update, this);\n    }\n    this._source = value;\n    value.on(\"resize\", this.update, this);\n    this.emit(\"update\", this);\n  }\n  /** the underlying source of the texture (equivalent of baseTexture in v7) */\n  get source() {\n    return this._source;\n  }\n  /** returns a TextureMatrix instance for this texture. By default, that object is not created because its heavy. */\n  get textureMatrix() {\n    if (!this._textureMatrix) {\n      this._textureMatrix = new TextureMatrix(this);\n    }\n    return this._textureMatrix;\n  }\n  /** The width of the Texture in pixels. */\n  get width() {\n    return this.orig.width;\n  }\n  /** The height of the Texture in pixels. */\n  get height() {\n    return this.orig.height;\n  }\n  /** Call this function when you have modified the frame of this texture. */\n  updateUvs() {\n    const { uvs, frame } = this;\n    const { width, height } = this._source;\n    const nX = frame.x / width;\n    const nY = frame.y / height;\n    const nW = frame.width / width;\n    const nH = frame.height / height;\n    let rotate = this.rotate;\n    if (rotate) {\n      const w2 = nW / 2;\n      const h2 = nH / 2;\n      const cX = nX + w2;\n      const cY = nY + h2;\n      rotate = groupD8.add(rotate, groupD8.NW);\n      uvs.x0 = cX + w2 * groupD8.uX(rotate);\n      uvs.y0 = cY + h2 * groupD8.uY(rotate);\n      rotate = groupD8.add(rotate, 2);\n      uvs.x1 = cX + w2 * groupD8.uX(rotate);\n      uvs.y1 = cY + h2 * groupD8.uY(rotate);\n      rotate = groupD8.add(rotate, 2);\n      uvs.x2 = cX + w2 * groupD8.uX(rotate);\n      uvs.y2 = cY + h2 * groupD8.uY(rotate);\n      rotate = groupD8.add(rotate, 2);\n      uvs.x3 = cX + w2 * groupD8.uX(rotate);\n      uvs.y3 = cY + h2 * groupD8.uY(rotate);\n    } else {\n      uvs.x0 = nX;\n      uvs.y0 = nY;\n      uvs.x1 = nX + nW;\n      uvs.y1 = nY;\n      uvs.x2 = nX + nW;\n      uvs.y2 = nY + nH;\n      uvs.x3 = nX;\n      uvs.y3 = nY + nH;\n    }\n  }\n  /**\n   * Destroys this texture\n   * @param destroySource - Destroy the source when the texture is destroyed.\n   */\n  destroy(destroySource = false) {\n    if (this._source) {\n      if (destroySource) {\n        this._source.destroy();\n        this._source = null;\n      }\n    }\n    this._textureMatrix = null;\n    this.destroyed = true;\n    this.emit(\"destroy\", this);\n    this.removeAllListeners();\n  }\n  /**\n   * Call this if you have modified the `texture outside` of the constructor.\n   *\n   * If you have modified this texture's source, you must separately call `texture.source.update()` to see those changes.\n   */\n  update() {\n    if (this.noFrame) {\n      this.frame.width = this._source.width;\n      this.frame.height = this._source.height;\n    }\n    this.updateUvs();\n    this.emit(\"update\", this);\n  }\n  /** @deprecated since 8.0.0 */\n  get baseTexture() {\n    deprecation(v8_0_0, \"Texture.baseTexture is now Texture.source\");\n    return this._source;\n  }\n}\nTexture.EMPTY = new Texture({\n  label: \"EMPTY\",\n  source: new TextureSource({\n    label: \"EMPTY\"\n  })\n});\nTexture.EMPTY.destroy = NOOP;\nTexture.WHITE = new Texture({\n  source: new BufferImageSource({\n    resource: new Uint8Array([255, 255, 255, 255]),\n    width: 1,\n    height: 1,\n    alphaMode: \"premultiply-alpha-on-upload\",\n    label: \"WHITE\"\n  }),\n  label: \"WHITE\"\n});\nTexture.WHITE.destroy = NOOP;\n\nexport { Texture };\n//# sourceMappingURL=Texture.mjs.map\n","\"use strict\";\nfunction updateQuadBounds(bounds, anchor, texture) {\n  const { width, height } = texture.orig;\n  const trim = texture.trim;\n  if (trim) {\n    const sourceWidth = trim.width;\n    const sourceHeight = trim.height;\n    bounds.minX = trim.x - anchor._x * width;\n    bounds.maxX = bounds.minX + sourceWidth;\n    bounds.minY = trim.y - anchor._y * height;\n    bounds.maxY = bounds.minY + sourceHeight;\n  } else {\n    bounds.minX = -anchor._x * width;\n    bounds.maxX = bounds.minX + width;\n    bounds.minY = -anchor._y * height;\n    bounds.maxY = bounds.minY + height;\n  }\n}\n\nexport { updateQuadBounds };\n//# sourceMappingURL=updateQuadBounds.mjs.map\n","import { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { Rectangle } from '../../../maths/shapes/Rectangle.mjs';\n\n\"use strict\";\nconst defaultMatrix = new Matrix();\nclass Bounds {\n  constructor(minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity) {\n    /** @default Infinity */\n    this.minX = Infinity;\n    /** @default Infinity */\n    this.minY = Infinity;\n    /** @default -Infinity */\n    this.maxX = -Infinity;\n    /** @default -Infinity */\n    this.maxY = -Infinity;\n    this.matrix = defaultMatrix;\n    this.minX = minX;\n    this.minY = minY;\n    this.maxX = maxX;\n    this.maxY = maxY;\n  }\n  /**\n   * Checks if bounds are empty.\n   * @returns - True if empty.\n   */\n  isEmpty() {\n    return this.minX > this.maxX || this.minY > this.maxY;\n  }\n  /** The bounding rectangle of the bounds. */\n  get rectangle() {\n    if (!this._rectangle) {\n      this._rectangle = new Rectangle();\n    }\n    const rectangle = this._rectangle;\n    if (this.minX > this.maxX || this.minY > this.maxY) {\n      rectangle.x = 0;\n      rectangle.y = 0;\n      rectangle.width = 0;\n      rectangle.height = 0;\n    } else {\n      rectangle.copyFromBounds(this);\n    }\n    return rectangle;\n  }\n  /** Clears the bounds and resets. */\n  clear() {\n    this.minX = Infinity;\n    this.minY = Infinity;\n    this.maxX = -Infinity;\n    this.maxY = -Infinity;\n    this.matrix = defaultMatrix;\n    return this;\n  }\n  /**\n   * Sets the bounds.\n   * @param x0 - left X of frame\n   * @param y0 - top Y of frame\n   * @param x1 - right X of frame\n   * @param y1 - bottom Y of frame\n   */\n  set(x0, y0, x1, y1) {\n    this.minX = x0;\n    this.minY = y0;\n    this.maxX = x1;\n    this.maxY = y1;\n  }\n  /**\n   * Adds sprite frame\n   * @param x0 - left X of frame\n   * @param y0 - top Y of frame\n   * @param x1 - right X of frame\n   * @param y1 - bottom Y of frame\n   * @param matrix\n   */\n  addFrame(x0, y0, x1, y1, matrix) {\n    matrix || (matrix = this.matrix);\n    const a = matrix.a;\n    const b = matrix.b;\n    const c = matrix.c;\n    const d = matrix.d;\n    const tx = matrix.tx;\n    const ty = matrix.ty;\n    let minX = this.minX;\n    let minY = this.minY;\n    let maxX = this.maxX;\n    let maxY = this.maxY;\n    let x = a * x0 + c * y0 + tx;\n    let y = b * x0 + d * y0 + ty;\n    if (x < minX)\n      minX = x;\n    if (y < minY)\n      minY = y;\n    if (x > maxX)\n      maxX = x;\n    if (y > maxY)\n      maxY = y;\n    x = a * x1 + c * y0 + tx;\n    y = b * x1 + d * y0 + ty;\n    if (x < minX)\n      minX = x;\n    if (y < minY)\n      minY = y;\n    if (x > maxX)\n      maxX = x;\n    if (y > maxY)\n      maxY = y;\n    x = a * x0 + c * y1 + tx;\n    y = b * x0 + d * y1 + ty;\n    if (x < minX)\n      minX = x;\n    if (y < minY)\n      minY = y;\n    if (x > maxX)\n      maxX = x;\n    if (y > maxY)\n      maxY = y;\n    x = a * x1 + c * y1 + tx;\n    y = b * x1 + d * y1 + ty;\n    if (x < minX)\n      minX = x;\n    if (y < minY)\n      minY = y;\n    if (x > maxX)\n      maxX = x;\n    if (y > maxY)\n      maxY = y;\n    this.minX = minX;\n    this.minY = minY;\n    this.maxX = maxX;\n    this.maxY = maxY;\n  }\n  /**\n   * Adds a rectangle to the bounds.\n   * @param rect - The rectangle to be added.\n   * @param matrix - The matrix to apply to the bounds.\n   */\n  addRect(rect, matrix) {\n    this.addFrame(rect.x, rect.y, rect.x + rect.width, rect.y + rect.height, matrix);\n  }\n  /**\n   * Adds other {@link Bounds}.\n   * @param bounds - The Bounds to be added\n   * @param matrix\n   */\n  addBounds(bounds, matrix) {\n    this.addFrame(bounds.minX, bounds.minY, bounds.maxX, bounds.maxY, matrix);\n  }\n  /**\n   * Adds other Bounds, masked with Bounds.\n   * @param mask - The Bounds to be added.\n   */\n  addBoundsMask(mask) {\n    this.minX = this.minX > mask.minX ? this.minX : mask.minX;\n    this.minY = this.minY > mask.minY ? this.minY : mask.minY;\n    this.maxX = this.maxX < mask.maxX ? this.maxX : mask.maxX;\n    this.maxY = this.maxY < mask.maxY ? this.maxY : mask.maxY;\n  }\n  /**\n   * Adds other Bounds, multiplied with matrix.\n   * @param matrix - The matrix to apply to the bounds.\n   */\n  applyMatrix(matrix) {\n    const minX = this.minX;\n    const minY = this.minY;\n    const maxX = this.maxX;\n    const maxY = this.maxY;\n    const { a, b, c, d, tx, ty } = matrix;\n    let x = a * minX + c * minY + tx;\n    let y = b * minX + d * minY + ty;\n    this.minX = x;\n    this.minY = y;\n    this.maxX = x;\n    this.maxY = y;\n    x = a * maxX + c * minY + tx;\n    y = b * maxX + d * minY + ty;\n    this.minX = x < this.minX ? x : this.minX;\n    this.minY = y < this.minY ? y : this.minY;\n    this.maxX = x > this.maxX ? x : this.maxX;\n    this.maxY = y > this.maxY ? y : this.maxY;\n    x = a * minX + c * maxY + tx;\n    y = b * minX + d * maxY + ty;\n    this.minX = x < this.minX ? x : this.minX;\n    this.minY = y < this.minY ? y : this.minY;\n    this.maxX = x > this.maxX ? x : this.maxX;\n    this.maxY = y > this.maxY ? y : this.maxY;\n    x = a * maxX + c * maxY + tx;\n    y = b * maxX + d * maxY + ty;\n    this.minX = x < this.minX ? x : this.minX;\n    this.minY = y < this.minY ? y : this.minY;\n    this.maxX = x > this.maxX ? x : this.maxX;\n    this.maxY = y > this.maxY ? y : this.maxY;\n  }\n  /**\n   * Resizes the bounds object to include the given rectangle.\n   * @param rect - The rectangle to be included.\n   */\n  fit(rect) {\n    if (this.minX < rect.left)\n      this.minX = rect.left;\n    if (this.maxX > rect.right)\n      this.maxX = rect.right;\n    if (this.minY < rect.top)\n      this.minY = rect.top;\n    if (this.maxY > rect.bottom)\n      this.maxY = rect.bottom;\n    return this;\n  }\n  /**\n   * Resizes the bounds object to include the given bounds.\n   * @param left - The left value of the bounds.\n   * @param right - The right value of the bounds.\n   * @param top - The top value of the bounds.\n   * @param bottom - The bottom value of the bounds.\n   */\n  fitBounds(left, right, top, bottom) {\n    if (this.minX < left)\n      this.minX = left;\n    if (this.maxX > right)\n      this.maxX = right;\n    if (this.minY < top)\n      this.minY = top;\n    if (this.maxY > bottom)\n      this.maxY = bottom;\n    return this;\n  }\n  /**\n   * Pads bounds object, making it grow in all directions.\n   * If paddingY is omitted, both paddingX and paddingY will be set to paddingX.\n   * @param paddingX - The horizontal padding amount.\n   * @param paddingY - The vertical padding amount.\n   */\n  pad(paddingX, paddingY = paddingX) {\n    this.minX -= paddingX;\n    this.maxX += paddingX;\n    this.minY -= paddingY;\n    this.maxY += paddingY;\n    return this;\n  }\n  /** Ceils the bounds. */\n  ceil() {\n    this.minX = Math.floor(this.minX);\n    this.minY = Math.floor(this.minY);\n    this.maxX = Math.ceil(this.maxX);\n    this.maxY = Math.ceil(this.maxY);\n    return this;\n  }\n  /** Clones the bounds. */\n  clone() {\n    return new Bounds(this.minX, this.minY, this.maxX, this.maxY);\n  }\n  /**\n   * Scales the bounds by the given values\n   * @param x - The X value to scale by.\n   * @param y - The Y value to scale by.\n   */\n  scale(x, y = x) {\n    this.minX *= x;\n    this.minY *= y;\n    this.maxX *= x;\n    this.maxY *= y;\n    return this;\n  }\n  /** the x value of the bounds. */\n  get x() {\n    return this.minX;\n  }\n  set x(value) {\n    const width = this.maxX - this.minX;\n    this.minX = value;\n    this.maxX = value + width;\n  }\n  /** the y value of the bounds. */\n  get y() {\n    return this.minY;\n  }\n  set y(value) {\n    const height = this.maxY - this.minY;\n    this.minY = value;\n    this.maxY = value + height;\n  }\n  /** the width value of the bounds. */\n  get width() {\n    return this.maxX - this.minX;\n  }\n  set width(value) {\n    this.maxX = this.minX + value;\n  }\n  /** the height value of the bounds. */\n  get height() {\n    return this.maxY - this.minY;\n  }\n  set height(value) {\n    this.maxY = this.minY + value;\n  }\n  /** the left value of the bounds. */\n  get left() {\n    return this.minX;\n  }\n  /** the right value of the bounds. */\n  get right() {\n    return this.maxX;\n  }\n  /** the top value of the bounds. */\n  get top() {\n    return this.minY;\n  }\n  /** the bottom value of the bounds. */\n  get bottom() {\n    return this.maxY;\n  }\n  /** Is the bounds positive. */\n  get isPositive() {\n    return this.maxX - this.minX > 0 && this.maxY - this.minY > 0;\n  }\n  get isValid() {\n    return this.minX + this.minY !== Infinity;\n  }\n  /**\n   * Adds screen vertices from array\n   * @param vertexData - calculated vertices\n   * @param beginOffset - begin offset\n   * @param endOffset - end offset, excluded\n   * @param matrix\n   */\n  addVertexData(vertexData, beginOffset, endOffset, matrix) {\n    let minX = this.minX;\n    let minY = this.minY;\n    let maxX = this.maxX;\n    let maxY = this.maxY;\n    matrix || (matrix = this.matrix);\n    const a = matrix.a;\n    const b = matrix.b;\n    const c = matrix.c;\n    const d = matrix.d;\n    const tx = matrix.tx;\n    const ty = matrix.ty;\n    for (let i = beginOffset; i < endOffset; i += 2) {\n      const localX = vertexData[i];\n      const localY = vertexData[i + 1];\n      const x = a * localX + c * localY + tx;\n      const y = b * localX + d * localY + ty;\n      minX = x < minX ? x : minX;\n      minY = y < minY ? y : minY;\n      maxX = x > maxX ? x : maxX;\n      maxY = y > maxY ? y : maxY;\n    }\n    this.minX = minX;\n    this.minY = minY;\n    this.maxX = maxX;\n    this.maxY = maxY;\n  }\n  /**\n   * Checks if the point is contained within the bounds.\n   * @param x - x coordinate\n   * @param y - y coordinate\n   */\n  containsPoint(x, y) {\n    if (this.minX <= x && this.minY <= y && this.maxX >= x && this.maxY >= y) {\n      return true;\n    }\n    return false;\n  }\n  toString() {\n    return `[pixi.js:Bounds minX=${this.minX} minY=${this.minY} maxX=${this.maxX} maxY=${this.maxY} width=${this.width} height=${this.height}]`;\n  }\n  /**\n   * Copies the bounds from another bounds object.\n   * @param bounds - The bounds to copy from.\n   * @returns - This bounds object.\n   */\n  copyFrom(bounds) {\n    this.minX = bounds.minX;\n    this.minY = bounds.minY;\n    this.maxX = bounds.maxX;\n    this.maxY = bounds.maxY;\n    return this;\n  }\n}\n\nexport { Bounds };\n//# sourceMappingURL=Bounds.mjs.map\n","var r={grad:.9,turn:360,rad:360/(2*Math.PI)},t=function(r){return\"string\"==typeof r?r.length>0:\"number\"==typeof r},n=function(r,t,n){return void 0===t&&(t=0),void 0===n&&(n=Math.pow(10,t)),Math.round(n*r)/n+0},e=function(r,t,n){return void 0===t&&(t=0),void 0===n&&(n=1),r>n?n:r>t?r:t},u=function(r){return(r=isFinite(r)?r%360:0)>0?r:r+360},a=function(r){return{r:e(r.r,0,255),g:e(r.g,0,255),b:e(r.b,0,255),a:e(r.a)}},o=function(r){return{r:n(r.r),g:n(r.g),b:n(r.b),a:n(r.a,3)}},i=/^#([0-9a-f]{3,8})$/i,s=function(r){var t=r.toString(16);return t.length<2?\"0\"+t:t},h=function(r){var t=r.r,n=r.g,e=r.b,u=r.a,a=Math.max(t,n,e),o=a-Math.min(t,n,e),i=o?a===t?(n-e)/o:a===n?2+(e-t)/o:4+(t-n)/o:0;return{h:60*(i<0?i+6:i),s:a?o/a*100:0,v:a/255*100,a:u}},b=function(r){var t=r.h,n=r.s,e=r.v,u=r.a;t=t/360*6,n/=100,e/=100;var a=Math.floor(t),o=e*(1-n),i=e*(1-(t-a)*n),s=e*(1-(1-t+a)*n),h=a%6;return{r:255*[e,i,o,o,s,e][h],g:255*[s,e,e,i,o,o][h],b:255*[o,o,s,e,e,i][h],a:u}},g=function(r){return{h:u(r.h),s:e(r.s,0,100),l:e(r.l,0,100),a:e(r.a)}},d=function(r){return{h:n(r.h),s:n(r.s),l:n(r.l),a:n(r.a,3)}},f=function(r){return b((n=(t=r).s,{h:t.h,s:(n*=((e=t.l)<50?e:100-e)/100)>0?2*n/(e+n)*100:0,v:e+n,a:t.a}));var t,n,e},c=function(r){return{h:(t=h(r)).h,s:(u=(200-(n=t.s))*(e=t.v)/100)>0&&u<200?n*e/100/(u<=100?u:200-u)*100:0,l:u/2,a:t.a};var t,n,e,u},l=/^hsla?\\(\\s*([+-]?\\d*\\.?\\d+)(deg|rad|grad|turn)?\\s*,\\s*([+-]?\\d*\\.?\\d+)%\\s*,\\s*([+-]?\\d*\\.?\\d+)%\\s*(?:,\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i,p=/^hsla?\\(\\s*([+-]?\\d*\\.?\\d+)(deg|rad|grad|turn)?\\s+([+-]?\\d*\\.?\\d+)%\\s+([+-]?\\d*\\.?\\d+)%\\s*(?:\\/\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i,v=/^rgba?\\(\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*,\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*,\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*(?:,\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i,m=/^rgba?\\(\\s*([+-]?\\d*\\.?\\d+)(%)?\\s+([+-]?\\d*\\.?\\d+)(%)?\\s+([+-]?\\d*\\.?\\d+)(%)?\\s*(?:\\/\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i,y={string:[[function(r){var t=i.exec(r);return t?(r=t[1]).length<=4?{r:parseInt(r[0]+r[0],16),g:parseInt(r[1]+r[1],16),b:parseInt(r[2]+r[2],16),a:4===r.length?n(parseInt(r[3]+r[3],16)/255,2):1}:6===r.length||8===r.length?{r:parseInt(r.substr(0,2),16),g:parseInt(r.substr(2,2),16),b:parseInt(r.substr(4,2),16),a:8===r.length?n(parseInt(r.substr(6,2),16)/255,2):1}:null:null},\"hex\"],[function(r){var t=v.exec(r)||m.exec(r);return t?t[2]!==t[4]||t[4]!==t[6]?null:a({r:Number(t[1])/(t[2]?100/255:1),g:Number(t[3])/(t[4]?100/255:1),b:Number(t[5])/(t[6]?100/255:1),a:void 0===t[7]?1:Number(t[7])/(t[8]?100:1)}):null},\"rgb\"],[function(t){var n=l.exec(t)||p.exec(t);if(!n)return null;var e,u,a=g({h:(e=n[1],u=n[2],void 0===u&&(u=\"deg\"),Number(e)*(r[u]||1)),s:Number(n[3]),l:Number(n[4]),a:void 0===n[5]?1:Number(n[5])/(n[6]?100:1)});return f(a)},\"hsl\"]],object:[[function(r){var n=r.r,e=r.g,u=r.b,o=r.a,i=void 0===o?1:o;return t(n)&&t(e)&&t(u)?a({r:Number(n),g:Number(e),b:Number(u),a:Number(i)}):null},\"rgb\"],[function(r){var n=r.h,e=r.s,u=r.l,a=r.a,o=void 0===a?1:a;if(!t(n)||!t(e)||!t(u))return null;var i=g({h:Number(n),s:Number(e),l:Number(u),a:Number(o)});return f(i)},\"hsl\"],[function(r){var n=r.h,a=r.s,o=r.v,i=r.a,s=void 0===i?1:i;if(!t(n)||!t(a)||!t(o))return null;var h=function(r){return{h:u(r.h),s:e(r.s,0,100),v:e(r.v,0,100),a:e(r.a)}}({h:Number(n),s:Number(a),v:Number(o),a:Number(s)});return b(h)},\"hsv\"]]},N=function(r,t){for(var n=0;n<t.length;n++){var e=t[n][0](r);if(e)return[e,t[n][1]]}return[null,void 0]},x=function(r){return\"string\"==typeof r?N(r.trim(),y.string):\"object\"==typeof r&&null!==r?N(r,y.object):[null,void 0]},I=function(r){return x(r)[1]},M=function(r,t){var n=c(r);return{h:n.h,s:e(n.s+100*t,0,100),l:n.l,a:n.a}},H=function(r){return(299*r.r+587*r.g+114*r.b)/1e3/255},$=function(r,t){var n=c(r);return{h:n.h,s:n.s,l:e(n.l+100*t,0,100),a:n.a}},j=function(){function r(r){this.parsed=x(r)[0],this.rgba=this.parsed||{r:0,g:0,b:0,a:1}}return r.prototype.isValid=function(){return null!==this.parsed},r.prototype.brightness=function(){return n(H(this.rgba),2)},r.prototype.isDark=function(){return H(this.rgba)<.5},r.prototype.isLight=function(){return H(this.rgba)>=.5},r.prototype.toHex=function(){return r=o(this.rgba),t=r.r,e=r.g,u=r.b,i=(a=r.a)<1?s(n(255*a)):\"\",\"#\"+s(t)+s(e)+s(u)+i;var r,t,e,u,a,i},r.prototype.toRgb=function(){return o(this.rgba)},r.prototype.toRgbString=function(){return r=o(this.rgba),t=r.r,n=r.g,e=r.b,(u=r.a)<1?\"rgba(\"+t+\", \"+n+\", \"+e+\", \"+u+\")\":\"rgb(\"+t+\", \"+n+\", \"+e+\")\";var r,t,n,e,u},r.prototype.toHsl=function(){return d(c(this.rgba))},r.prototype.toHslString=function(){return r=d(c(this.rgba)),t=r.h,n=r.s,e=r.l,(u=r.a)<1?\"hsla(\"+t+\", \"+n+\"%, \"+e+\"%, \"+u+\")\":\"hsl(\"+t+\", \"+n+\"%, \"+e+\"%)\";var r,t,n,e,u},r.prototype.toHsv=function(){return r=h(this.rgba),{h:n(r.h),s:n(r.s),v:n(r.v),a:n(r.a,3)};var r},r.prototype.invert=function(){return w({r:255-(r=this.rgba).r,g:255-r.g,b:255-r.b,a:r.a});var r},r.prototype.saturate=function(r){return void 0===r&&(r=.1),w(M(this.rgba,r))},r.prototype.desaturate=function(r){return void 0===r&&(r=.1),w(M(this.rgba,-r))},r.prototype.grayscale=function(){return w(M(this.rgba,-1))},r.prototype.lighten=function(r){return void 0===r&&(r=.1),w($(this.rgba,r))},r.prototype.darken=function(r){return void 0===r&&(r=.1),w($(this.rgba,-r))},r.prototype.rotate=function(r){return void 0===r&&(r=15),this.hue(this.hue()+r)},r.prototype.alpha=function(r){return\"number\"==typeof r?w({r:(t=this.rgba).r,g:t.g,b:t.b,a:r}):n(this.rgba.a,3);var t},r.prototype.hue=function(r){var t=c(this.rgba);return\"number\"==typeof r?w({h:r,s:t.s,l:t.l,a:t.a}):n(t.h)},r.prototype.isEqual=function(r){return this.toHex()===w(r).toHex()},r}(),w=function(r){return r instanceof j?r:new j(r)},S=[],k=function(r){r.forEach(function(r){S.indexOf(r)<0&&(r(j,y),S.push(r))})},E=function(){return new j({r:255*Math.random(),g:255*Math.random(),b:255*Math.random()})};export{j as Colord,w as colord,k as extend,I as getFormat,E as random};\n","export default function(e,f){var a={white:\"#ffffff\",bisque:\"#ffe4c4\",blue:\"#0000ff\",cadetblue:\"#5f9ea0\",chartreuse:\"#7fff00\",chocolate:\"#d2691e\",coral:\"#ff7f50\",antiquewhite:\"#faebd7\",aqua:\"#00ffff\",azure:\"#f0ffff\",whitesmoke:\"#f5f5f5\",papayawhip:\"#ffefd5\",plum:\"#dda0dd\",blanchedalmond:\"#ffebcd\",black:\"#000000\",gold:\"#ffd700\",goldenrod:\"#daa520\",gainsboro:\"#dcdcdc\",cornsilk:\"#fff8dc\",cornflowerblue:\"#6495ed\",burlywood:\"#deb887\",aquamarine:\"#7fffd4\",beige:\"#f5f5dc\",crimson:\"#dc143c\",cyan:\"#00ffff\",darkblue:\"#00008b\",darkcyan:\"#008b8b\",darkgoldenrod:\"#b8860b\",darkkhaki:\"#bdb76b\",darkgray:\"#a9a9a9\",darkgreen:\"#006400\",darkgrey:\"#a9a9a9\",peachpuff:\"#ffdab9\",darkmagenta:\"#8b008b\",darkred:\"#8b0000\",darkorchid:\"#9932cc\",darkorange:\"#ff8c00\",darkslateblue:\"#483d8b\",gray:\"#808080\",darkslategray:\"#2f4f4f\",darkslategrey:\"#2f4f4f\",deeppink:\"#ff1493\",deepskyblue:\"#00bfff\",wheat:\"#f5deb3\",firebrick:\"#b22222\",floralwhite:\"#fffaf0\",ghostwhite:\"#f8f8ff\",darkviolet:\"#9400d3\",magenta:\"#ff00ff\",green:\"#008000\",dodgerblue:\"#1e90ff\",grey:\"#808080\",honeydew:\"#f0fff0\",hotpink:\"#ff69b4\",blueviolet:\"#8a2be2\",forestgreen:\"#228b22\",lawngreen:\"#7cfc00\",indianred:\"#cd5c5c\",indigo:\"#4b0082\",fuchsia:\"#ff00ff\",brown:\"#a52a2a\",maroon:\"#800000\",mediumblue:\"#0000cd\",lightcoral:\"#f08080\",darkturquoise:\"#00ced1\",lightcyan:\"#e0ffff\",ivory:\"#fffff0\",lightyellow:\"#ffffe0\",lightsalmon:\"#ffa07a\",lightseagreen:\"#20b2aa\",linen:\"#faf0e6\",mediumaquamarine:\"#66cdaa\",lemonchiffon:\"#fffacd\",lime:\"#00ff00\",khaki:\"#f0e68c\",mediumseagreen:\"#3cb371\",limegreen:\"#32cd32\",mediumspringgreen:\"#00fa9a\",lightskyblue:\"#87cefa\",lightblue:\"#add8e6\",midnightblue:\"#191970\",lightpink:\"#ffb6c1\",mistyrose:\"#ffe4e1\",moccasin:\"#ffe4b5\",mintcream:\"#f5fffa\",lightslategray:\"#778899\",lightslategrey:\"#778899\",navajowhite:\"#ffdead\",navy:\"#000080\",mediumvioletred:\"#c71585\",powderblue:\"#b0e0e6\",palegoldenrod:\"#eee8aa\",oldlace:\"#fdf5e6\",paleturquoise:\"#afeeee\",mediumturquoise:\"#48d1cc\",mediumorchid:\"#ba55d3\",rebeccapurple:\"#663399\",lightsteelblue:\"#b0c4de\",mediumslateblue:\"#7b68ee\",thistle:\"#d8bfd8\",tan:\"#d2b48c\",orchid:\"#da70d6\",mediumpurple:\"#9370db\",purple:\"#800080\",pink:\"#ffc0cb\",skyblue:\"#87ceeb\",springgreen:\"#00ff7f\",palegreen:\"#98fb98\",red:\"#ff0000\",yellow:\"#ffff00\",slateblue:\"#6a5acd\",lavenderblush:\"#fff0f5\",peru:\"#cd853f\",palevioletred:\"#db7093\",violet:\"#ee82ee\",teal:\"#008080\",slategray:\"#708090\",slategrey:\"#708090\",aliceblue:\"#f0f8ff\",darkseagreen:\"#8fbc8f\",darkolivegreen:\"#556b2f\",greenyellow:\"#adff2f\",seagreen:\"#2e8b57\",seashell:\"#fff5ee\",tomato:\"#ff6347\",silver:\"#c0c0c0\",sienna:\"#a0522d\",lavender:\"#e6e6fa\",lightgreen:\"#90ee90\",orange:\"#ffa500\",orangered:\"#ff4500\",steelblue:\"#4682b4\",royalblue:\"#4169e1\",turquoise:\"#40e0d0\",yellowgreen:\"#9acd32\",salmon:\"#fa8072\",saddlebrown:\"#8b4513\",sandybrown:\"#f4a460\",rosybrown:\"#bc8f8f\",darksalmon:\"#e9967a\",lightgoldenrodyellow:\"#fafad2\",snow:\"#fffafa\",lightgrey:\"#d3d3d3\",lightgray:\"#d3d3d3\",dimgray:\"#696969\",dimgrey:\"#696969\",olivedrab:\"#6b8e23\",olive:\"#808000\"},r={};for(var d in a)r[a[d]]=d;var l={};e.prototype.toName=function(f){if(!(this.rgba.a||this.rgba.r||this.rgba.g||this.rgba.b))return\"transparent\";var d,i,n=r[this.toHex()];if(n)return n;if(null==f?void 0:f.closest){var o=this.toRgb(),t=1/0,b=\"black\";if(!l.length)for(var c in a)l[c]=new e(a[c]).toRgb();for(var g in a){var u=(d=o,i=l[g],Math.pow(d.r-i.r,2)+Math.pow(d.g-i.g,2)+Math.pow(d.b-i.b,2));u<t&&(t=u,b=g)}return b}};f.string.push([function(f){var r=f.toLowerCase(),d=\"transparent\"===r?\"#0000\":a[r];return d?new e(d).toRgb():null},\"name\"])}\n","import { extend, colord } from '@pixi/colord';\nimport namesPlugin from '@pixi/colord/plugins/names';\n\n\"use strict\";\nextend([namesPlugin]);\nconst _Color = class _Color {\n  /**\n   * @param {ColorSource} value - Optional value to use, if not provided, white is used.\n   */\n  constructor(value = 16777215) {\n    this._value = null;\n    this._components = new Float32Array(4);\n    this._components.fill(1);\n    this._int = 16777215;\n    this.value = value;\n  }\n  /** Get red component (0 - 1) */\n  get red() {\n    return this._components[0];\n  }\n  /** Get green component (0 - 1) */\n  get green() {\n    return this._components[1];\n  }\n  /** Get blue component (0 - 1) */\n  get blue() {\n    return this._components[2];\n  }\n  /** Get alpha component (0 - 1) */\n  get alpha() {\n    return this._components[3];\n  }\n  /**\n   * Set the value, suitable for chaining\n   * @param value\n   * @see Color.value\n   */\n  setValue(value) {\n    this.value = value;\n    return this;\n  }\n  /**\n   * The current color source.\n   *\n   * When setting:\n   * - Setting to an instance of `Color` will copy its color source and components.\n   * - Otherwise, `Color` will try to normalize the color source and set the components.\n   *   If the color source is invalid, an `Error` will be thrown and the `Color` will left unchanged.\n   *\n   * Note: The `null` in the setter's parameter type is added to match the TypeScript rule: return type of getter\n   * must be assignable to its setter's parameter type. Setting `value` to `null` will throw an `Error`.\n   *\n   * When getting:\n   * - A return value of `null` means the previous value was overridden (e.g., {@link Color.multiply multiply},\n   *   {@link Color.premultiply premultiply} or {@link Color.round round}).\n   * - Otherwise, the color source used when setting is returned.\n   */\n  set value(value) {\n    if (value instanceof _Color) {\n      this._value = this._cloneSource(value._value);\n      this._int = value._int;\n      this._components.set(value._components);\n    } else if (value === null) {\n      throw new Error(\"Cannot set Color#value to null\");\n    } else if (this._value === null || !this._isSourceEqual(this._value, value)) {\n      this._value = this._cloneSource(value);\n      this._normalize(this._value);\n    }\n  }\n  get value() {\n    return this._value;\n  }\n  /**\n   * Copy a color source internally.\n   * @param value - Color source\n   */\n  _cloneSource(value) {\n    if (typeof value === \"string\" || typeof value === \"number\" || value instanceof Number || value === null) {\n      return value;\n    } else if (Array.isArray(value) || ArrayBuffer.isView(value)) {\n      return value.slice(0);\n    } else if (typeof value === \"object\" && value !== null) {\n      return { ...value };\n    }\n    return value;\n  }\n  /**\n   * Equality check for color sources.\n   * @param value1 - First color source\n   * @param value2 - Second color source\n   * @returns `true` if the color sources are equal, `false` otherwise.\n   */\n  _isSourceEqual(value1, value2) {\n    const type1 = typeof value1;\n    const type2 = typeof value2;\n    if (type1 !== type2) {\n      return false;\n    } else if (type1 === \"number\" || type1 === \"string\" || value1 instanceof Number) {\n      return value1 === value2;\n    } else if (Array.isArray(value1) && Array.isArray(value2) || ArrayBuffer.isView(value1) && ArrayBuffer.isView(value2)) {\n      if (value1.length !== value2.length) {\n        return false;\n      }\n      return value1.every((v, i) => v === value2[i]);\n    } else if (value1 !== null && value2 !== null) {\n      const keys1 = Object.keys(value1);\n      const keys2 = Object.keys(value2);\n      if (keys1.length !== keys2.length) {\n        return false;\n      }\n      return keys1.every((key) => value1[key] === value2[key]);\n    }\n    return value1 === value2;\n  }\n  /**\n   * Convert to a RGBA color object.\n   * @example\n   * import { Color } from 'pixi.js';\n   * new Color('white').toRgb(); // returns { r: 1, g: 1, b: 1, a: 1 }\n   */\n  toRgba() {\n    const [r, g, b, a] = this._components;\n    return { r, g, b, a };\n  }\n  /**\n   * Convert to a RGB color object.\n   * @example\n   * import { Color } from 'pixi.js';\n   * new Color('white').toRgb(); // returns { r: 1, g: 1, b: 1 }\n   */\n  toRgb() {\n    const [r, g, b] = this._components;\n    return { r, g, b };\n  }\n  /** Convert to a CSS-style rgba string: `rgba(255,255,255,1.0)`. */\n  toRgbaString() {\n    const [r, g, b] = this.toUint8RgbArray();\n    return `rgba(${r},${g},${b},${this.alpha})`;\n  }\n  toUint8RgbArray(out) {\n    const [r, g, b] = this._components;\n    if (!this._arrayRgb) {\n      this._arrayRgb = [];\n    }\n    out || (out = this._arrayRgb);\n    out[0] = Math.round(r * 255);\n    out[1] = Math.round(g * 255);\n    out[2] = Math.round(b * 255);\n    return out;\n  }\n  toArray(out) {\n    if (!this._arrayRgba) {\n      this._arrayRgba = [];\n    }\n    out || (out = this._arrayRgba);\n    const [r, g, b, a] = this._components;\n    out[0] = r;\n    out[1] = g;\n    out[2] = b;\n    out[3] = a;\n    return out;\n  }\n  toRgbArray(out) {\n    if (!this._arrayRgb) {\n      this._arrayRgb = [];\n    }\n    out || (out = this._arrayRgb);\n    const [r, g, b] = this._components;\n    out[0] = r;\n    out[1] = g;\n    out[2] = b;\n    return out;\n  }\n  /**\n   * Convert to a hexadecimal number.\n   * @example\n   * import { Color } from 'pixi.js';\n   * new Color('white').toNumber(); // returns 16777215\n   */\n  toNumber() {\n    return this._int;\n  }\n  /**\n   * Convert to a BGR number\n   * @example\n   * import { Color } from 'pixi.js';\n   * new Color(0xffcc99).toBgrNumber(); // returns 0x99ccff\n   */\n  toBgrNumber() {\n    const [r, g, b] = this.toUint8RgbArray();\n    return (b << 16) + (g << 8) + r;\n  }\n  /**\n   * Convert to a hexadecimal number in little endian format (e.g., BBGGRR).\n   * @example\n   * import { Color } from 'pixi.js';\n   * new Color(0xffcc99).toLittleEndianNumber(); // returns 0x99ccff\n   * @returns {number} - The color as a number in little endian format.\n   */\n  toLittleEndianNumber() {\n    const value = this._int;\n    return (value >> 16) + (value & 65280) + ((value & 255) << 16);\n  }\n  /**\n   * Multiply with another color. This action is destructive, and will\n   * override the previous `value` property to be `null`.\n   * @param {ColorSource} value - The color to multiply by.\n   */\n  multiply(value) {\n    const [r, g, b, a] = _Color._temp.setValue(value)._components;\n    this._components[0] *= r;\n    this._components[1] *= g;\n    this._components[2] *= b;\n    this._components[3] *= a;\n    this._refreshInt();\n    this._value = null;\n    return this;\n  }\n  /**\n   * Converts color to a premultiplied alpha format. This action is destructive, and will\n   * override the previous `value` property to be `null`.\n   * @param alpha - The alpha to multiply by.\n   * @param {boolean} [applyToRGB=true] - Whether to premultiply RGB channels.\n   * @returns {Color} - Itself.\n   */\n  premultiply(alpha, applyToRGB = true) {\n    if (applyToRGB) {\n      this._components[0] *= alpha;\n      this._components[1] *= alpha;\n      this._components[2] *= alpha;\n    }\n    this._components[3] = alpha;\n    this._refreshInt();\n    this._value = null;\n    return this;\n  }\n  /**\n   * Premultiplies alpha with current color.\n   * @param {number} alpha - The alpha to multiply by.\n   * @param {boolean} [applyToRGB=true] - Whether to premultiply RGB channels.\n   * @returns {number} tint multiplied by alpha\n   */\n  toPremultiplied(alpha, applyToRGB = true) {\n    if (alpha === 1) {\n      return (255 << 24) + this._int;\n    }\n    if (alpha === 0) {\n      return applyToRGB ? 0 : this._int;\n    }\n    let r = this._int >> 16 & 255;\n    let g = this._int >> 8 & 255;\n    let b = this._int & 255;\n    if (applyToRGB) {\n      r = r * alpha + 0.5 | 0;\n      g = g * alpha + 0.5 | 0;\n      b = b * alpha + 0.5 | 0;\n    }\n    return (alpha * 255 << 24) + (r << 16) + (g << 8) + b;\n  }\n  /**\n   * Convert to a hexadecimal string.\n   * @example\n   * import { Color } from 'pixi.js';\n   * new Color('white').toHex(); // returns \"#ffffff\"\n   */\n  toHex() {\n    const hexString = this._int.toString(16);\n    return `#${\"000000\".substring(0, 6 - hexString.length) + hexString}`;\n  }\n  /**\n   * Convert to a hexadecimal string with alpha.\n   * @example\n   * import { Color } from 'pixi.js';\n   * new Color('white').toHexa(); // returns \"#ffffffff\"\n   */\n  toHexa() {\n    const alphaValue = Math.round(this._components[3] * 255);\n    const alphaString = alphaValue.toString(16);\n    return this.toHex() + \"00\".substring(0, 2 - alphaString.length) + alphaString;\n  }\n  /**\n   * Set alpha, suitable for chaining.\n   * @param alpha\n   */\n  setAlpha(alpha) {\n    this._components[3] = this._clamp(alpha);\n    return this;\n  }\n  /**\n   * Normalize the input value into rgba\n   * @param value - Input value\n   */\n  _normalize(value) {\n    let r;\n    let g;\n    let b;\n    let a;\n    if ((typeof value === \"number\" || value instanceof Number) && value >= 0 && value <= 16777215) {\n      const int = value;\n      r = (int >> 16 & 255) / 255;\n      g = (int >> 8 & 255) / 255;\n      b = (int & 255) / 255;\n      a = 1;\n    } else if ((Array.isArray(value) || value instanceof Float32Array) && value.length >= 3 && value.length <= 4) {\n      value = this._clamp(value);\n      [r, g, b, a = 1] = value;\n    } else if ((value instanceof Uint8Array || value instanceof Uint8ClampedArray) && value.length >= 3 && value.length <= 4) {\n      value = this._clamp(value, 0, 255);\n      [r, g, b, a = 255] = value;\n      r /= 255;\n      g /= 255;\n      b /= 255;\n      a /= 255;\n    } else if (typeof value === \"string\" || typeof value === \"object\") {\n      if (typeof value === \"string\") {\n        const match = _Color.HEX_PATTERN.exec(value);\n        if (match) {\n          value = `#${match[2]}`;\n        }\n      }\n      const color = colord(value);\n      if (color.isValid()) {\n        ({ r, g, b, a } = color.rgba);\n        r /= 255;\n        g /= 255;\n        b /= 255;\n      }\n    }\n    if (r !== void 0) {\n      this._components[0] = r;\n      this._components[1] = g;\n      this._components[2] = b;\n      this._components[3] = a;\n      this._refreshInt();\n    } else {\n      throw new Error(`Unable to convert color ${value}`);\n    }\n  }\n  /** Refresh the internal color rgb number */\n  _refreshInt() {\n    this._clamp(this._components);\n    const [r, g, b] = this._components;\n    this._int = (r * 255 << 16) + (g * 255 << 8) + (b * 255 | 0);\n  }\n  /**\n   * Clamps values to a range. Will override original values\n   * @param value - Value(s) to clamp\n   * @param min - Minimum value\n   * @param max - Maximum value\n   */\n  _clamp(value, min = 0, max = 1) {\n    if (typeof value === \"number\") {\n      return Math.min(Math.max(value, min), max);\n    }\n    value.forEach((v, i) => {\n      value[i] = Math.min(Math.max(v, min), max);\n    });\n    return value;\n  }\n  /**\n   * Check if the value is a color-like object\n   * @param value - Value to check\n   * @returns True if the value is a color-like object\n   * @static\n   * @example\n   * import { Color } from 'pixi.js';\n   * Color.isColorLike('white'); // returns true\n   * Color.isColorLike(0xffffff); // returns true\n   * Color.isColorLike([1, 1, 1]); // returns true\n   */\n  static isColorLike(value) {\n    return typeof value === \"number\" || typeof value === \"string\" || value instanceof Number || value instanceof _Color || Array.isArray(value) || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Float32Array || value.r !== void 0 && value.g !== void 0 && value.b !== void 0 || value.r !== void 0 && value.g !== void 0 && value.b !== void 0 && value.a !== void 0 || value.h !== void 0 && value.s !== void 0 && value.l !== void 0 || value.h !== void 0 && value.s !== void 0 && value.l !== void 0 && value.a !== void 0 || value.h !== void 0 && value.s !== void 0 && value.v !== void 0 || value.h !== void 0 && value.s !== void 0 && value.v !== void 0 && value.a !== void 0;\n  }\n};\n/**\n * Default Color object for static uses\n * @example\n * import { Color } from 'pixi.js';\n * Color.shared.setValue(0xffffff).toHex(); // '#ffffff'\n */\n_Color.shared = new _Color();\n/**\n * Temporary Color object for static uses internally.\n * As to not conflict with Color.shared.\n * @ignore\n */\n_Color._temp = new _Color();\n/** Pattern for hex strings */\n// eslint-disable-next-line @typescript-eslint/naming-convention\n_Color.HEX_PATTERN = /^(#|0x)?(([a-f0-9]{3}){1,2}([a-f0-9]{2})?)$/i;\nlet Color = _Color;\n\nexport { Color };\n//# sourceMappingURL=Color.mjs.map\n","\"use strict\";\nconst cullingMixin = {\n  cullArea: null,\n  cullable: false,\n  cullableChildren: true\n};\n\nexport { cullingMixin };\n//# sourceMappingURL=cullingMixin.mjs.map\n","\"use strict\";\nclass Pool {\n  /**\n   * Constructs a new Pool.\n   * @param ClassType - The constructor of the items in the pool.\n   * @param {number} [initialSize] - The initial size of the pool.\n   */\n  constructor(ClassType, initialSize) {\n    this._pool = [];\n    this._count = 0;\n    this._index = 0;\n    this._classType = ClassType;\n    if (initialSize) {\n      this.prepopulate(initialSize);\n    }\n  }\n  /**\n   * Prepopulates the pool with a given number of items.\n   * @param total - The number of items to add to the pool.\n   */\n  prepopulate(total) {\n    for (let i = 0; i < total; i++) {\n      this._pool[this._index++] = new this._classType();\n    }\n    this._count += total;\n  }\n  /**\n   * Gets an item from the pool. Calls the item's `init` method if it exists.\n   * If there are no items left in the pool, a new one will be created.\n   * @param {unknown} [data] - Optional data to pass to the item's constructor.\n   * @returns {T} The item from the pool.\n   */\n  get(data) {\n    let item;\n    if (this._index > 0) {\n      item = this._pool[--this._index];\n    } else {\n      item = new this._classType();\n    }\n    item.init?.(data);\n    return item;\n  }\n  /**\n   * Returns an item to the pool. Calls the item's `reset` method if it exists.\n   * @param {T} item - The item to return to the pool.\n   */\n  return(item) {\n    item.reset?.();\n    this._pool[this._index++] = item;\n  }\n  /**\n   * Gets the number of items in the pool.\n   * @readonly\n   * @member {number}\n   */\n  get totalSize() {\n    return this._count;\n  }\n  /**\n   * Gets the number of items in the pool that are free to use without needing to create more.\n   * @readonly\n   * @member {number}\n   */\n  get totalFree() {\n    return this._index;\n  }\n  /**\n   * Gets the number of items in the pool that are currently in use.\n   * @readonly\n   * @member {number}\n   */\n  get totalUsed() {\n    return this._count - this._index;\n  }\n  /** clears the pool - mainly used for debugging! */\n  clear() {\n    this._pool.length = 0;\n    this._index = 0;\n  }\n}\n\nexport { Pool };\n//# sourceMappingURL=Pool.mjs.map\n","import { Pool } from './Pool.mjs';\n\n\"use strict\";\nclass PoolGroupClass {\n  constructor() {\n    /**\n     * A map to store the pools by their class type.\n     * @private\n     */\n    this._poolsByClass = /* @__PURE__ */ new Map();\n  }\n  /**\n   * Prepopulates a specific pool with a given number of items.\n   * @template T The type of items in the pool. Must extend PoolItem.\n   * @param {PoolItemConstructor<T>} Class - The constructor of the items in the pool.\n   * @param {number} total - The number of items to add to the pool.\n   */\n  prepopulate(Class, total) {\n    const classPool = this.getPool(Class);\n    classPool.prepopulate(total);\n  }\n  /**\n   * Gets an item from a specific pool.\n   * @template T The type of items in the pool. Must extend PoolItem.\n   * @param {PoolItemConstructor<T>} Class - The constructor of the items in the pool.\n   * @param {unknown} [data] - Optional data to pass to the item's constructor.\n   * @returns {T} The item from the pool.\n   */\n  get(Class, data) {\n    const pool = this.getPool(Class);\n    return pool.get(data);\n  }\n  /**\n   * Returns an item to its respective pool.\n   * @param {PoolItem} item - The item to return to the pool.\n   */\n  return(item) {\n    const pool = this.getPool(item.constructor);\n    pool.return(item);\n  }\n  /**\n   * Gets a specific pool based on the class type.\n   * @template T The type of items in the pool. Must extend PoolItem.\n   * @param {PoolItemConstructor<T>} ClassType - The constructor of the items in the pool.\n   * @returns {Pool<T>} The pool of the given class type.\n   */\n  getPool(ClassType) {\n    if (!this._poolsByClass.has(ClassType)) {\n      this._poolsByClass.set(ClassType, new Pool(ClassType));\n    }\n    return this._poolsByClass.get(ClassType);\n  }\n  /** gets the usage stats of each pool in the system */\n  stats() {\n    const stats = {};\n    this._poolsByClass.forEach((pool) => {\n      const name = stats[pool._classType.name] ? pool._classType.name + pool._classType.ID : pool._classType.name;\n      stats[name] = {\n        free: pool.totalFree,\n        used: pool.totalUsed,\n        size: pool.totalSize\n      };\n    });\n    return stats;\n  }\n}\nconst BigPool = new PoolGroupClass();\n\nexport { BigPool, PoolGroupClass };\n//# sourceMappingURL=PoolGroup.mjs.map\n","import { deprecation } from '../../../utils/logging/deprecation.mjs';\n\n\"use strict\";\nconst cacheAsTextureMixin = {\n  /**\n   * Is this container cached as a texture?\n   * @readonly\n   * @type {boolean}\n   * @memberof scene.Container#\n   */\n  get isCachedAsTexture() {\n    return !!this.renderGroup?.isCachedAsTexture;\n  },\n  cacheAsTexture(val) {\n    if (typeof val === \"boolean\" && val === false) {\n      this.disableRenderGroup();\n    } else {\n      this.enableRenderGroup();\n      this.renderGroup.enableCacheAsTexture(val === true ? {} : val);\n    }\n  },\n  /**\n   * Updates the cached texture. Will flag that this container's cached texture needs to be redrawn.\n   * This will happen on the next render.\n   * @memberof scene.Container#\n   */\n  updateCacheTexture() {\n    this.renderGroup?.updateCacheTexture();\n  },\n  /**\n   * Allows backwards compatibility with pixi.js below version v8. Use `cacheAsTexture` instead.\n   * @deprecated\n   */\n  get cacheAsBitmap() {\n    return this.isCachedAsTexture;\n  },\n  /**\n   * @deprecated\n   */\n  set cacheAsBitmap(val) {\n    deprecation(\"v8.6.0\", \"cacheAsBitmap is deprecated, use cacheAsTexture instead.\");\n    this.cacheAsTexture(val);\n  }\n};\n\nexport { cacheAsTextureMixin };\n//# sourceMappingURL=cacheAsTextureMixin.mjs.map\n","\"use strict\";\nfunction removeItems(arr, startIdx, removeCount) {\n  const length = arr.length;\n  let i;\n  if (startIdx >= length || removeCount === 0) {\n    return;\n  }\n  removeCount = startIdx + removeCount > length ? length - startIdx : removeCount;\n  const len = length - removeCount;\n  for (i = startIdx; i < len; ++i) {\n    arr[i] = arr[i + removeCount];\n  }\n  arr.length = len;\n}\n\nexport { removeItems };\n//# sourceMappingURL=removeItems.mjs.map\n","import { removeItems } from '../../../utils/data/removeItems.mjs';\nimport { deprecation, v8_0_0 } from '../../../utils/logging/deprecation.mjs';\n\n\"use strict\";\nconst childrenHelperMixin = {\n  allowChildren: true,\n  /**\n   * Removes all children from this container that are within the begin and end indexes.\n   * @param beginIndex - The beginning position.\n   * @param endIndex - The ending position. Default value is size of the container.\n   * @returns - List of removed children\n   * @memberof scene.Container#\n   */\n  removeChildren(beginIndex = 0, endIndex) {\n    const end = endIndex ?? this.children.length;\n    const range = end - beginIndex;\n    const removed = [];\n    if (range > 0 && range <= end) {\n      for (let i = end - 1; i >= beginIndex; i--) {\n        const child = this.children[i];\n        if (!child)\n          continue;\n        removed.push(child);\n        child.parent = null;\n      }\n      removeItems(this.children, beginIndex, end);\n      const renderGroup = this.renderGroup || this.parentRenderGroup;\n      if (renderGroup) {\n        renderGroup.removeChildren(removed);\n      }\n      for (let i = 0; i < removed.length; ++i) {\n        const child = removed[i];\n        child.parentRenderLayer?.detach(child);\n        this.emit(\"childRemoved\", child, this, i);\n        removed[i].emit(\"removed\", this);\n      }\n      if (removed.length > 0) {\n        this._didViewChangeTick++;\n      }\n      return removed;\n    } else if (range === 0 && this.children.length === 0) {\n      return removed;\n    }\n    throw new RangeError(\"removeChildren: numeric values are outside the acceptable range.\");\n  },\n  /**\n   * Removes a child from the specified index position.\n   * @param index - The index to get the child from\n   * @returns The child that was removed.\n   * @memberof scene.Container#\n   */\n  removeChildAt(index) {\n    const child = this.getChildAt(index);\n    return this.removeChild(child);\n  },\n  /**\n   * Returns the child at the specified index\n   * @param index - The index to get the child at\n   * @returns - The child at the given index, if any.\n   * @memberof scene.Container#\n   */\n  getChildAt(index) {\n    if (index < 0 || index >= this.children.length) {\n      throw new Error(`getChildAt: Index (${index}) does not exist.`);\n    }\n    return this.children[index];\n  },\n  /**\n   * Changes the position of an existing child in the container\n   * @param child - The child Container instance for which you want to change the index number\n   * @param index - The resulting index number for the child container\n   * @memberof scene.Container#\n   */\n  setChildIndex(child, index) {\n    if (index < 0 || index >= this.children.length) {\n      throw new Error(`The index ${index} supplied is out of bounds ${this.children.length}`);\n    }\n    this.getChildIndex(child);\n    this.addChildAt(child, index);\n  },\n  /**\n   * Returns the index position of a child Container instance\n   * @param child - The Container instance to identify\n   * @returns - The index position of the child container to identify\n   * @memberof scene.Container#\n   */\n  getChildIndex(child) {\n    const index = this.children.indexOf(child);\n    if (index === -1) {\n      throw new Error(\"The supplied Container must be a child of the caller\");\n    }\n    return index;\n  },\n  /**\n   * Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown.\n   * If the child is already in this container, it will be moved to the specified index.\n   * @param {Container} child - The child to add.\n   * @param {number} index - The absolute index where the child will be positioned at the end of the operation.\n   * @returns {Container} The child that was added.\n   * @memberof scene.Container#\n   */\n  addChildAt(child, index) {\n    if (!this.allowChildren) {\n      deprecation(v8_0_0, \"addChildAt: Only Containers will be allowed to add children in v8.0.0\");\n    }\n    const { children } = this;\n    if (index < 0 || index > children.length) {\n      throw new Error(`${child}addChildAt: The index ${index} supplied is out of bounds ${children.length}`);\n    }\n    if (child.parent) {\n      const currentIndex = child.parent.children.indexOf(child);\n      if (child.parent === this && currentIndex === index) {\n        return child;\n      }\n      if (currentIndex !== -1) {\n        child.parent.children.splice(currentIndex, 1);\n      }\n    }\n    if (index === children.length) {\n      children.push(child);\n    } else {\n      children.splice(index, 0, child);\n    }\n    child.parent = this;\n    child.didChange = true;\n    child._updateFlags = 15;\n    const renderGroup = this.renderGroup || this.parentRenderGroup;\n    if (renderGroup) {\n      renderGroup.addChild(child);\n    }\n    if (this.sortableChildren)\n      this.sortDirty = true;\n    this.emit(\"childAdded\", child, this, index);\n    child.emit(\"added\", this);\n    return child;\n  },\n  /**\n   * Swaps the position of 2 Containers within this container.\n   * @param child - First container to swap\n   * @param child2 - Second container to swap\n   * @memberof scene.Container#\n   */\n  swapChildren(child, child2) {\n    if (child === child2) {\n      return;\n    }\n    const index1 = this.getChildIndex(child);\n    const index2 = this.getChildIndex(child2);\n    this.children[index1] = child2;\n    this.children[index2] = child;\n    const renderGroup = this.renderGroup || this.parentRenderGroup;\n    if (renderGroup) {\n      renderGroup.structureDidChange = true;\n    }\n    this._didContainerChangeTick++;\n  },\n  /**\n   * Remove the Container from its parent Container. If the Container has no parent, do nothing.\n   * @memberof scene.Container#\n   */\n  removeFromParent() {\n    this.parent?.removeChild(this);\n  },\n  /**\n   * Reparent the child to this container, keeping the same worldTransform.\n   * @param child - The child to reparent\n   * @returns The first child that was reparented.\n   * @memberof scene.Container#\n   */\n  reparentChild(...child) {\n    if (child.length === 1) {\n      return this.reparentChildAt(child[0], this.children.length);\n    }\n    child.forEach((c) => this.reparentChildAt(c, this.children.length));\n    return child[0];\n  },\n  /**\n   * Reparent the child to this container at the specified index, keeping the same worldTransform.\n   * @param child - The child to reparent\n   * @param index - The index to reparent the child to\n   * @memberof scene.Container#\n   */\n  reparentChildAt(child, index) {\n    if (child.parent === this) {\n      this.setChildIndex(child, index);\n      return child;\n    }\n    const childMat = child.worldTransform.clone();\n    child.removeFromParent();\n    this.addChildAt(child, index);\n    const newMatrix = this.worldTransform.clone();\n    newMatrix.invert();\n    childMat.prepend(newMatrix);\n    child.setFromMatrix(childMat);\n    return child;\n  }\n};\n\nexport { childrenHelperMixin };\n//# sourceMappingURL=childrenHelperMixin.mjs.map\n","\"use strict\";\nconst collectRenderablesMixin = {\n  /**\n   * Main method to collect renderables from the container and its children.\n   * It checks the container's properties to decide whether to use a simple or advanced collection method.\n   * @param {InstructionSet} instructionSet - The set of instructions to which the renderables will be added.\n   * @param {Renderer} renderer - The renderer responsible for rendering the scene.\n   * @param {IRenderLayer} currentLayer - The current render layer being processed.\n   * @memberof scene.Container#\n   */\n  collectRenderables(instructionSet, renderer, currentLayer) {\n    if (this.parentRenderLayer && this.parentRenderLayer !== currentLayer || this.globalDisplayStatus < 7 || !this.includeInBuild)\n      return;\n    if (this.sortableChildren) {\n      this.sortChildren();\n    }\n    if (this.isSimple) {\n      this.collectRenderablesSimple(instructionSet, renderer, currentLayer);\n    } else if (this.renderGroup) {\n      renderer.renderPipes.renderGroup.addRenderGroup(this.renderGroup, instructionSet);\n    } else {\n      this.collectRenderablesWithEffects(instructionSet, renderer, currentLayer);\n    }\n  },\n  /**\n   * Simple method for collecting renderables from the container's children.\n   * This method is efficient and used when the container is marked as simple.\n   * @param {InstructionSet} instructionSet - The set of instructions to which the renderables will be added.\n   * @param {Renderer} renderer - The renderer responsible for rendering the scene.\n   * @param {IRenderLayer} currentLayer - The current render layer being processed.\n   * @memberof scene.Container#\n   */\n  collectRenderablesSimple(instructionSet, renderer, currentLayer) {\n    const children = this.children;\n    const length = children.length;\n    for (let i = 0; i < length; i++) {\n      children[i].collectRenderables(instructionSet, renderer, currentLayer);\n    }\n  },\n  /**\n   * Advanced method for collecting renderables, which handles additional effects.\n   * This method is used when the container has complex processing needs.\n   * @param {InstructionSet} instructionSet - The set of instructions to which the renderables will be added.\n   * @param {Renderer} renderer - The renderer responsible for rendering the scene.\n   * @param {IRenderLayer} currentLayer - The current render layer being processed.\n   * @memberof scene.Container#\n   */\n  collectRenderablesWithEffects(instructionSet, renderer, currentLayer) {\n    const { renderPipes } = renderer;\n    for (let i = 0; i < this.effects.length; i++) {\n      const effect = this.effects[i];\n      const pipe = renderPipes[effect.pipe];\n      pipe.push(effect, this, instructionSet);\n    }\n    this.collectRenderablesSimple(instructionSet, renderer, currentLayer);\n    for (let i = this.effects.length - 1; i >= 0; i--) {\n      const effect = this.effects[i];\n      const pipe = renderPipes[effect.pipe];\n      pipe.pop(effect, this, instructionSet);\n    }\n  }\n};\n\nexport { collectRenderablesMixin };\n//# sourceMappingURL=collectRenderablesMixin.mjs.map\n","\"use strict\";\nclass FilterEffect {\n  constructor() {\n    /** the pipe that knows how to handle this effect */\n    this.pipe = \"filter\";\n    /** the priority of this effect */\n    this.priority = 1;\n  }\n  destroy() {\n    for (let i = 0; i < this.filters.length; i++) {\n      this.filters[i].destroy();\n    }\n    this.filters = null;\n    this.filterArea = null;\n  }\n}\n\nexport { FilterEffect };\n//# sourceMappingURL=FilterEffect.mjs.map\n","import { extensions, ExtensionType } from '../../extensions/Extensions.mjs';\nimport { BigPool } from '../../utils/pool/PoolGroup.mjs';\n\n\"use strict\";\nclass MaskEffectManagerClass {\n  constructor() {\n    /**\n     * @private\n     */\n    this._effectClasses = [];\n    this._tests = [];\n    this._initialized = false;\n  }\n  init() {\n    if (this._initialized)\n      return;\n    this._initialized = true;\n    this._effectClasses.forEach((test) => {\n      this.add({\n        test: test.test,\n        maskClass: test\n      });\n    });\n  }\n  add(test) {\n    this._tests.push(test);\n  }\n  getMaskEffect(item) {\n    if (!this._initialized)\n      this.init();\n    for (let i = 0; i < this._tests.length; i++) {\n      const test = this._tests[i];\n      if (test.test(item)) {\n        return BigPool.get(test.maskClass, item);\n      }\n    }\n    return item;\n  }\n  returnMaskEffect(effect) {\n    BigPool.return(effect);\n  }\n}\nconst MaskEffectManager = new MaskEffectManagerClass();\nextensions.handleByList(ExtensionType.MaskEffect, MaskEffectManager._effectClasses);\n\nexport { MaskEffectManager, MaskEffectManagerClass };\n//# sourceMappingURL=MaskEffectManager.mjs.map\n","import { FilterEffect } from '../../../filters/FilterEffect.mjs';\nimport { MaskEffectManager } from '../../../rendering/mask/MaskEffectManager.mjs';\n\n\"use strict\";\nconst effectsMixin = {\n  _maskEffect: null,\n  _maskOptions: {\n    inverse: false\n  },\n  _filterEffect: null,\n  /**\n   * @todo Needs docs.\n   * @memberof scene.Container#\n   * @type {Array<Effect>}\n   */\n  effects: [],\n  _markStructureAsChanged() {\n    const renderGroup = this.renderGroup || this.parentRenderGroup;\n    if (renderGroup) {\n      renderGroup.structureDidChange = true;\n    }\n  },\n  /**\n   * @todo Needs docs.\n   * @param effect - The effect to add.\n   * @memberof scene.Container#\n   * @ignore\n   */\n  addEffect(effect) {\n    const index = this.effects.indexOf(effect);\n    if (index !== -1)\n      return;\n    this.effects.push(effect);\n    this.effects.sort((a, b) => a.priority - b.priority);\n    this._markStructureAsChanged();\n    this._updateIsSimple();\n  },\n  /**\n   * @todo Needs docs.\n   * @param effect - The effect to remove.\n   * @memberof scene.Container#\n   * @ignore\n   */\n  removeEffect(effect) {\n    const index = this.effects.indexOf(effect);\n    if (index === -1)\n      return;\n    this.effects.splice(index, 1);\n    this._markStructureAsChanged();\n    this._updateIsSimple();\n  },\n  set mask(value) {\n    const effect = this._maskEffect;\n    if (effect?.mask === value)\n      return;\n    if (effect) {\n      this.removeEffect(effect);\n      MaskEffectManager.returnMaskEffect(effect);\n      this._maskEffect = null;\n    }\n    if (value === null || value === void 0)\n      return;\n    this._maskEffect = MaskEffectManager.getMaskEffect(value);\n    this.addEffect(this._maskEffect);\n  },\n  /**\n   * Used to set mask and control mask options.\n   * @param options\n   * @example\n   * import { Graphics, Sprite } from 'pixi.js';\n   *\n   * const graphics = new Graphics();\n   * graphics.beginFill(0xFF3300);\n   * graphics.drawRect(50, 250, 100, 100);\n   * graphics.endFill();\n   *\n   * const sprite = new Sprite(texture);\n   * sprite.setMask({\n   *     mask: graphics,\n   *     inverse: true,\n   * });\n   * @memberof scene.Container#\n   */\n  setMask(options) {\n    this._maskOptions = {\n      ...this._maskOptions,\n      ...options\n    };\n    if (options.mask) {\n      this.mask = options.mask;\n    }\n    this._markStructureAsChanged();\n  },\n  /**\n   * Sets a mask for the displayObject. A mask is an object that limits the visibility of an\n   * object to the shape of the mask applied to it. In PixiJS a regular mask must be a\n   * {@link Graphics} or a {@link Sprite} object. This allows for much faster masking in canvas as it\n   * utilities shape clipping. Furthermore, a mask of an object must be in the subtree of its parent.\n   * Otherwise, `getLocalBounds` may calculate incorrect bounds, which makes the container's width and height wrong.\n   * To remove a mask, set this property to `null`.\n   *\n   * For sprite mask both alpha and red channel are used. Black mask is the same as transparent mask.\n   * @example\n   * import { Graphics, Sprite } from 'pixi.js';\n   *\n   * const graphics = new Graphics();\n   * graphics.beginFill(0xFF3300);\n   * graphics.drawRect(50, 250, 100, 100);\n   * graphics.endFill();\n   *\n   * const sprite = new Sprite(texture);\n   * sprite.mask = graphics;\n   * @memberof scene.Container#\n   */\n  get mask() {\n    return this._maskEffect?.mask;\n  },\n  set filters(value) {\n    if (!Array.isArray(value) && value)\n      value = [value];\n    const effect = this._filterEffect || (this._filterEffect = new FilterEffect());\n    value = value;\n    const hasFilters = value?.length > 0;\n    const hadFilters = effect.filters?.length > 0;\n    const didChange = hasFilters !== hadFilters;\n    value = Array.isArray(value) ? value.slice(0) : value;\n    effect.filters = Object.freeze(value);\n    if (didChange) {\n      if (hasFilters) {\n        this.addEffect(effect);\n      } else {\n        this.removeEffect(effect);\n        effect.filters = value ?? null;\n      }\n    }\n  },\n  /**\n   * Sets the filters for the displayObject.\n   * IMPORTANT: This is a WebGL only feature and will be ignored by the canvas renderer.\n   * To remove filters simply set this property to `'null'`.\n   * @memberof scene.Container#\n   */\n  get filters() {\n    return this._filterEffect?.filters;\n  },\n  set filterArea(value) {\n    this._filterEffect || (this._filterEffect = new FilterEffect());\n    this._filterEffect.filterArea = value;\n  },\n  /**\n   * The area the filter is applied to. This is used as more of an optimization\n   * rather than figuring out the dimensions of the displayObject each frame you can set this rectangle.\n   *\n   * Also works as an interaction mask.\n   * @memberof scene.Container#\n   */\n  get filterArea() {\n    return this._filterEffect?.filterArea;\n  }\n};\n\nexport { effectsMixin };\n//# sourceMappingURL=effectsMixin.mjs.map\n","import { deprecation, v8_0_0 } from '../../../utils/logging/deprecation.mjs';\n\n\"use strict\";\nconst findMixin = {\n  /**\n   * The instance label of the object.\n   * @memberof scene.Container#\n   * @member {string} label\n   */\n  label: null,\n  /**\n   * The instance name of the object.\n   * @deprecated since 8.0.0\n   * @see scene.Container#label\n   * @member {string} name\n   * @memberof scene.Container#\n   */\n  get name() {\n    deprecation(v8_0_0, \"Container.name property has been removed, use Container.label instead\");\n    return this.label;\n  },\n  set name(value) {\n    deprecation(v8_0_0, \"Container.name property has been removed, use Container.label instead\");\n    this.label = value;\n  },\n  /**\n   * @method getChildByName\n   * @deprecated since 8.0.0\n   * @param {string} name - Instance name.\n   * @param {boolean}[deep=false] - Whether to search recursively\n   * @returns {Container} The child with the specified name.\n   * @see scene.Container#getChildByLabel\n   * @memberof scene.Container#\n   */\n  getChildByName(name, deep = false) {\n    return this.getChildByLabel(name, deep);\n  },\n  /**\n   * Returns the first child in the container with the specified label.\n   *\n   * Recursive searches are done in a pre-order traversal.\n   * @memberof scene.Container#\n   * @param {string|RegExp} label - Instance label.\n   * @param {boolean}[deep=false] - Whether to search recursively\n   * @returns {Container} The child with the specified label.\n   */\n  getChildByLabel(label, deep = false) {\n    const children = this.children;\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      if (child.label === label || label instanceof RegExp && label.test(child.label))\n        return child;\n    }\n    if (deep) {\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        const found = child.getChildByLabel(label, true);\n        if (found) {\n          return found;\n        }\n      }\n    }\n    return null;\n  },\n  /**\n   * Returns all children in the container with the specified label.\n   * @memberof scene.Container#\n   * @param {string|RegExp} label - Instance label.\n   * @param {boolean}[deep=false] - Whether to search recursively\n   * @param {Container[]} [out=[]] - The array to store matching children in.\n   * @returns {Container[]} An array of children with the specified label.\n   */\n  getChildrenByLabel(label, deep = false, out = []) {\n    const children = this.children;\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      if (child.label === label || label instanceof RegExp && label.test(child.label)) {\n        out.push(child);\n      }\n    }\n    if (deep) {\n      for (let i = 0; i < children.length; i++) {\n        children[i].getChildrenByLabel(label, true, out);\n      }\n    }\n    return out;\n  }\n};\n\nexport { findMixin };\n//# sourceMappingURL=findMixin.mjs.map\n","import { Matrix } from '../../../../maths/matrix/Matrix.mjs';\nimport { Pool } from '../../../../utils/pool/Pool.mjs';\nimport { Bounds } from '../Bounds.mjs';\n\n\"use strict\";\nconst matrixPool = new Pool(Matrix);\nconst boundsPool = new Pool(Bounds);\n\nexport { boundsPool, matrixPool };\n//# sourceMappingURL=matrixAndBoundsPool.mjs.map\n","import { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { Bounds } from '../bounds/Bounds.mjs';\nimport { boundsPool } from '../bounds/utils/matrixAndBoundsPool.mjs';\n\n\"use strict\";\nconst tempMatrix = new Matrix();\nconst getFastGlobalBoundsMixin = {\n  /**\n   * Computes the global bounds for the container, considering its children and optionally\n   * factoring in render layers. It starts by clearing the provided bounds object, then\n   * recursively calculates the bounds, and finally applies the world transformation.\n   * @param {boolean} [factorRenderLayers] - Whether to consider render layers in the calculation.\n   * @param {Bounds} [bounds] - The bounds object to store the result. If not provided, a new one is created.\n   * @returns {Bounds} The computed bounds.\n   * @memberof scene.Container#\n   */\n  getFastGlobalBounds(factorRenderLayers, bounds) {\n    bounds || (bounds = new Bounds());\n    bounds.clear();\n    this._getGlobalBoundsRecursive(!!factorRenderLayers, bounds, this.parentRenderLayer);\n    if (!bounds.isValid) {\n      bounds.set(0, 0, 0, 0);\n    }\n    const renderGroup = this.renderGroup || this.parentRenderGroup;\n    bounds.applyMatrix(renderGroup.worldTransform);\n    return bounds;\n  },\n  /**\n   * Recursively calculates the global bounds for the container and its children.\n   * It considers visibility, measurability, and effects, and applies transformations\n   * as necessary to compute the bounds accurately.\n   * @param {boolean} factorRenderLayers - Whether to consider render layers in the calculation.\n   * @param {Bounds} bounds - The bounds object to update with the calculated values.\n   * @param {IRenderLayer} currentLayer - The current render layer being processed.\n   * @memberof scene.Container#\n   */\n  _getGlobalBoundsRecursive(factorRenderLayers, bounds, currentLayer) {\n    let localBounds = bounds;\n    if (factorRenderLayers && this.parentRenderLayer && this.parentRenderLayer !== currentLayer)\n      return;\n    if (this.localDisplayStatus !== 7 || !this.measurable) {\n      return;\n    }\n    const manageEffects = !!this.effects.length;\n    if (this.renderGroup || manageEffects) {\n      localBounds = boundsPool.get().clear();\n    }\n    if (this.boundsArea) {\n      bounds.addRect(this.boundsArea, this.worldTransform);\n    } else {\n      if (this.renderPipeId) {\n        const viewBounds = this.bounds;\n        localBounds.addFrame(\n          viewBounds.minX,\n          viewBounds.minY,\n          viewBounds.maxX,\n          viewBounds.maxY,\n          this.groupTransform\n        );\n      }\n      const children = this.children;\n      for (let i = 0; i < children.length; i++) {\n        children[i]._getGlobalBoundsRecursive(factorRenderLayers, localBounds, currentLayer);\n      }\n    }\n    if (manageEffects) {\n      let advanced = false;\n      const renderGroup = this.renderGroup || this.parentRenderGroup;\n      for (let i = 0; i < this.effects.length; i++) {\n        if (this.effects[i].addBounds) {\n          if (!advanced) {\n            advanced = true;\n            localBounds.applyMatrix(renderGroup.worldTransform);\n          }\n          this.effects[i].addBounds(localBounds, true);\n        }\n      }\n      if (advanced) {\n        localBounds.applyMatrix(renderGroup.worldTransform.copyTo(tempMatrix).invert());\n        bounds.addBounds(localBounds, this.relativeGroupTransform);\n      }\n      bounds.addBounds(localBounds);\n      boundsPool.return(localBounds);\n    } else if (this.renderGroup) {\n      bounds.addBounds(localBounds, this.relativeGroupTransform);\n      boundsPool.return(localBounds);\n    }\n  }\n};\n\nexport { getFastGlobalBoundsMixin };\n//# sourceMappingURL=getFastGlobalBoundsMixin.mjs.map\n","import { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { matrixPool, boundsPool } from './utils/matrixAndBoundsPool.mjs';\n\n\"use strict\";\nfunction getGlobalBounds(target, skipUpdateTransform, bounds) {\n  bounds.clear();\n  let parentTransform;\n  let pooledMatrix;\n  if (target.parent) {\n    if (!skipUpdateTransform) {\n      pooledMatrix = matrixPool.get().identity();\n      parentTransform = updateTransformBackwards(target, pooledMatrix);\n    } else {\n      parentTransform = target.parent.worldTransform;\n    }\n  } else {\n    parentTransform = Matrix.IDENTITY;\n  }\n  _getGlobalBounds(target, bounds, parentTransform, skipUpdateTransform);\n  if (pooledMatrix) {\n    matrixPool.return(pooledMatrix);\n  }\n  if (!bounds.isValid) {\n    bounds.set(0, 0, 0, 0);\n  }\n  return bounds;\n}\nfunction _getGlobalBounds(target, bounds, parentTransform, skipUpdateTransform) {\n  if (!target.visible || !target.measurable)\n    return;\n  let worldTransform;\n  if (!skipUpdateTransform) {\n    target.updateLocalTransform();\n    worldTransform = matrixPool.get();\n    worldTransform.appendFrom(target.localTransform, parentTransform);\n  } else {\n    worldTransform = target.worldTransform;\n  }\n  const parentBounds = bounds;\n  const preserveBounds = !!target.effects.length;\n  if (preserveBounds) {\n    bounds = boundsPool.get().clear();\n  }\n  if (target.boundsArea) {\n    bounds.addRect(target.boundsArea, worldTransform);\n  } else {\n    if (target.bounds) {\n      bounds.matrix = worldTransform;\n      bounds.addBounds(target.bounds);\n    }\n    for (let i = 0; i < target.children.length; i++) {\n      _getGlobalBounds(target.children[i], bounds, worldTransform, skipUpdateTransform);\n    }\n  }\n  if (preserveBounds) {\n    for (let i = 0; i < target.effects.length; i++) {\n      target.effects[i].addBounds?.(bounds);\n    }\n    parentBounds.addBounds(bounds, Matrix.IDENTITY);\n    boundsPool.return(bounds);\n  }\n  if (!skipUpdateTransform) {\n    matrixPool.return(worldTransform);\n  }\n}\nfunction updateTransformBackwards(target, parentTransform) {\n  const parent = target.parent;\n  if (parent) {\n    updateTransformBackwards(parent, parentTransform);\n    parent.updateLocalTransform();\n    parentTransform.append(parent.localTransform);\n  }\n  return parentTransform;\n}\n\nexport { _getGlobalBounds, getGlobalBounds, updateTransformBackwards };\n//# sourceMappingURL=getGlobalBounds.mjs.map\n","\"use strict\";\nfunction multiplyHexColors(color1, color2) {\n  if (color1 === 16777215 || !color2)\n    return color2;\n  if (color2 === 16777215 || !color1)\n    return color1;\n  const r1 = color1 >> 16 & 255;\n  const g1 = color1 >> 8 & 255;\n  const b1 = color1 & 255;\n  const r2 = color2 >> 16 & 255;\n  const g2 = color2 >> 8 & 255;\n  const b2 = color2 & 255;\n  const r = r1 * r2 / 255 | 0;\n  const g = g1 * g2 / 255 | 0;\n  const b = b1 * b2 / 255 | 0;\n  return (r << 16) + (g << 8) + b;\n}\n\nexport { multiplyHexColors };\n//# sourceMappingURL=multiplyHexColors.mjs.map\n","import { multiplyHexColors } from './multiplyHexColors.mjs';\n\n\"use strict\";\nconst WHITE_BGR = 16777215;\nfunction multiplyColors(localBGRColor, parentBGRColor) {\n  if (localBGRColor === WHITE_BGR) {\n    return parentBGRColor;\n  }\n  if (parentBGRColor === WHITE_BGR) {\n    return localBGRColor;\n  }\n  return multiplyHexColors(localBGRColor, parentBGRColor);\n}\n\nexport { multiplyColors };\n//# sourceMappingURL=multiplyColors.mjs.map\n","import { updateTransformBackwards } from '../bounds/getGlobalBounds.mjs';\nimport { matrixPool } from '../bounds/utils/matrixAndBoundsPool.mjs';\nimport { multiplyColors } from '../utils/multiplyColors.mjs';\n\n\"use strict\";\nfunction bgr2rgb(color) {\n  return ((color & 255) << 16) + (color & 65280) + (color >> 16 & 255);\n}\nconst getGlobalMixin = {\n  /**\n   * Returns the global (compound) alpha of the container within the scene.\n   * @param skipUpdate - Performance optimization flag:\n   *   - If false (default): Recalculates the entire alpha chain through parents for accuracy\n   *   - If true: Uses cached worldAlpha from the last render pass for better performance\n   * @returns The resulting alpha value (between 0 and 1)\n   * @example\n   * // Accurate but slower - recalculates entire alpha chain\n   * const preciseAlpha = container.getGlobalAlpha();\n   *\n   * // Faster but may be outdated - uses cached alpha\n   * const cachedAlpha = container.getGlobalAlpha(true);\n   */\n  getGlobalAlpha(skipUpdate) {\n    if (skipUpdate) {\n      if (this.renderGroup) {\n        return this.renderGroup.worldAlpha;\n      }\n      if (this.parentRenderGroup) {\n        return this.parentRenderGroup.worldAlpha * this.alpha;\n      }\n      return this.alpha;\n    }\n    let alpha = this.alpha;\n    let current = this.parent;\n    while (current) {\n      alpha *= current.alpha;\n      current = current.parent;\n    }\n    return alpha;\n  },\n  /**\n   * Returns the global transform matrix of the container within the scene.\n   * @param matrix - Optional matrix to store the result. If not provided, a new Matrix will be created.\n   * @param skipUpdate - Performance optimization flag:\n   *   - If false (default): Recalculates the entire transform chain for accuracy\n   *   - If true: Uses cached worldTransform from the last render pass for better performance\n   * @returns The resulting transformation matrix (either the input matrix or a new one)\n   * @example\n   * // Accurate but slower - recalculates entire transform chain\n   * const preciseTransform = container.getGlobalTransform();\n   *\n   * // Faster but may be outdated - uses cached transform\n   * const cachedTransform = container.getGlobalTransform(undefined, true);\n   *\n   * // Reuse existing matrix\n   * const existingMatrix = new Matrix();\n   * container.getGlobalTransform(existingMatrix);\n   */\n  getGlobalTransform(matrix, skipUpdate) {\n    if (skipUpdate) {\n      return matrix.copyFrom(this.worldTransform);\n    }\n    this.updateLocalTransform();\n    const parentTransform = updateTransformBackwards(this, matrixPool.get().identity());\n    matrix.appendFrom(this.localTransform, parentTransform);\n    matrixPool.return(parentTransform);\n    return matrix;\n  },\n  /**\n   * Returns the global (compound) tint color of the container within the scene.\n   * @param skipUpdate - Performance optimization flag:\n   *   - If false (default): Recalculates the entire tint chain through parents for accuracy\n   *   - If true: Uses cached worldColor from the last render pass for better performance\n   * @returns The resulting tint color as a 24-bit RGB number (0xRRGGBB)\n   * @example\n   * // Accurate but slower - recalculates entire tint chain\n   * const preciseTint = container.getGlobalTint();\n   *\n   * // Faster but may be outdated - uses cached tint\n   * const cachedTint = container.getGlobalTint(true);\n   */\n  getGlobalTint(skipUpdate) {\n    if (skipUpdate) {\n      if (this.renderGroup) {\n        return bgr2rgb(this.renderGroup.worldColor);\n      }\n      if (this.parentRenderGroup) {\n        return bgr2rgb(\n          multiplyColors(this.localColor, this.parentRenderGroup.worldColor)\n        );\n      }\n      return this.tint;\n    }\n    let color = this.localColor;\n    let parent = this.parent;\n    while (parent) {\n      color = multiplyColors(color, parent.localColor);\n      parent = parent.parent;\n    }\n    return bgr2rgb(color);\n  }\n};\n\nexport { bgr2rgb, getGlobalMixin };\n//# sourceMappingURL=getGlobalMixin.mjs.map\n","\"use strict\";\nlet warnCount = 0;\nconst maxWarnings = 500;\nfunction warn(...args) {\n  if (warnCount === maxWarnings)\n    return;\n  warnCount++;\n  if (warnCount === maxWarnings) {\n    console.warn(\"PixiJS Warning: too many warnings, no more warnings will be reported to the console by PixiJS.\");\n  } else {\n    console.warn(\"PixiJS Warning: \", ...args);\n  }\n}\n\nexport { warn };\n//# sourceMappingURL=warn.mjs.map\n","import { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { warn } from '../../../utils/logging/warn.mjs';\nimport { matrixPool, boundsPool } from './utils/matrixAndBoundsPool.mjs';\n\n\"use strict\";\nfunction getLocalBounds(target, bounds, relativeMatrix) {\n  bounds.clear();\n  relativeMatrix || (relativeMatrix = Matrix.IDENTITY);\n  _getLocalBounds(target, bounds, relativeMatrix, target, true);\n  if (!bounds.isValid) {\n    bounds.set(0, 0, 0, 0);\n  }\n  return bounds;\n}\nfunction _getLocalBounds(target, bounds, parentTransform, rootContainer, isRoot) {\n  let relativeTransform;\n  if (!isRoot) {\n    if (!target.visible || !target.measurable)\n      return;\n    target.updateLocalTransform();\n    const localTransform = target.localTransform;\n    relativeTransform = matrixPool.get();\n    relativeTransform.appendFrom(localTransform, parentTransform);\n  } else {\n    relativeTransform = matrixPool.get();\n    relativeTransform = parentTransform.copyTo(relativeTransform);\n  }\n  const parentBounds = bounds;\n  const preserveBounds = !!target.effects.length;\n  if (preserveBounds) {\n    bounds = boundsPool.get().clear();\n  }\n  if (target.boundsArea) {\n    bounds.addRect(target.boundsArea, relativeTransform);\n  } else {\n    if (target.renderPipeId) {\n      bounds.matrix = relativeTransform;\n      bounds.addBounds(target.bounds);\n    }\n    const children = target.children;\n    for (let i = 0; i < children.length; i++) {\n      _getLocalBounds(children[i], bounds, relativeTransform, rootContainer, false);\n    }\n  }\n  if (preserveBounds) {\n    for (let i = 0; i < target.effects.length; i++) {\n      target.effects[i].addLocalBounds?.(bounds, rootContainer);\n    }\n    parentBounds.addBounds(bounds, Matrix.IDENTITY);\n    boundsPool.return(bounds);\n  }\n  matrixPool.return(relativeTransform);\n}\nfunction getParent(target, root, matrix) {\n  const parent = target.parent;\n  if (!parent) {\n    warn(\"Item is not inside the root container\");\n    return;\n  }\n  if (parent !== root) {\n    getParent(parent, root, matrix);\n    parent.updateLocalTransform();\n    matrix.append(parent.localTransform);\n  }\n}\n\nexport { getLocalBounds, getParent };\n//# sourceMappingURL=getLocalBounds.mjs.map\n","\"use strict\";\nfunction checkChildrenDidChange(container, previousData) {\n  const children = container.children;\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    const uid = child.uid;\n    const didChange = (child._didViewChangeTick & 65535) << 16 | child._didContainerChangeTick & 65535;\n    const index = previousData.index;\n    if (previousData.data[index] !== uid || previousData.data[index + 1] !== didChange) {\n      previousData.data[previousData.index] = uid;\n      previousData.data[previousData.index + 1] = didChange;\n      previousData.didChange = true;\n    }\n    previousData.index = index + 2;\n    if (child.children.length) {\n      checkChildrenDidChange(child, previousData);\n    }\n  }\n  return previousData.didChange;\n}\n\nexport { checkChildrenDidChange };\n//# sourceMappingURL=checkChildrenDidChange.mjs.map\n","import { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { Bounds } from '../bounds/Bounds.mjs';\nimport { getGlobalBounds } from '../bounds/getGlobalBounds.mjs';\nimport { getLocalBounds } from '../bounds/getLocalBounds.mjs';\nimport { checkChildrenDidChange } from '../utils/checkChildrenDidChange.mjs';\n\n\"use strict\";\nconst tempMatrix = new Matrix();\nconst measureMixin = {\n  _localBoundsCacheId: -1,\n  _localBoundsCacheData: null,\n  _setWidth(value, localWidth) {\n    const sign = Math.sign(this.scale.x) || 1;\n    if (localWidth !== 0) {\n      this.scale.x = value / localWidth * sign;\n    } else {\n      this.scale.x = sign;\n    }\n  },\n  _setHeight(value, localHeight) {\n    const sign = Math.sign(this.scale.y) || 1;\n    if (localHeight !== 0) {\n      this.scale.y = value / localHeight * sign;\n    } else {\n      this.scale.y = sign;\n    }\n  },\n  /**\n   * Retrieves the local bounds of the container as a Bounds object.\n   * @returns - The bounding area.\n   * @memberof scene.Container#\n   */\n  getLocalBounds() {\n    if (!this._localBoundsCacheData) {\n      this._localBoundsCacheData = {\n        data: [],\n        index: 1,\n        didChange: false,\n        localBounds: new Bounds()\n      };\n    }\n    const localBoundsCacheData = this._localBoundsCacheData;\n    localBoundsCacheData.index = 1;\n    localBoundsCacheData.didChange = false;\n    if (localBoundsCacheData.data[0] !== this._didViewChangeTick) {\n      localBoundsCacheData.didChange = true;\n      localBoundsCacheData.data[0] = this._didViewChangeTick;\n    }\n    checkChildrenDidChange(this, localBoundsCacheData);\n    if (localBoundsCacheData.didChange) {\n      getLocalBounds(this, localBoundsCacheData.localBounds, tempMatrix);\n    }\n    return localBoundsCacheData.localBounds;\n  },\n  /**\n   * Calculates and returns the (world) bounds of the display object as a [Rectangle]{@link Rectangle}.\n   * @param skipUpdate - Setting to `true` will stop the transforms of the scene graph from\n   *  being updated. This means the calculation returned MAY be out of date BUT will give you a\n   *  nice performance boost.\n   * @param bounds - Optional bounds to store the result of the bounds calculation.\n   * @returns - The minimum axis-aligned rectangle in world space that fits around this object.\n   * @memberof scene.Container#\n   */\n  getBounds(skipUpdate, bounds) {\n    return getGlobalBounds(this, skipUpdate, bounds || new Bounds());\n  }\n};\n\nexport { measureMixin };\n//# sourceMappingURL=measureMixin.mjs.map\n","\"use strict\";\nconst onRenderMixin = {\n  _onRender: null,\n  set onRender(func) {\n    const renderGroup = this.renderGroup || this.parentRenderGroup;\n    if (!func) {\n      if (this._onRender) {\n        renderGroup?.removeOnRender(this);\n      }\n      this._onRender = null;\n      return;\n    }\n    if (!this._onRender) {\n      renderGroup?.addOnRender(this);\n    }\n    this._onRender = func;\n  },\n  /**\n   * This callback is used when the container is rendered. This is where you should add your custom\n   * logic that is needed to be run every frame.\n   *\n   * In v7 many users used `updateTransform` for this, however the way v8 renders objects is different\n   * and \"updateTransform\" is no longer called every frame\n   * @example\n   * const container = new Container();\n   * container.onRender = () => {\n   *    container.rotation += 0.01;\n   * };\n   * @memberof scene.Container#\n   */\n  get onRender() {\n    return this._onRender;\n  }\n};\n\nexport { onRenderMixin };\n//# sourceMappingURL=onRenderMixin.mjs.map\n","\"use strict\";\nconst sortMixin = {\n  _zIndex: 0,\n  /**\n   * Should children be sorted by zIndex at the next render call.\n   *\n   * Will get automatically set to true if a new child is added, or if a child's zIndex changes.\n   * @type {boolean}\n   * @memberof scene.Container#\n   */\n  sortDirty: false,\n  /**\n   * If set to true, the container will sort its children by `zIndex` value\n   * when the next render is called, or manually if `sortChildren()` is called.\n   *\n   * This actually changes the order of elements in the array, so should be treated\n   * as a basic solution that is not performant compared to other solutions,\n   * such as {@link https://github.com/pixijs/layers PixiJS Layers}\n   *\n   * Also be aware of that this may not work nicely with the `addChildAt()` function,\n   * as the `zIndex` sorting may cause the child to automatically sorted to another position.\n   * @type {boolean}\n   * @memberof scene.Container#\n   */\n  sortableChildren: false,\n  /**\n   * The zIndex of the container.\n   *\n   * Setting this value, will automatically set the parent to be sortable. Children will be automatically\n   * sorted by zIndex value; a higher value will mean it will be moved towards the end of the array,\n   * and thus rendered on top of other display objects within the same container.\n   * @see scene.Container#sortableChildren\n   * @memberof scene.Container#\n   */\n  get zIndex() {\n    return this._zIndex;\n  },\n  set zIndex(value) {\n    if (this._zIndex === value)\n      return;\n    this._zIndex = value;\n    this.depthOfChildModified();\n  },\n  depthOfChildModified() {\n    if (this.parent) {\n      this.parent.sortableChildren = true;\n      this.parent.sortDirty = true;\n    }\n    if (this.parentRenderGroup) {\n      this.parentRenderGroup.structureDidChange = true;\n    }\n  },\n  /**\n   * Sorts children by zIndex.\n   * @memberof scene.Container#\n   */\n  sortChildren() {\n    if (!this.sortDirty)\n      return;\n    this.sortDirty = false;\n    this.children.sort(sortChildren);\n  }\n};\nfunction sortChildren(a, b) {\n  return a._zIndex - b._zIndex;\n}\n\nexport { sortMixin };\n//# sourceMappingURL=sortMixin.mjs.map\n","import { Point } from '../../../maths/point/Point.mjs';\nimport { matrixPool } from '../bounds/utils/matrixAndBoundsPool.mjs';\n\n\"use strict\";\nconst toLocalGlobalMixin = {\n  /**\n   * Returns the global position of the container.\n   * @param point - The optional point to write the global value to.\n   * @param skipUpdate - Should we skip the update transform.\n   * @returns - The updated point.\n   * @memberof scene.Container#\n   */\n  getGlobalPosition(point = new Point(), skipUpdate = false) {\n    if (this.parent) {\n      this.parent.toGlobal(this._position, point, skipUpdate);\n    } else {\n      point.x = this._position.x;\n      point.y = this._position.y;\n    }\n    return point;\n  },\n  /**\n   * Calculates the global position of the container.\n   * @param position - The world origin to calculate from.\n   * @param point - A Point object in which to store the value, optional\n   *  (otherwise will create a new Point).\n   * @param skipUpdate - Should we skip the update transform.\n   * @returns - A point object representing the position of this object.\n   * @memberof scene.Container#\n   */\n  toGlobal(position, point, skipUpdate = false) {\n    const globalMatrix = this.getGlobalTransform(matrixPool.get(), skipUpdate);\n    point = globalMatrix.apply(position, point);\n    matrixPool.return(globalMatrix);\n    return point;\n  },\n  /**\n   * Calculates the local position of the container relative to another point.\n   * @param position - The world origin to calculate from.\n   * @param from - The Container to calculate the global position from.\n   * @param point - A Point object in which to store the value, optional\n   *  (otherwise will create a new Point).\n   * @param skipUpdate - Should we skip the update transform\n   * @returns - A point object representing the position of this object\n   * @memberof scene.Container#\n   */\n  toLocal(position, from, point, skipUpdate) {\n    if (from) {\n      position = from.toGlobal(position, point, skipUpdate);\n    }\n    const globalMatrix = this.getGlobalTransform(matrixPool.get(), skipUpdate);\n    point = globalMatrix.applyInverse(position, point);\n    matrixPool.return(globalMatrix);\n    return point;\n  }\n};\n\nexport { toLocalGlobalMixin };\n//# sourceMappingURL=toLocalGlobalMixin.mjs.map\n","import { uid } from '../../../../utils/data/uid.mjs';\n\n\"use strict\";\nclass InstructionSet {\n  constructor() {\n    /** a unique id for this instruction set used through the renderer */\n    this.uid = uid(\"instructionSet\");\n    /** the array of instructions */\n    this.instructions = [];\n    /** the actual size of the array (any instructions passed this should be ignored) */\n    this.instructionSize = 0;\n    this.renderables = [];\n    /** used by the garbage collector to track when the instruction set was last used */\n    this.gcTick = 0;\n  }\n  /** reset the instruction set so it can be reused set size back to 0 */\n  reset() {\n    this.instructionSize = 0;\n  }\n  /**\n   * Add an instruction to the set\n   * @param instruction - add an instruction to the set\n   */\n  add(instruction) {\n    this.instructions[this.instructionSize++] = instruction;\n  }\n  /**\n   * Log the instructions to the console (for debugging)\n   * @internal\n   * @ignore\n   */\n  log() {\n    this.instructions.length = this.instructionSize;\n    console.table(this.instructions, [\"type\", \"action\"]);\n  }\n}\n\nexport { InstructionSet };\n//# sourceMappingURL=InstructionSet.mjs.map\n","import { nextPow2 } from '../../../../maths/misc/pow2.mjs';\nimport { TextureSource } from './sources/TextureSource.mjs';\nimport { Texture } from './Texture.mjs';\n\n\"use strict\";\nlet count = 0;\nclass TexturePoolClass {\n  /**\n   * @param textureOptions - options that will be passed to BaseRenderTexture constructor\n   * @param {SCALE_MODE} [textureOptions.scaleMode] - See {@link SCALE_MODE} for possible values.\n   */\n  constructor(textureOptions) {\n    this._poolKeyHash = /* @__PURE__ */ Object.create(null);\n    this._texturePool = {};\n    this.textureOptions = textureOptions || {};\n    this.enableFullScreen = false;\n  }\n  /**\n   * Creates texture with params that were specified in pool constructor.\n   * @param pixelWidth - Width of texture in pixels.\n   * @param pixelHeight - Height of texture in pixels.\n   * @param antialias\n   */\n  createTexture(pixelWidth, pixelHeight, antialias) {\n    const textureSource = new TextureSource({\n      ...this.textureOptions,\n      width: pixelWidth,\n      height: pixelHeight,\n      resolution: 1,\n      antialias,\n      autoGarbageCollect: false\n    });\n    return new Texture({\n      source: textureSource,\n      label: `texturePool_${count++}`\n    });\n  }\n  /**\n   * Gets a Power-of-Two render texture or fullScreen texture\n   * @param frameWidth - The minimum width of the render texture.\n   * @param frameHeight - The minimum height of the render texture.\n   * @param resolution - The resolution of the render texture.\n   * @param antialias\n   * @returns The new render texture.\n   */\n  getOptimalTexture(frameWidth, frameHeight, resolution = 1, antialias) {\n    let po2Width = Math.ceil(frameWidth * resolution - 1e-6);\n    let po2Height = Math.ceil(frameHeight * resolution - 1e-6);\n    po2Width = nextPow2(po2Width);\n    po2Height = nextPow2(po2Height);\n    const key = (po2Width << 17) + (po2Height << 1) + (antialias ? 1 : 0);\n    if (!this._texturePool[key]) {\n      this._texturePool[key] = [];\n    }\n    let texture = this._texturePool[key].pop();\n    if (!texture) {\n      texture = this.createTexture(po2Width, po2Height, antialias);\n    }\n    texture.source._resolution = resolution;\n    texture.source.width = po2Width / resolution;\n    texture.source.height = po2Height / resolution;\n    texture.source.pixelWidth = po2Width;\n    texture.source.pixelHeight = po2Height;\n    texture.frame.x = 0;\n    texture.frame.y = 0;\n    texture.frame.width = frameWidth;\n    texture.frame.height = frameHeight;\n    texture.updateUvs();\n    this._poolKeyHash[texture.uid] = key;\n    return texture;\n  }\n  /**\n   * Gets extra texture of the same size as input renderTexture\n   * @param texture - The texture to check what size it is.\n   * @param antialias - Whether to use antialias.\n   * @returns A texture that is a power of two\n   */\n  getSameSizeTexture(texture, antialias = false) {\n    const source = texture.source;\n    return this.getOptimalTexture(texture.width, texture.height, source._resolution, antialias);\n  }\n  /**\n   * Place a render texture back into the pool.\n   * @param renderTexture - The renderTexture to free\n   */\n  returnTexture(renderTexture) {\n    const key = this._poolKeyHash[renderTexture.uid];\n    this._texturePool[key].push(renderTexture);\n  }\n  /**\n   * Clears the pool.\n   * @param destroyTextures - Destroy all stored textures.\n   */\n  clear(destroyTextures) {\n    destroyTextures = destroyTextures !== false;\n    if (destroyTextures) {\n      for (const i in this._texturePool) {\n        const textures = this._texturePool[i];\n        if (textures) {\n          for (let j = 0; j < textures.length; j++) {\n            textures[j].destroy(true);\n          }\n        }\n      }\n    }\n    this._texturePool = {};\n  }\n}\nconst TexturePool = new TexturePoolClass();\n\nexport { TexturePool, TexturePoolClass };\n//# sourceMappingURL=TexturePool.mjs.map\n","import { Matrix } from '../../maths/matrix/Matrix.mjs';\nimport { InstructionSet } from '../../rendering/renderers/shared/instructions/InstructionSet.mjs';\nimport { TexturePool } from '../../rendering/renderers/shared/texture/TexturePool.mjs';\n\n\"use strict\";\nclass RenderGroup {\n  constructor() {\n    this.renderPipeId = \"renderGroup\";\n    this.root = null;\n    this.canBundle = false;\n    this.renderGroupParent = null;\n    this.renderGroupChildren = [];\n    this.worldTransform = new Matrix();\n    this.worldColorAlpha = 4294967295;\n    this.worldColor = 16777215;\n    this.worldAlpha = 1;\n    // these updates are transform changes..\n    this.childrenToUpdate = /* @__PURE__ */ Object.create(null);\n    this.updateTick = 0;\n    this.gcTick = 0;\n    // these update are renderable changes..\n    this.childrenRenderablesToUpdate = { list: [], index: 0 };\n    // other\n    this.structureDidChange = true;\n    this.instructionSet = new InstructionSet();\n    this._onRenderContainers = [];\n    /**\n     * Indicates if the cached texture needs to be updated.\n     * @default true\n     */\n    this.textureNeedsUpdate = true;\n    /**\n     * Indicates if the container should be cached as a texture.\n     * @default false\n     */\n    this.isCachedAsTexture = false;\n    this._matrixDirty = 7;\n  }\n  init(root) {\n    this.root = root;\n    if (root._onRender)\n      this.addOnRender(root);\n    root.didChange = true;\n    const children = root.children;\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      child._updateFlags = 15;\n      this.addChild(child);\n    }\n  }\n  enableCacheAsTexture(options = {}) {\n    this.textureOptions = options;\n    this.isCachedAsTexture = true;\n    this.textureNeedsUpdate = true;\n  }\n  disableCacheAsTexture() {\n    this.isCachedAsTexture = false;\n    if (this.texture) {\n      TexturePool.returnTexture(this.texture);\n      this.texture = null;\n    }\n  }\n  updateCacheTexture() {\n    this.textureNeedsUpdate = true;\n  }\n  reset() {\n    this.renderGroupChildren.length = 0;\n    for (const i in this.childrenToUpdate) {\n      const childrenAtDepth = this.childrenToUpdate[i];\n      childrenAtDepth.list.fill(null);\n      childrenAtDepth.index = 0;\n    }\n    this.childrenRenderablesToUpdate.index = 0;\n    this.childrenRenderablesToUpdate.list.fill(null);\n    this.root = null;\n    this.updateTick = 0;\n    this.structureDidChange = true;\n    this._onRenderContainers.length = 0;\n    this.renderGroupParent = null;\n    this.disableCacheAsTexture();\n  }\n  get localTransform() {\n    return this.root.localTransform;\n  }\n  addRenderGroupChild(renderGroupChild) {\n    if (renderGroupChild.renderGroupParent) {\n      renderGroupChild.renderGroupParent._removeRenderGroupChild(renderGroupChild);\n    }\n    renderGroupChild.renderGroupParent = this;\n    this.renderGroupChildren.push(renderGroupChild);\n  }\n  _removeRenderGroupChild(renderGroupChild) {\n    const index = this.renderGroupChildren.indexOf(renderGroupChild);\n    if (index > -1) {\n      this.renderGroupChildren.splice(index, 1);\n    }\n    renderGroupChild.renderGroupParent = null;\n  }\n  addChild(child) {\n    this.structureDidChange = true;\n    child.parentRenderGroup = this;\n    child.updateTick = -1;\n    if (child.parent === this.root) {\n      child.relativeRenderGroupDepth = 1;\n    } else {\n      child.relativeRenderGroupDepth = child.parent.relativeRenderGroupDepth + 1;\n    }\n    child.didChange = true;\n    this.onChildUpdate(child);\n    if (child.renderGroup) {\n      this.addRenderGroupChild(child.renderGroup);\n      return;\n    }\n    if (child._onRender)\n      this.addOnRender(child);\n    const children = child.children;\n    for (let i = 0; i < children.length; i++) {\n      this.addChild(children[i]);\n    }\n  }\n  removeChild(child) {\n    this.structureDidChange = true;\n    if (child._onRender) {\n      if (!child.renderGroup) {\n        this.removeOnRender(child);\n      }\n    }\n    child.parentRenderGroup = null;\n    if (child.renderGroup) {\n      this._removeRenderGroupChild(child.renderGroup);\n      return;\n    }\n    const children = child.children;\n    for (let i = 0; i < children.length; i++) {\n      this.removeChild(children[i]);\n    }\n  }\n  removeChildren(children) {\n    for (let i = 0; i < children.length; i++) {\n      this.removeChild(children[i]);\n    }\n  }\n  onChildUpdate(child) {\n    let childrenToUpdate = this.childrenToUpdate[child.relativeRenderGroupDepth];\n    if (!childrenToUpdate) {\n      childrenToUpdate = this.childrenToUpdate[child.relativeRenderGroupDepth] = {\n        index: 0,\n        list: []\n      };\n    }\n    childrenToUpdate.list[childrenToUpdate.index++] = child;\n  }\n  updateRenderable(renderable) {\n    if (renderable.globalDisplayStatus < 7)\n      return;\n    this.instructionSet.renderPipes[renderable.renderPipeId].updateRenderable(renderable);\n    renderable.didViewUpdate = false;\n  }\n  onChildViewUpdate(child) {\n    this.childrenRenderablesToUpdate.list[this.childrenRenderablesToUpdate.index++] = child;\n  }\n  get isRenderable() {\n    return this.root.localDisplayStatus === 7 && this.worldAlpha > 0;\n  }\n  /**\n   * adding a container to the onRender list will make sure the user function\n   * passed in to the user defined 'onRender` callBack\n   * @param container - the container to add to the onRender list\n   */\n  addOnRender(container) {\n    this._onRenderContainers.push(container);\n  }\n  removeOnRender(container) {\n    this._onRenderContainers.splice(this._onRenderContainers.indexOf(container), 1);\n  }\n  runOnRender(renderer) {\n    for (let i = 0; i < this._onRenderContainers.length; i++) {\n      this._onRenderContainers[i]._onRender(renderer);\n    }\n  }\n  destroy() {\n    this.disableCacheAsTexture();\n    this.renderGroupParent = null;\n    this.root = null;\n    this.childrenRenderablesToUpdate = null;\n    this.childrenToUpdate = null;\n    this.renderGroupChildren = null;\n    this._onRenderContainers = null;\n    this.instructionSet = null;\n  }\n  getChildren(out = []) {\n    const children = this.root.children;\n    for (let i = 0; i < children.length; i++) {\n      this._getChildren(children[i], out);\n    }\n    return out;\n  }\n  _getChildren(container, out = []) {\n    out.push(container);\n    if (container.renderGroup)\n      return out;\n    const children = container.children;\n    for (let i = 0; i < children.length; i++) {\n      this._getChildren(children[i], out);\n    }\n    return out;\n  }\n  invalidateMatrices() {\n    this._matrixDirty = 7;\n  }\n  /**\n   * Returns the inverse of the world transform matrix.\n   * @returns {Matrix} The inverse of the world transform matrix.\n   */\n  get inverseWorldTransform() {\n    if ((this._matrixDirty & 1) === 0)\n      return this._inverseWorldTransform;\n    this._matrixDirty &= ~1;\n    this._inverseWorldTransform || (this._inverseWorldTransform = new Matrix());\n    return this._inverseWorldTransform.copyFrom(this.worldTransform).invert();\n  }\n  /**\n   * Returns the inverse of the texture offset transform matrix.\n   * @returns {Matrix} The inverse of the texture offset transform matrix.\n   */\n  get textureOffsetInverseTransform() {\n    if ((this._matrixDirty & 2) === 0)\n      return this._textureOffsetInverseTransform;\n    this._matrixDirty &= ~2;\n    this._textureOffsetInverseTransform || (this._textureOffsetInverseTransform = new Matrix());\n    return this._textureOffsetInverseTransform.copyFrom(this.inverseWorldTransform).translate(\n      -this._textureBounds.x,\n      -this._textureBounds.y\n    );\n  }\n  /**\n   * Returns the inverse of the parent texture transform matrix.\n   * This is used to properly transform coordinates when rendering into cached textures.\n   * @returns {Matrix} The inverse of the parent texture transform matrix.\n   */\n  get inverseParentTextureTransform() {\n    if ((this._matrixDirty & 4) === 0)\n      return this._inverseParentTextureTransform;\n    this._matrixDirty &= ~4;\n    const parentCacheAsTexture = this._parentCacheAsTextureRenderGroup;\n    if (parentCacheAsTexture) {\n      this._inverseParentTextureTransform || (this._inverseParentTextureTransform = new Matrix());\n      return this._inverseParentTextureTransform.copyFrom(this.worldTransform).prepend(parentCacheAsTexture.inverseWorldTransform).translate(\n        -parentCacheAsTexture._textureBounds.x,\n        -parentCacheAsTexture._textureBounds.y\n      );\n    }\n    return this.worldTransform;\n  }\n  /**\n   * Returns a matrix that transforms coordinates to the correct coordinate space of the texture being rendered to.\n   * This is the texture offset inverse transform of the closest parent RenderGroup that is cached as a texture.\n   * @returns {Matrix | null} The transform matrix for the cached texture coordinate space,\n   * or null if no parent is cached as texture.\n   */\n  get cacheToLocalTransform() {\n    if (!this._parentCacheAsTextureRenderGroup)\n      return null;\n    return this._parentCacheAsTextureRenderGroup.textureOffsetInverseTransform;\n  }\n}\n\nexport { RenderGroup };\n//# sourceMappingURL=RenderGroup.mjs.map\n","\"use strict\";\nfunction assignWithIgnore(target, options, ignore = {}) {\n  for (const key in options) {\n    if (!ignore[key] && options[key] !== void 0) {\n      target[key] = options[key];\n    }\n  }\n}\n\nexport { assignWithIgnore };\n//# sourceMappingURL=assignWithIgnore.mjs.map\n","import EventEmitter from 'eventemitter3';\nimport { Color } from '../../color/Color.mjs';\nimport { cullingMixin } from '../../culling/cullingMixin.mjs';\nimport { extensions } from '../../extensions/Extensions.mjs';\nimport { Matrix } from '../../maths/matrix/Matrix.mjs';\nimport { RAD_TO_DEG, DEG_TO_RAD } from '../../maths/misc/const.mjs';\nimport { ObservablePoint } from '../../maths/point/ObservablePoint.mjs';\nimport { uid } from '../../utils/data/uid.mjs';\nimport { deprecation, v8_0_0 } from '../../utils/logging/deprecation.mjs';\nimport { BigPool } from '../../utils/pool/PoolGroup.mjs';\nimport { cacheAsTextureMixin } from './container-mixins/cacheAsTextureMixin.mjs';\nimport { childrenHelperMixin } from './container-mixins/childrenHelperMixin.mjs';\nimport { collectRenderablesMixin } from './container-mixins/collectRenderablesMixin.mjs';\nimport { effectsMixin } from './container-mixins/effectsMixin.mjs';\nimport { findMixin } from './container-mixins/findMixin.mjs';\nimport { getFastGlobalBoundsMixin } from './container-mixins/getFastGlobalBoundsMixin.mjs';\nimport { bgr2rgb, getGlobalMixin } from './container-mixins/getGlobalMixin.mjs';\nimport { measureMixin } from './container-mixins/measureMixin.mjs';\nimport { onRenderMixin } from './container-mixins/onRenderMixin.mjs';\nimport { sortMixin } from './container-mixins/sortMixin.mjs';\nimport { toLocalGlobalMixin } from './container-mixins/toLocalGlobalMixin.mjs';\nimport { RenderGroup } from './RenderGroup.mjs';\nimport { assignWithIgnore } from './utils/assignWithIgnore.mjs';\n\n\"use strict\";\nconst defaultSkew = new ObservablePoint(null);\nconst defaultPivot = new ObservablePoint(null);\nconst defaultScale = new ObservablePoint(null, 1, 1);\nconst UPDATE_COLOR = 1;\nconst UPDATE_BLEND = 2;\nconst UPDATE_VISIBLE = 4;\nconst UPDATE_TRANSFORM = 8;\nclass Container extends EventEmitter {\n  constructor(options = {}) {\n    super();\n    /** unique id for this container */\n    this.uid = uid(\"renderable\");\n    /** @private */\n    this._updateFlags = 15;\n    // the render group this container owns\n    /** @private */\n    this.renderGroup = null;\n    // the render group this container belongs to\n    /** @private */\n    this.parentRenderGroup = null;\n    // the index of the container in the render group\n    /** @private */\n    this.parentRenderGroupIndex = 0;\n    // set to true if the container has changed. It is reset once the changes have been applied\n    // by the transform system\n    // its here to stop ensure that when things change, only one update gets registers with the transform system\n    /** @private */\n    this.didChange = false;\n    // same as above, but for the renderable\n    /** @private */\n    this.didViewUpdate = false;\n    // how deep is the container relative to its render group..\n    // unless the element is the root render group - it will be relative to its parent\n    /** @private */\n    this.relativeRenderGroupDepth = 0;\n    /**\n     * The array of children of this container.\n     * @readonly\n     */\n    this.children = [];\n    /** The display object container that contains this display object. */\n    this.parent = null;\n    // used internally for changing up the render order.. mainly for masks and filters\n    // TODO setting this should cause a rebuild??\n    /** @private */\n    this.includeInBuild = true;\n    /** @private */\n    this.measurable = true;\n    /** @private */\n    this.isSimple = true;\n    // / /////////////Transform related props//////////////\n    // used by the transform system to check if a container needs to be updated that frame\n    // if the tick matches the current transform system tick, it is not updated again\n    /**\n     * @internal\n     * @ignore\n     */\n    this.updateTick = -1;\n    /**\n     * Current transform of the object based on local factors: position, scale, other stuff.\n     * @readonly\n     */\n    this.localTransform = new Matrix();\n    /**\n     * The relative group transform is a transform relative to the render group it belongs too. It will include all parent\n     * transforms and up to the render group (think of it as kind of like a stage - but the stage can be nested).\n     * If this container is is self a render group matrix will be relative to its parent render group\n     * @readonly\n     */\n    this.relativeGroupTransform = new Matrix();\n    /**\n     * The group transform is a transform relative to the render group it belongs too.\n     * If this container is render group then this will be an identity matrix. other wise it\n     * will be the same as the relativeGroupTransform.\n     * Use this value when actually rendering things to the screen\n     * @readonly\n     */\n    this.groupTransform = this.relativeGroupTransform;\n    /** If the object has been destroyed via destroy(). If true, it should not be used. */\n    this.destroyed = false;\n    // transform data..\n    /**\n     * The coordinate of the object relative to the local coordinates of the parent.\n     * @internal\n     * @ignore\n     */\n    this._position = new ObservablePoint(this, 0, 0);\n    /**\n     * The scale factor of the object.\n     * @internal\n     * @ignore\n     */\n    this._scale = defaultScale;\n    /**\n     * The pivot point of the container that it rotates around.\n     * @internal\n     * @ignore\n     */\n    this._pivot = defaultPivot;\n    /**\n     * The skew amount, on the x and y axis.\n     * @internal\n     * @ignore\n     */\n    this._skew = defaultSkew;\n    /**\n     * The X-coordinate value of the normalized local X axis,\n     * the first column of the local transformation matrix without a scale.\n     * @internal\n     * @ignore\n     */\n    this._cx = 1;\n    /**\n     * The Y-coordinate value of the normalized local X axis,\n     * the first column of the local transformation matrix without a scale.\n     * @internal\n     * @ignore\n     */\n    this._sx = 0;\n    /**\n     * The X-coordinate value of the normalized local Y axis,\n     * the second column of the local transformation matrix without a scale.\n     * @internal\n     * @ignore\n     */\n    this._cy = 0;\n    /**\n     * The Y-coordinate value of the normalized local Y axis,\n     * the second column of the local transformation matrix without a scale.\n     * @internal\n     * @ignore\n     */\n    this._sy = 1;\n    /**\n     * The rotation amount.\n     * @internal\n     * @ignore\n     */\n    this._rotation = 0;\n    // / COLOR related props //////////////\n    // color stored as ABGR\n    this.localColor = 16777215;\n    this.localAlpha = 1;\n    this.groupAlpha = 1;\n    // A\n    this.groupColor = 16777215;\n    // BGR\n    this.groupColorAlpha = 4294967295;\n    // ABGR\n    // / BLEND related props //////////////\n    /**\n     * @internal\n     * @ignore\n     */\n    this.localBlendMode = \"inherit\";\n    /**\n     * @internal\n     * @ignore\n     */\n    this.groupBlendMode = \"normal\";\n    // / VISIBILITY related props //////////////\n    // visibility\n    // 0b11\n    // first bit is visible, second bit is renderable\n    /**\n     * This property holds three bits: culled, visible, renderable\n     * the third bit represents culling (0 = culled, 1 = not culled) 0b100\n     * the second bit represents visibility (0 = not visible, 1 = visible) 0b010\n     * the first bit represents renderable (0 = not renderable, 1 = renderable) 0b001\n     * @internal\n     * @ignore\n     */\n    this.localDisplayStatus = 7;\n    // 0b11 | 0b10 | 0b01 | 0b00\n    /**\n     * @internal\n     * @ignore\n     */\n    this.globalDisplayStatus = 7;\n    /**\n     * A value that increments each time the containe is modified\n     * eg children added, removed etc\n     * @ignore\n     */\n    this._didContainerChangeTick = 0;\n    /**\n     * A value that increments each time the container view is modified\n     * eg texture swap, geometry change etc\n     * @ignore\n     */\n    this._didViewChangeTick = 0;\n    /**\n     * property that tracks if the container transform has changed\n     * @ignore\n     */\n    this._didLocalTransformChangeId = -1;\n    this.effects = [];\n    assignWithIgnore(this, options, {\n      children: true,\n      parent: true,\n      effects: true\n    });\n    options.children?.forEach((child) => this.addChild(child));\n    options.parent?.addChild(this);\n  }\n  /**\n   * Mixes all enumerable properties and methods from a source object to Container.\n   * @param source - The source of properties and methods to mix in.\n   * @deprecated since 8.8.0\n   */\n  static mixin(source) {\n    deprecation(\"8.8.0\", \"Container.mixin is deprecated, please use extensions.mixin instead.\");\n    extensions.mixin(Container, source);\n  }\n  // = 'default';\n  /**\n   * We now use the _didContainerChangeTick and _didViewChangeTick to track changes\n   * @deprecated since 8.2.6\n   * @ignore\n   */\n  set _didChangeId(value) {\n    this._didViewChangeTick = value >> 12 & 4095;\n    this._didContainerChangeTick = value & 4095;\n  }\n  get _didChangeId() {\n    return this._didContainerChangeTick & 4095 | (this._didViewChangeTick & 4095) << 12;\n  }\n  /**\n   * Adds one or more children to the container.\n   *\n   * Multiple items can be added like so: `myContainer.addChild(thingOne, thingTwo, thingThree)`\n   * @param {...Container} children - The Container(s) to add to the container\n   * @returns {Container} - The first child that was added.\n   */\n  addChild(...children) {\n    if (!this.allowChildren) {\n      deprecation(v8_0_0, \"addChild: Only Containers will be allowed to add children in v8.0.0\");\n    }\n    if (children.length > 1) {\n      for (let i = 0; i < children.length; i++) {\n        this.addChild(children[i]);\n      }\n      return children[0];\n    }\n    const child = children[0];\n    const renderGroup = this.renderGroup || this.parentRenderGroup;\n    if (child.parent === this) {\n      this.children.splice(this.children.indexOf(child), 1);\n      this.children.push(child);\n      if (renderGroup) {\n        renderGroup.structureDidChange = true;\n      }\n      return child;\n    }\n    if (child.parent) {\n      child.parent.removeChild(child);\n    }\n    this.children.push(child);\n    if (this.sortableChildren)\n      this.sortDirty = true;\n    child.parent = this;\n    child.didChange = true;\n    child._updateFlags = 15;\n    if (renderGroup) {\n      renderGroup.addChild(child);\n    }\n    this.emit(\"childAdded\", child, this, this.children.length - 1);\n    child.emit(\"added\", this);\n    this._didViewChangeTick++;\n    if (child._zIndex !== 0) {\n      child.depthOfChildModified();\n    }\n    return child;\n  }\n  /**\n   * Removes one or more children from the container.\n   * @param {...Container} children - The Container(s) to remove\n   * @returns {Container} The first child that was removed.\n   */\n  removeChild(...children) {\n    if (children.length > 1) {\n      for (let i = 0; i < children.length; i++) {\n        this.removeChild(children[i]);\n      }\n      return children[0];\n    }\n    const child = children[0];\n    const index = this.children.indexOf(child);\n    if (index > -1) {\n      this._didViewChangeTick++;\n      this.children.splice(index, 1);\n      if (this.renderGroup) {\n        this.renderGroup.removeChild(child);\n      } else if (this.parentRenderGroup) {\n        this.parentRenderGroup.removeChild(child);\n      }\n      if (child.parentRenderLayer) {\n        child.parentRenderLayer.detach(child);\n      }\n      child.parent = null;\n      this.emit(\"childRemoved\", child, this, index);\n      child.emit(\"removed\", this);\n    }\n    return child;\n  }\n  /** @ignore */\n  _onUpdate(point) {\n    if (point) {\n      if (point === this._skew) {\n        this._updateSkew();\n      }\n    }\n    this._didContainerChangeTick++;\n    if (this.didChange)\n      return;\n    this.didChange = true;\n    if (this.parentRenderGroup) {\n      this.parentRenderGroup.onChildUpdate(this);\n    }\n  }\n  set isRenderGroup(value) {\n    if (!!this.renderGroup === value)\n      return;\n    if (value) {\n      this.enableRenderGroup();\n    } else {\n      this.disableRenderGroup();\n    }\n  }\n  /**\n   * Returns true if this container is a render group.\n   * This means that it will be rendered as a separate pass, with its own set of instructions\n   */\n  get isRenderGroup() {\n    return !!this.renderGroup;\n  }\n  /**\n   * Calling this enables a render group for this container.\n   * This means it will be rendered as a separate set of instructions.\n   * The transform of the container will also be handled on the GPU rather than the CPU.\n   */\n  enableRenderGroup() {\n    if (this.renderGroup)\n      return;\n    const parentRenderGroup = this.parentRenderGroup;\n    parentRenderGroup?.removeChild(this);\n    this.renderGroup = BigPool.get(RenderGroup, this);\n    this.groupTransform = Matrix.IDENTITY;\n    parentRenderGroup?.addChild(this);\n    this._updateIsSimple();\n  }\n  /** This will disable the render group for this container. */\n  disableRenderGroup() {\n    if (!this.renderGroup)\n      return;\n    const parentRenderGroup = this.parentRenderGroup;\n    parentRenderGroup?.removeChild(this);\n    BigPool.return(this.renderGroup);\n    this.renderGroup = null;\n    this.groupTransform = this.relativeGroupTransform;\n    parentRenderGroup?.addChild(this);\n    this._updateIsSimple();\n  }\n  /** @ignore */\n  _updateIsSimple() {\n    this.isSimple = !this.renderGroup && this.effects.length === 0;\n  }\n  /**\n   * Current transform of the object based on world (parent) factors.\n   * @readonly\n   */\n  get worldTransform() {\n    this._worldTransform || (this._worldTransform = new Matrix());\n    if (this.renderGroup) {\n      this._worldTransform.copyFrom(this.renderGroup.worldTransform);\n    } else if (this.parentRenderGroup) {\n      this._worldTransform.appendFrom(this.relativeGroupTransform, this.parentRenderGroup.worldTransform);\n    }\n    return this._worldTransform;\n  }\n  /**\n   * The position of the container on the x axis relative to the local coordinates of the parent.\n   * An alias to position.x\n   */\n  get x() {\n    return this._position.x;\n  }\n  set x(value) {\n    this._position.x = value;\n  }\n  /**\n   * The position of the container on the y axis relative to the local coordinates of the parent.\n   * An alias to position.y\n   */\n  get y() {\n    return this._position.y;\n  }\n  set y(value) {\n    this._position.y = value;\n  }\n  /**\n   * The coordinate of the object relative to the local coordinates of the parent.\n   * @since 4.0.0\n   */\n  get position() {\n    return this._position;\n  }\n  set position(value) {\n    this._position.copyFrom(value);\n  }\n  /**\n   * The rotation of the object in radians.\n   * 'rotation' and 'angle' have the same effect on a display object; rotation is in radians, angle is in degrees.\n   */\n  get rotation() {\n    return this._rotation;\n  }\n  set rotation(value) {\n    if (this._rotation !== value) {\n      this._rotation = value;\n      this._onUpdate(this._skew);\n    }\n  }\n  /**\n   * The angle of the object in degrees.\n   * 'rotation' and 'angle' have the same effect on a display object; rotation is in radians, angle is in degrees.\n   */\n  get angle() {\n    return this.rotation * RAD_TO_DEG;\n  }\n  set angle(value) {\n    this.rotation = value * DEG_TO_RAD;\n  }\n  /**\n   * The center of rotation, scaling, and skewing for this display object in its local space. The `position`\n   * is the projection of `pivot` in the parent's local space.\n   *\n   * By default, the pivot is the origin (0, 0).\n   * @since 4.0.0\n   */\n  get pivot() {\n    if (this._pivot === defaultPivot) {\n      this._pivot = new ObservablePoint(this, 0, 0);\n    }\n    return this._pivot;\n  }\n  set pivot(value) {\n    if (this._pivot === defaultPivot) {\n      this._pivot = new ObservablePoint(this, 0, 0);\n    }\n    typeof value === \"number\" ? this._pivot.set(value) : this._pivot.copyFrom(value);\n  }\n  /**\n   * The skew factor for the object in radians.\n   * @since 4.0.0\n   */\n  get skew() {\n    if (this._skew === defaultSkew) {\n      this._skew = new ObservablePoint(this, 0, 0);\n    }\n    return this._skew;\n  }\n  set skew(value) {\n    if (this._skew === defaultSkew) {\n      this._skew = new ObservablePoint(this, 0, 0);\n    }\n    this._skew.copyFrom(value);\n  }\n  /**\n   * The scale factors of this object along the local coordinate axes.\n   *\n   * The default scale is (1, 1).\n   * @since 4.0.0\n   */\n  get scale() {\n    if (this._scale === defaultScale) {\n      this._scale = new ObservablePoint(this, 1, 1);\n    }\n    return this._scale;\n  }\n  set scale(value) {\n    if (this._scale === defaultScale) {\n      this._scale = new ObservablePoint(this, 0, 0);\n    }\n    typeof value === \"number\" ? this._scale.set(value) : this._scale.copyFrom(value);\n  }\n  /**\n   * The width of the Container, setting this will actually modify the scale to achieve the value set.\n   * @memberof scene.Container#\n   */\n  get width() {\n    return Math.abs(this.scale.x * this.getLocalBounds().width);\n  }\n  set width(value) {\n    const localWidth = this.getLocalBounds().width;\n    this._setWidth(value, localWidth);\n  }\n  /**\n   * The height of the Container, setting this will actually modify the scale to achieve the value set.\n   * @memberof scene.Container#\n   */\n  get height() {\n    return Math.abs(this.scale.y * this.getLocalBounds().height);\n  }\n  set height(value) {\n    const localHeight = this.getLocalBounds().height;\n    this._setHeight(value, localHeight);\n  }\n  /**\n   * Retrieves the size of the container as a [Size]{@link Size} object.\n   * This is faster than get the width and height separately.\n   * @param out - Optional object to store the size in.\n   * @returns - The size of the container.\n   * @memberof scene.Container#\n   */\n  getSize(out) {\n    if (!out) {\n      out = {};\n    }\n    const bounds = this.getLocalBounds();\n    out.width = Math.abs(this.scale.x * bounds.width);\n    out.height = Math.abs(this.scale.y * bounds.height);\n    return out;\n  }\n  /**\n   * Sets the size of the container to the specified width and height.\n   * This is faster than setting the width and height separately.\n   * @param value - This can be either a number or a [Size]{@link Size} object.\n   * @param height - The height to set. Defaults to the value of `width` if not provided.\n   * @memberof scene.Container#\n   */\n  setSize(value, height) {\n    const size = this.getLocalBounds();\n    if (typeof value === \"object\") {\n      height = value.height ?? value.width;\n      value = value.width;\n    } else {\n      height ?? (height = value);\n    }\n    value !== void 0 && this._setWidth(value, size.width);\n    height !== void 0 && this._setHeight(height, size.height);\n  }\n  /** Called when the skew or the rotation changes. */\n  _updateSkew() {\n    const rotation = this._rotation;\n    const skew = this._skew;\n    this._cx = Math.cos(rotation + skew._y);\n    this._sx = Math.sin(rotation + skew._y);\n    this._cy = -Math.sin(rotation - skew._x);\n    this._sy = Math.cos(rotation - skew._x);\n  }\n  /**\n   * Updates the transform properties of the container (accepts partial values).\n   * @param {object} opts - The options for updating the transform.\n   * @param {number} opts.x - The x position of the container.\n   * @param {number} opts.y - The y position of the container.\n   * @param {number} opts.scaleX - The scale factor on the x-axis.\n   * @param {number} opts.scaleY - The scale factor on the y-axis.\n   * @param {number} opts.rotation - The rotation of the container, in radians.\n   * @param {number} opts.skewX - The skew factor on the x-axis.\n   * @param {number} opts.skewY - The skew factor on the y-axis.\n   * @param {number} opts.pivotX - The x coordinate of the pivot point.\n   * @param {number} opts.pivotY - The y coordinate of the pivot point.\n   */\n  updateTransform(opts) {\n    this.position.set(\n      typeof opts.x === \"number\" ? opts.x : this.position.x,\n      typeof opts.y === \"number\" ? opts.y : this.position.y\n    );\n    this.scale.set(\n      typeof opts.scaleX === \"number\" ? opts.scaleX || 1 : this.scale.x,\n      typeof opts.scaleY === \"number\" ? opts.scaleY || 1 : this.scale.y\n    );\n    this.rotation = typeof opts.rotation === \"number\" ? opts.rotation : this.rotation;\n    this.skew.set(\n      typeof opts.skewX === \"number\" ? opts.skewX : this.skew.x,\n      typeof opts.skewY === \"number\" ? opts.skewY : this.skew.y\n    );\n    this.pivot.set(\n      typeof opts.pivotX === \"number\" ? opts.pivotX : this.pivot.x,\n      typeof opts.pivotY === \"number\" ? opts.pivotY : this.pivot.y\n    );\n    return this;\n  }\n  /**\n   * Updates the local transform using the given matrix.\n   * @param matrix - The matrix to use for updating the transform.\n   */\n  setFromMatrix(matrix) {\n    matrix.decompose(this);\n  }\n  /** Updates the local transform. */\n  updateLocalTransform() {\n    const localTransformChangeId = this._didContainerChangeTick;\n    if (this._didLocalTransformChangeId === localTransformChangeId)\n      return;\n    this._didLocalTransformChangeId = localTransformChangeId;\n    const lt = this.localTransform;\n    const scale = this._scale;\n    const pivot = this._pivot;\n    const position = this._position;\n    const sx = scale._x;\n    const sy = scale._y;\n    const px = pivot._x;\n    const py = pivot._y;\n    lt.a = this._cx * sx;\n    lt.b = this._sx * sx;\n    lt.c = this._cy * sy;\n    lt.d = this._sy * sy;\n    lt.tx = position._x - (px * lt.a + py * lt.c);\n    lt.ty = position._y - (px * lt.b + py * lt.d);\n  }\n  // / ///// color related stuff\n  set alpha(value) {\n    if (value === this.localAlpha)\n      return;\n    this.localAlpha = value;\n    this._updateFlags |= UPDATE_COLOR;\n    this._onUpdate();\n  }\n  /** The opacity of the object. */\n  get alpha() {\n    return this.localAlpha;\n  }\n  set tint(value) {\n    const tempColor = Color.shared.setValue(value ?? 16777215);\n    const bgr = tempColor.toBgrNumber();\n    if (bgr === this.localColor)\n      return;\n    this.localColor = bgr;\n    this._updateFlags |= UPDATE_COLOR;\n    this._onUpdate();\n  }\n  /**\n   * The tint applied to the sprite. This is a hex value.\n   *\n   * A value of 0xFFFFFF will remove any tint effect.\n   * @default 0xFFFFFF\n   */\n  get tint() {\n    return bgr2rgb(this.localColor);\n  }\n  // / //////////////// blend related stuff\n  set blendMode(value) {\n    if (this.localBlendMode === value)\n      return;\n    if (this.parentRenderGroup) {\n      this.parentRenderGroup.structureDidChange = true;\n    }\n    this._updateFlags |= UPDATE_BLEND;\n    this.localBlendMode = value;\n    this._onUpdate();\n  }\n  /**\n   * The blend mode to be applied to the sprite. Apply a value of `'normal'` to reset the blend mode.\n   * @default 'normal'\n   */\n  get blendMode() {\n    return this.localBlendMode;\n  }\n  // / ///////// VISIBILITY / RENDERABLE /////////////////\n  /** The visibility of the object. If false the object will not be drawn, and the transform will not be updated. */\n  get visible() {\n    return !!(this.localDisplayStatus & 2);\n  }\n  set visible(value) {\n    const valueNumber = value ? 2 : 0;\n    if ((this.localDisplayStatus & 2) === valueNumber)\n      return;\n    if (this.parentRenderGroup) {\n      this.parentRenderGroup.structureDidChange = true;\n    }\n    this._updateFlags |= UPDATE_VISIBLE;\n    this.localDisplayStatus ^= 2;\n    this._onUpdate();\n  }\n  /** @ignore */\n  get culled() {\n    return !(this.localDisplayStatus & 4);\n  }\n  /** @ignore */\n  set culled(value) {\n    const valueNumber = value ? 0 : 4;\n    if ((this.localDisplayStatus & 4) === valueNumber)\n      return;\n    if (this.parentRenderGroup) {\n      this.parentRenderGroup.structureDidChange = true;\n    }\n    this._updateFlags |= UPDATE_VISIBLE;\n    this.localDisplayStatus ^= 4;\n    this._onUpdate();\n  }\n  /** Can this object be rendered, if false the object will not be drawn but the transform will still be updated. */\n  get renderable() {\n    return !!(this.localDisplayStatus & 1);\n  }\n  set renderable(value) {\n    const valueNumber = value ? 1 : 0;\n    if ((this.localDisplayStatus & 1) === valueNumber)\n      return;\n    this._updateFlags |= UPDATE_VISIBLE;\n    this.localDisplayStatus ^= 1;\n    if (this.parentRenderGroup) {\n      this.parentRenderGroup.structureDidChange = true;\n    }\n    this._onUpdate();\n  }\n  /** Whether or not the object should be rendered. */\n  get isRenderable() {\n    return this.localDisplayStatus === 7 && this.groupAlpha > 0;\n  }\n  /**\n   * Removes all internal references and listeners as well as removes children from the display list.\n   * Do not use a Container after calling `destroy`.\n   * @param options - Options parameter. A boolean will act as if all options\n   *  have been set to that value\n   * @param {boolean} [options.children=false] - if set to true, all the children will have their destroy\n   *  method called as well. 'options' will be passed on to those calls.\n   * @param {boolean} [options.texture=false] - Only used for children with textures e.g. Sprites. If options.children\n   * is set to true it should destroy the texture of the child sprite\n   * @param {boolean} [options.textureSource=false] - Only used for children with textures e.g. Sprites.\n   * If options.children is set to true it should destroy the texture source of the child sprite\n   * @param {boolean} [options.context=false] - Only used for children with graphicsContexts e.g. Graphics.\n   * If options.children is set to true it should destroy the context of the child graphics\n   */\n  destroy(options = false) {\n    if (this.destroyed)\n      return;\n    this.destroyed = true;\n    let oldChildren;\n    if (this.children.length) {\n      oldChildren = this.removeChildren(0, this.children.length);\n    }\n    this.removeFromParent();\n    this.parent = null;\n    this._maskEffect = null;\n    this._filterEffect = null;\n    this.effects = null;\n    this._position = null;\n    this._scale = null;\n    this._pivot = null;\n    this._skew = null;\n    this.emit(\"destroyed\", this);\n    this.removeAllListeners();\n    const destroyChildren = typeof options === \"boolean\" ? options : options?.children;\n    if (destroyChildren && oldChildren) {\n      for (let i = 0; i < oldChildren.length; ++i) {\n        oldChildren[i].destroy(options);\n      }\n    }\n    this.renderGroup?.destroy();\n    this.renderGroup = null;\n  }\n}\nextensions.mixin(\n  Container,\n  childrenHelperMixin,\n  getFastGlobalBoundsMixin,\n  toLocalGlobalMixin,\n  onRenderMixin,\n  measureMixin,\n  effectsMixin,\n  findMixin,\n  sortMixin,\n  cullingMixin,\n  cacheAsTextureMixin,\n  getGlobalMixin,\n  collectRenderablesMixin\n);\n\nexport { Container, UPDATE_BLEND, UPDATE_COLOR, UPDATE_TRANSFORM, UPDATE_VISIBLE };\n//# sourceMappingURL=Container.mjs.map\n","import { Bounds } from '../container/bounds/Bounds.mjs';\nimport { Container } from '../container/Container.mjs';\n\n\"use strict\";\nclass ViewContainer extends Container {\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(options) {\n    super(options);\n    /** @private */\n    this.canBundle = true;\n    /** @private */\n    this.allowChildren = false;\n    /** @private */\n    this._roundPixels = 0;\n    /** @private */\n    this._lastUsed = -1;\n    this._bounds = new Bounds(0, 1, 0, 0);\n    this._boundsDirty = true;\n  }\n  /**\n   * The local bounds of the view.\n   * @type {rendering.Bounds}\n   */\n  get bounds() {\n    if (!this._boundsDirty)\n      return this._bounds;\n    this.updateBounds();\n    this._boundsDirty = false;\n    return this._bounds;\n  }\n  /**\n   * Whether or not to round the x/y position of the sprite.\n   * @type {boolean}\n   */\n  get roundPixels() {\n    return !!this._roundPixels;\n  }\n  set roundPixels(value) {\n    this._roundPixels = value ? 1 : 0;\n  }\n  /**\n   * Checks if the object contains the given point.\n   * @param point - The point to check\n   */\n  containsPoint(point) {\n    const bounds = this.bounds;\n    const { x, y } = point;\n    return x >= bounds.minX && x <= bounds.maxX && y >= bounds.minY && y <= bounds.maxY;\n  }\n  /** @private */\n  onViewUpdate() {\n    this._didViewChangeTick++;\n    this._boundsDirty = true;\n    if (this.didViewUpdate)\n      return;\n    this.didViewUpdate = true;\n    const renderGroup = this.renderGroup || this.parentRenderGroup;\n    if (renderGroup) {\n      renderGroup.onChildViewUpdate(this);\n    }\n  }\n  destroy(options) {\n    super.destroy(options);\n    this._bounds = null;\n  }\n  collectRenderablesSimple(instructionSet, renderer, currentLayer) {\n    const { renderPipes, renderableGC } = renderer;\n    renderPipes.blendMode.setBlendMode(this, this.groupBlendMode, instructionSet);\n    const rp = renderPipes;\n    rp[this.renderPipeId].addRenderable(this, instructionSet);\n    renderableGC.addRenderable(this);\n    this.didViewUpdate = false;\n    const children = this.children;\n    const length = children.length;\n    for (let i = 0; i < length; i++) {\n      children[i].collectRenderables(instructionSet, renderer, currentLayer);\n    }\n  }\n}\n\nexport { ViewContainer };\n//# sourceMappingURL=ViewContainer.mjs.map\n","import { ObservablePoint } from '../../maths/point/ObservablePoint.mjs';\nimport { Texture } from '../../rendering/renderers/shared/texture/Texture.mjs';\nimport { updateQuadBounds } from '../../utils/data/updateQuadBounds.mjs';\nimport { deprecation } from '../../utils/logging/deprecation.mjs';\nimport { ViewContainer } from '../view/ViewContainer.mjs';\n\n\"use strict\";\nclass Sprite extends ViewContainer {\n  /**\n   * @param options - The options for creating the sprite.\n   */\n  constructor(options = Texture.EMPTY) {\n    if (options instanceof Texture) {\n      options = { texture: options };\n    }\n    const { texture = Texture.EMPTY, anchor, roundPixels, width, height, ...rest } = options;\n    super({\n      label: \"Sprite\",\n      ...rest\n    });\n    this.renderPipeId = \"sprite\";\n    this.batched = true;\n    this._visualBounds = { minX: 0, maxX: 1, minY: 0, maxY: 0 };\n    this._anchor = new ObservablePoint(\n      {\n        _onUpdate: () => {\n          this.onViewUpdate();\n        }\n      }\n    );\n    if (anchor) {\n      this.anchor = anchor;\n    } else if (texture.defaultAnchor) {\n      this.anchor = texture.defaultAnchor;\n    }\n    this.texture = texture;\n    this.allowChildren = false;\n    this.roundPixels = roundPixels ?? false;\n    if (width !== void 0)\n      this.width = width;\n    if (height !== void 0)\n      this.height = height;\n  }\n  /**\n   * Helper function that creates a new sprite based on the source you provide.\n   * The source can be - frame id, image, video, canvas element, video element, texture\n   * @param source - Source to create texture from\n   * @param [skipCache] - Whether to skip the cache or not\n   * @returns The newly created sprite\n   */\n  static from(source, skipCache = false) {\n    if (source instanceof Texture) {\n      return new Sprite(source);\n    }\n    return new Sprite(Texture.from(source, skipCache));\n  }\n  set texture(value) {\n    value || (value = Texture.EMPTY);\n    const currentTexture = this._texture;\n    if (currentTexture === value)\n      return;\n    if (currentTexture && currentTexture.dynamic)\n      currentTexture.off(\"update\", this.onViewUpdate, this);\n    if (value.dynamic)\n      value.on(\"update\", this.onViewUpdate, this);\n    this._texture = value;\n    if (this._width) {\n      this._setWidth(this._width, this._texture.orig.width);\n    }\n    if (this._height) {\n      this._setHeight(this._height, this._texture.orig.height);\n    }\n    this.onViewUpdate();\n  }\n  /** The texture that the sprite is using. */\n  get texture() {\n    return this._texture;\n  }\n  /**\n   * The bounds of the sprite, taking the texture's trim into account.\n   * @type {rendering.Bounds}\n   */\n  get visualBounds() {\n    updateQuadBounds(this._visualBounds, this._anchor, this._texture);\n    return this._visualBounds;\n  }\n  /**\n   * @deprecated\n   */\n  get sourceBounds() {\n    deprecation(\"8.6.1\", \"Sprite.sourceBounds is deprecated, use visualBounds instead.\");\n    return this.visualBounds;\n  }\n  /** @private */\n  updateBounds() {\n    const anchor = this._anchor;\n    const texture = this._texture;\n    const bounds = this._bounds;\n    const { width, height } = texture.orig;\n    bounds.minX = -anchor._x * width;\n    bounds.maxX = bounds.minX + width;\n    bounds.minY = -anchor._y * height;\n    bounds.maxY = bounds.minY + height;\n  }\n  /**\n   * Destroys this sprite renderable and optionally its texture.\n   * @param options - Options parameter. A boolean will act as if all options\n   *  have been set to that value\n   * @param {boolean} [options.texture=false] - Should it destroy the current texture of the renderable as well\n   * @param {boolean} [options.textureSource=false] - Should it destroy the textureSource of the renderable as well\n   */\n  destroy(options = false) {\n    super.destroy(options);\n    const destroyTexture = typeof options === \"boolean\" ? options : options?.texture;\n    if (destroyTexture) {\n      const destroyTextureSource = typeof options === \"boolean\" ? options : options?.textureSource;\n      this._texture.destroy(destroyTextureSource);\n    }\n    this._texture = null;\n    this._visualBounds = null;\n    this._bounds = null;\n    this._anchor = null;\n  }\n  /**\n   * The anchor sets the origin point of the sprite. The default value is taken from the {@link Texture}\n   * and passed to the constructor.\n   *\n   * The default is `(0,0)`, this means the sprite's origin is the top left.\n   *\n   * Setting the anchor to `(0.5,0.5)` means the sprite's origin is centered.\n   *\n   * Setting the anchor to `(1,1)` would mean the sprite's origin point will be the bottom right corner.\n   *\n   * If you pass only single parameter, it will set both x and y to the same value as shown in the example below.\n   * @example\n   * import { Sprite } from 'pixi.js';\n   *\n   * const sprite = new Sprite({texture: Texture.WHITE});\n   * sprite.anchor.set(0.5); // This will set the origin to center. (0.5) is same as (0.5, 0.5).\n   */\n  get anchor() {\n    return this._anchor;\n  }\n  set anchor(value) {\n    typeof value === \"number\" ? this._anchor.set(value) : this._anchor.copyFrom(value);\n  }\n  /** The width of the sprite, setting this will actually modify the scale to achieve the value set. */\n  get width() {\n    return Math.abs(this.scale.x) * this._texture.orig.width;\n  }\n  set width(value) {\n    this._setWidth(value, this._texture.orig.width);\n    this._width = value;\n  }\n  /** The height of the sprite, setting this will actually modify the scale to achieve the value set. */\n  get height() {\n    return Math.abs(this.scale.y) * this._texture.orig.height;\n  }\n  set height(value) {\n    this._setHeight(value, this._texture.orig.height);\n    this._height = value;\n  }\n  /**\n   * Retrieves the size of the Sprite as a [Size]{@link Size} object.\n   * This is faster than get the width and height separately.\n   * @param out - Optional object to store the size in.\n   * @returns - The size of the Sprite.\n   */\n  getSize(out) {\n    out || (out = {});\n    out.width = Math.abs(this.scale.x) * this._texture.orig.width;\n    out.height = Math.abs(this.scale.y) * this._texture.orig.height;\n    return out;\n  }\n  /**\n   * Sets the size of the Sprite to the specified width and height.\n   * This is faster than setting the width and height separately.\n   * @param value - This can be either a number or a [Size]{@link Size} object.\n   * @param height - The height to set. Defaults to the value of `width` if not provided.\n   */\n  setSize(value, height) {\n    if (typeof value === \"object\") {\n      height = value.height ?? value.width;\n      value = value.width;\n    } else {\n      height ?? (height = value);\n    }\n    value !== void 0 && this._setWidth(value, this._texture.orig.width);\n    height !== void 0 && this._setHeight(height, this._texture.orig.height);\n  }\n}\n\nexport { Sprite };\n//# sourceMappingURL=Sprite.mjs.map\n","import { Bounds } from '../../../scene/container/bounds/Bounds.mjs';\nimport { getGlobalBounds } from '../../../scene/container/bounds/getGlobalBounds.mjs';\n\n\"use strict\";\nconst tempBounds = new Bounds();\nfunction addMaskBounds(mask, bounds, skipUpdateTransform) {\n  const boundsToMask = tempBounds;\n  mask.measurable = true;\n  getGlobalBounds(mask, skipUpdateTransform, boundsToMask);\n  bounds.addBoundsMask(boundsToMask);\n  mask.measurable = false;\n}\n\nexport { addMaskBounds };\n//# sourceMappingURL=addMaskBounds.mjs.map\n","import { getLocalBounds } from '../../../scene/container/bounds/getLocalBounds.mjs';\nimport { boundsPool, matrixPool } from '../../../scene/container/bounds/utils/matrixAndBoundsPool.mjs';\nimport { warn } from '../../../utils/logging/warn.mjs';\n\n\"use strict\";\nfunction addMaskLocalBounds(mask, bounds, localRoot) {\n  const boundsToMask = boundsPool.get();\n  mask.measurable = true;\n  const tempMatrix = matrixPool.get().identity();\n  const relativeMask = getMatrixRelativeToParent(mask, localRoot, tempMatrix);\n  getLocalBounds(mask, boundsToMask, relativeMask);\n  mask.measurable = false;\n  bounds.addBoundsMask(boundsToMask);\n  matrixPool.return(tempMatrix);\n  boundsPool.return(boundsToMask);\n}\nfunction getMatrixRelativeToParent(target, root, matrix) {\n  if (!target) {\n    warn(\"Mask bounds, renderable is not inside the root container\");\n    return matrix;\n  }\n  if (target !== root) {\n    getMatrixRelativeToParent(target.parent, root, matrix);\n    target.updateLocalTransform();\n    matrix.append(target.localTransform);\n  }\n  return matrix;\n}\n\nexport { addMaskLocalBounds, getMatrixRelativeToParent };\n//# sourceMappingURL=addMaskLocalBounds.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { Sprite } from '../../../scene/sprite/Sprite.mjs';\nimport { addMaskBounds } from '../utils/addMaskBounds.mjs';\nimport { addMaskLocalBounds } from '../utils/addMaskLocalBounds.mjs';\n\n\"use strict\";\nclass AlphaMask {\n  constructor(options) {\n    this.priority = 0;\n    this.inverse = false;\n    this.pipe = \"alphaMask\";\n    if (options?.mask) {\n      this.init(options.mask);\n    }\n  }\n  init(mask) {\n    this.mask = mask;\n    this.renderMaskToTexture = !(mask instanceof Sprite);\n    this.mask.renderable = this.renderMaskToTexture;\n    this.mask.includeInBuild = !this.renderMaskToTexture;\n    this.mask.measurable = false;\n  }\n  reset() {\n    this.mask.measurable = true;\n    this.mask = null;\n  }\n  addBounds(bounds, skipUpdateTransform) {\n    if (!this.inverse) {\n      addMaskBounds(this.mask, bounds, skipUpdateTransform);\n    }\n  }\n  addLocalBounds(bounds, localRoot) {\n    addMaskLocalBounds(this.mask, bounds, localRoot);\n  }\n  containsPoint(point, hitTestFn) {\n    const mask = this.mask;\n    return hitTestFn(mask, point);\n  }\n  destroy() {\n    this.reset();\n  }\n  static test(mask) {\n    return mask instanceof Sprite;\n  }\n}\nAlphaMask.extension = ExtensionType.MaskEffect;\n\nexport { AlphaMask };\n//# sourceMappingURL=AlphaMask.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\n\n\"use strict\";\nclass ColorMask {\n  constructor(options) {\n    this.priority = 0;\n    this.pipe = \"colorMask\";\n    if (options?.mask) {\n      this.init(options.mask);\n    }\n  }\n  init(mask) {\n    this.mask = mask;\n  }\n  destroy() {\n  }\n  static test(mask) {\n    return typeof mask === \"number\";\n  }\n}\nColorMask.extension = ExtensionType.MaskEffect;\n\nexport { ColorMask };\n//# sourceMappingURL=ColorMask.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { Container } from '../../../scene/container/Container.mjs';\nimport { addMaskBounds } from '../utils/addMaskBounds.mjs';\nimport { addMaskLocalBounds } from '../utils/addMaskLocalBounds.mjs';\n\n\"use strict\";\nclass StencilMask {\n  constructor(options) {\n    this.priority = 0;\n    this.pipe = \"stencilMask\";\n    if (options?.mask) {\n      this.init(options.mask);\n    }\n  }\n  init(mask) {\n    this.mask = mask;\n    this.mask.includeInBuild = false;\n    this.mask.measurable = false;\n  }\n  reset() {\n    this.mask.measurable = true;\n    this.mask.includeInBuild = true;\n    this.mask = null;\n  }\n  addBounds(bounds, skipUpdateTransform) {\n    addMaskBounds(this.mask, bounds, skipUpdateTransform);\n  }\n  addLocalBounds(bounds, localRoot) {\n    addMaskLocalBounds(this.mask, bounds, localRoot);\n  }\n  containsPoint(point, hitTestFn) {\n    const mask = this.mask;\n    return hitTestFn(mask, point);\n  }\n  destroy() {\n    this.reset();\n  }\n  static test(mask) {\n    return mask instanceof Container;\n  }\n}\nStencilMask.extension = ExtensionType.MaskEffect;\n\nexport { StencilMask };\n//# sourceMappingURL=StencilMask.mjs.map\n","\"use strict\";\nconst BrowserAdapter = {\n  createCanvas: (width, height) => {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n  },\n  getCanvasRenderingContext2D: () => CanvasRenderingContext2D,\n  getWebGLRenderingContext: () => WebGLRenderingContext,\n  getNavigator: () => navigator,\n  getBaseUrl: () => document.baseURI ?? window.location.href,\n  getFontFaceSet: () => document.fonts,\n  fetch: (url, options) => fetch(url, options),\n  parseXML: (xml) => {\n    const parser = new DOMParser();\n    return parser.parseFromString(xml, \"text/xml\");\n  }\n};\n\nexport { BrowserAdapter };\n//# sourceMappingURL=BrowserAdapter.mjs.map\n","import { BrowserAdapter } from '../environment-browser/BrowserAdapter.mjs';\n\n\"use strict\";\nlet currentAdapter = BrowserAdapter;\nconst DOMAdapter = {\n  /**\n   * Returns the current adapter.\n   * @returns {environment.Adapter} The current adapter.\n   */\n  get() {\n    return currentAdapter;\n  },\n  /**\n   * Sets the current adapter.\n   * @param adapter - The new adapter.\n   */\n  set(adapter) {\n    currentAdapter = adapter;\n  }\n};\n\nexport { DOMAdapter };\n//# sourceMappingURL=adapter.mjs.map\n","import { DOMAdapter } from '../../../../../environment/adapter.mjs';\nimport { ExtensionType } from '../../../../../extensions/Extensions.mjs';\nimport { TextureSource } from './TextureSource.mjs';\n\n\"use strict\";\nclass CanvasSource extends TextureSource {\n  constructor(options) {\n    if (!options.resource) {\n      options.resource = DOMAdapter.get().createCanvas();\n    }\n    if (!options.width) {\n      options.width = options.resource.width;\n      if (!options.autoDensity) {\n        options.width /= options.resolution;\n      }\n    }\n    if (!options.height) {\n      options.height = options.resource.height;\n      if (!options.autoDensity) {\n        options.height /= options.resolution;\n      }\n    }\n    super(options);\n    this.uploadMethodId = \"image\";\n    this.autoDensity = options.autoDensity;\n    this.resizeCanvas();\n    this.transparent = !!options.transparent;\n  }\n  resizeCanvas() {\n    if (this.autoDensity && \"style\" in this.resource) {\n      this.resource.style.width = `${this.width}px`;\n      this.resource.style.height = `${this.height}px`;\n    }\n    if (this.resource.width !== this.pixelWidth || this.resource.height !== this.pixelHeight) {\n      this.resource.width = this.pixelWidth;\n      this.resource.height = this.pixelHeight;\n    }\n  }\n  resize(width = this.width, height = this.height, resolution = this._resolution) {\n    const didResize = super.resize(width, height, resolution);\n    if (didResize) {\n      this.resizeCanvas();\n    }\n    return didResize;\n  }\n  static test(resource) {\n    return globalThis.HTMLCanvasElement && resource instanceof HTMLCanvasElement || globalThis.OffscreenCanvas && resource instanceof OffscreenCanvas;\n  }\n  /**\n   * Returns the 2D rendering context for the canvas.\n   * Caches the context after creating it.\n   * @returns The 2D rendering context of the canvas.\n   */\n  get context2D() {\n    return this._context2D || (this._context2D = this.resource.getContext(\"2d\"));\n  }\n}\nCanvasSource.extension = ExtensionType.TextureSource;\n\nexport { CanvasSource };\n//# sourceMappingURL=CanvasSource.mjs.map\n","import { DOMAdapter } from '../../../../../environment/adapter.mjs';\nimport { ExtensionType } from '../../../../../extensions/Extensions.mjs';\nimport { warn } from '../../../../../utils/logging/warn.mjs';\nimport { TextureSource } from './TextureSource.mjs';\n\n\"use strict\";\nclass ImageSource extends TextureSource {\n  constructor(options) {\n    if (options.resource && (globalThis.HTMLImageElement && options.resource instanceof HTMLImageElement)) {\n      const canvas = DOMAdapter.get().createCanvas(options.resource.width, options.resource.height);\n      const context = canvas.getContext(\"2d\");\n      context.drawImage(options.resource, 0, 0, options.resource.width, options.resource.height);\n      options.resource = canvas;\n      warn(\"ImageSource: Image element passed, converting to canvas. Use CanvasSource instead.\");\n    }\n    super(options);\n    this.uploadMethodId = \"image\";\n    this.autoGarbageCollect = true;\n  }\n  static test(resource) {\n    return globalThis.HTMLImageElement && resource instanceof HTMLImageElement || typeof ImageBitmap !== \"undefined\" && resource instanceof ImageBitmap || globalThis.VideoFrame && resource instanceof VideoFrame;\n  }\n}\nImageSource.extension = ExtensionType.TextureSource;\n\nexport { ImageSource };\n//# sourceMappingURL=ImageSource.mjs.map\n","\"use strict\";\nvar UPDATE_PRIORITY = /* @__PURE__ */ ((UPDATE_PRIORITY2) => {\n  UPDATE_PRIORITY2[UPDATE_PRIORITY2[\"INTERACTION\"] = 50] = \"INTERACTION\";\n  UPDATE_PRIORITY2[UPDATE_PRIORITY2[\"HIGH\"] = 25] = \"HIGH\";\n  UPDATE_PRIORITY2[UPDATE_PRIORITY2[\"NORMAL\"] = 0] = \"NORMAL\";\n  UPDATE_PRIORITY2[UPDATE_PRIORITY2[\"LOW\"] = -25] = \"LOW\";\n  UPDATE_PRIORITY2[UPDATE_PRIORITY2[\"UTILITY\"] = -50] = \"UTILITY\";\n  return UPDATE_PRIORITY2;\n})(UPDATE_PRIORITY || {});\n\nexport { UPDATE_PRIORITY };\n//# sourceMappingURL=const.mjs.map\n","\"use strict\";\nclass TickerListener {\n  /**\n   * Constructor\n   * @private\n   * @param fn - The listener function to be added for one update\n   * @param context - The listener context\n   * @param priority - The priority for emitting\n   * @param once - If the handler should fire once\n   */\n  constructor(fn, context = null, priority = 0, once = false) {\n    /** The next item in chain. */\n    this.next = null;\n    /** The previous item in chain. */\n    this.previous = null;\n    /** `true` if this listener has been destroyed already. */\n    this._destroyed = false;\n    this._fn = fn;\n    this._context = context;\n    this.priority = priority;\n    this._once = once;\n  }\n  /**\n   * Simple compare function to figure out if a function and context match.\n   * @param fn - The listener function to be added for one update\n   * @param context - The listener context\n   * @returns `true` if the listener match the arguments\n   */\n  match(fn, context = null) {\n    return this._fn === fn && this._context === context;\n  }\n  /**\n   * Emit by calling the current function.\n   * @param ticker - The ticker emitting.\n   * @returns Next ticker\n   */\n  emit(ticker) {\n    if (this._fn) {\n      if (this._context) {\n        this._fn.call(this._context, ticker);\n      } else {\n        this._fn(ticker);\n      }\n    }\n    const redirect = this.next;\n    if (this._once) {\n      this.destroy(true);\n    }\n    if (this._destroyed) {\n      this.next = null;\n    }\n    return redirect;\n  }\n  /**\n   * Connect to the list.\n   * @param previous - Input node, previous listener\n   */\n  connect(previous) {\n    this.previous = previous;\n    if (previous.next) {\n      previous.next.previous = this;\n    }\n    this.next = previous.next;\n    previous.next = this;\n  }\n  /**\n   * Destroy and don't use after this.\n   * @param hard - `true` to remove the `next` reference, this\n   *        is considered a hard destroy. Soft destroy maintains the next reference.\n   * @returns The listener to redirect while emitting or removing.\n   */\n  destroy(hard = false) {\n    this._destroyed = true;\n    this._fn = null;\n    this._context = null;\n    if (this.previous) {\n      this.previous.next = this.next;\n    }\n    if (this.next) {\n      this.next.previous = this.previous;\n    }\n    const redirect = this.next;\n    this.next = hard ? null : redirect;\n    this.previous = null;\n    return redirect;\n  }\n}\n\nexport { TickerListener };\n//# sourceMappingURL=TickerListener.mjs.map\n","import { UPDATE_PRIORITY } from './const.mjs';\nimport { TickerListener } from './TickerListener.mjs';\n\n\"use strict\";\nconst _Ticker = class _Ticker {\n  constructor() {\n    /**\n     * Whether or not this ticker should invoke the method\n     * {@link ticker.Ticker#start|start} automatically when a listener is added.\n     */\n    this.autoStart = false;\n    /**\n     * Scalar time value from last frame to this frame.\n     * This value is capped by setting {@link ticker.Ticker#minFPS|minFPS}\n     * and is scaled with {@link ticker.Ticker#speed|speed}.\n     * **Note:** The cap may be exceeded by scaling.\n     */\n    this.deltaTime = 1;\n    /**\n     * The last time {@link ticker.Ticker#update|update} was invoked.\n     * This value is also reset internally outside of invoking\n     * update, but only when a new animation frame is requested.\n     * If the platform supports DOMHighResTimeStamp,\n     * this value will have a precision of 1 µs.\n     */\n    this.lastTime = -1;\n    /**\n     * Factor of current {@link ticker.Ticker#deltaTime|deltaTime}.\n     * @example\n     * // Scales ticker.deltaTime to what would be\n     * // the equivalent of approximately 120 FPS\n     * ticker.speed = 2;\n     */\n    this.speed = 1;\n    /**\n     * Whether or not this ticker has been started.\n     * `true` if {@link ticker.Ticker#start|start} has been called.\n     * `false` if {@link ticker.Ticker#stop|Stop} has been called.\n     * While `false`, this value may change to `true` in the\n     * event of {@link ticker.Ticker#autoStart|autoStart} being `true`\n     * and a listener is added.\n     */\n    this.started = false;\n    /** Internal current frame request ID */\n    this._requestId = null;\n    /**\n     * Internal value managed by minFPS property setter and getter.\n     * This is the maximum allowed milliseconds between updates.\n     */\n    this._maxElapsedMS = 100;\n    /**\n     * Internal value managed by minFPS property setter and getter.\n     * This is the minimum allowed milliseconds between updates.\n     */\n    this._minElapsedMS = 0;\n    /** If enabled, deleting is disabled.*/\n    this._protected = false;\n    /** The last time keyframe was executed. Maintains a relatively fixed interval with the previous value. */\n    this._lastFrame = -1;\n    this._head = new TickerListener(null, null, Infinity);\n    this.deltaMS = 1 / _Ticker.targetFPMS;\n    this.elapsedMS = 1 / _Ticker.targetFPMS;\n    this._tick = (time) => {\n      this._requestId = null;\n      if (this.started) {\n        this.update(time);\n        if (this.started && this._requestId === null && this._head.next) {\n          this._requestId = requestAnimationFrame(this._tick);\n        }\n      }\n    };\n  }\n  /**\n   * Conditionally requests a new animation frame.\n   * If a frame has not already been requested, and if the internal\n   * emitter has listeners, a new frame is requested.\n   * @private\n   */\n  _requestIfNeeded() {\n    if (this._requestId === null && this._head.next) {\n      this.lastTime = performance.now();\n      this._lastFrame = this.lastTime;\n      this._requestId = requestAnimationFrame(this._tick);\n    }\n  }\n  /**\n   * Conditionally cancels a pending animation frame.\n   * @private\n   */\n  _cancelIfNeeded() {\n    if (this._requestId !== null) {\n      cancelAnimationFrame(this._requestId);\n      this._requestId = null;\n    }\n  }\n  /**\n   * Conditionally requests a new animation frame.\n   * If the ticker has been started it checks if a frame has not already\n   * been requested, and if the internal emitter has listeners. If these\n   * conditions are met, a new frame is requested. If the ticker has not\n   * been started, but autoStart is `true`, then the ticker starts now,\n   * and continues with the previous conditions to request a new frame.\n   * @private\n   */\n  _startIfPossible() {\n    if (this.started) {\n      this._requestIfNeeded();\n    } else if (this.autoStart) {\n      this.start();\n    }\n  }\n  /**\n   * Register a handler for tick events. Calls continuously unless\n   * it is removed or the ticker is stopped.\n   * @param fn - The listener function to be added for updates\n   * @param context - The listener context\n   * @param {number} [priority=UPDATE_PRIORITY.NORMAL] - The priority for emitting\n   * @returns This instance of a ticker\n   */\n  add(fn, context, priority = UPDATE_PRIORITY.NORMAL) {\n    return this._addListener(new TickerListener(fn, context, priority));\n  }\n  /**\n   * Add a handler for the tick event which is only execute once.\n   * @param fn - The listener function to be added for one update\n   * @param context - The listener context\n   * @param {number} [priority=UPDATE_PRIORITY.NORMAL] - The priority for emitting\n   * @returns This instance of a ticker\n   */\n  addOnce(fn, context, priority = UPDATE_PRIORITY.NORMAL) {\n    return this._addListener(new TickerListener(fn, context, priority, true));\n  }\n  /**\n   * Internally adds the event handler so that it can be sorted by priority.\n   * Priority allows certain handler (user, AnimatedSprite, Interaction) to be run\n   * before the rendering.\n   * @private\n   * @param listener - Current listener being added.\n   * @returns This instance of a ticker\n   */\n  _addListener(listener) {\n    let current = this._head.next;\n    let previous = this._head;\n    if (!current) {\n      listener.connect(previous);\n    } else {\n      while (current) {\n        if (listener.priority > current.priority) {\n          listener.connect(previous);\n          break;\n        }\n        previous = current;\n        current = current.next;\n      }\n      if (!listener.previous) {\n        listener.connect(previous);\n      }\n    }\n    this._startIfPossible();\n    return this;\n  }\n  /**\n   * Removes any handlers matching the function and context parameters.\n   * If no handlers are left after removing, then it cancels the animation frame.\n   * @param fn - The listener function to be removed\n   * @param context - The listener context to be removed\n   * @returns This instance of a ticker\n   */\n  remove(fn, context) {\n    let listener = this._head.next;\n    while (listener) {\n      if (listener.match(fn, context)) {\n        listener = listener.destroy();\n      } else {\n        listener = listener.next;\n      }\n    }\n    if (!this._head.next) {\n      this._cancelIfNeeded();\n    }\n    return this;\n  }\n  /**\n   * The number of listeners on this ticker, calculated by walking through linked list\n   * @readonly\n   * @member {number}\n   */\n  get count() {\n    if (!this._head) {\n      return 0;\n    }\n    let count = 0;\n    let current = this._head;\n    while (current = current.next) {\n      count++;\n    }\n    return count;\n  }\n  /** Starts the ticker. If the ticker has listeners a new animation frame is requested at this point. */\n  start() {\n    if (!this.started) {\n      this.started = true;\n      this._requestIfNeeded();\n    }\n  }\n  /** Stops the ticker. If the ticker has requested an animation frame it is canceled at this point. */\n  stop() {\n    if (this.started) {\n      this.started = false;\n      this._cancelIfNeeded();\n    }\n  }\n  /** Destroy the ticker and don't use after this. Calling this method removes all references to internal events. */\n  destroy() {\n    if (!this._protected) {\n      this.stop();\n      let listener = this._head.next;\n      while (listener) {\n        listener = listener.destroy(true);\n      }\n      this._head.destroy();\n      this._head = null;\n    }\n  }\n  /**\n   * Triggers an update. An update entails setting the\n   * current {@link ticker.Ticker#elapsedMS|elapsedMS},\n   * the current {@link ticker.Ticker#deltaTime|deltaTime},\n   * invoking all listeners with current deltaTime,\n   * and then finally setting {@link ticker.Ticker#lastTime|lastTime}\n   * with the value of currentTime that was provided.\n   * This method will be called automatically by animation\n   * frame callbacks if the ticker instance has been started\n   * and listeners are added.\n   * @param {number} [currentTime=performance.now()] - the current time of execution\n   */\n  update(currentTime = performance.now()) {\n    let elapsedMS;\n    if (currentTime > this.lastTime) {\n      elapsedMS = this.elapsedMS = currentTime - this.lastTime;\n      if (elapsedMS > this._maxElapsedMS) {\n        elapsedMS = this._maxElapsedMS;\n      }\n      elapsedMS *= this.speed;\n      if (this._minElapsedMS) {\n        const delta = currentTime - this._lastFrame | 0;\n        if (delta < this._minElapsedMS) {\n          return;\n        }\n        this._lastFrame = currentTime - delta % this._minElapsedMS;\n      }\n      this.deltaMS = elapsedMS;\n      this.deltaTime = this.deltaMS * _Ticker.targetFPMS;\n      const head = this._head;\n      let listener = head.next;\n      while (listener) {\n        listener = listener.emit(this);\n      }\n      if (!head.next) {\n        this._cancelIfNeeded();\n      }\n    } else {\n      this.deltaTime = this.deltaMS = this.elapsedMS = 0;\n    }\n    this.lastTime = currentTime;\n  }\n  /**\n   * The frames per second at which this ticker is running.\n   * The default is approximately 60 in most modern browsers.\n   * **Note:** This does not factor in the value of\n   * {@link ticker.Ticker#speed|speed}, which is specific\n   * to scaling {@link ticker.Ticker#deltaTime|deltaTime}.\n   * @member {number}\n   * @readonly\n   */\n  get FPS() {\n    return 1e3 / this.elapsedMS;\n  }\n  /**\n   * Manages the maximum amount of milliseconds allowed to\n   * elapse between invoking {@link ticker.Ticker#update|update}.\n   * This value is used to cap {@link ticker.Ticker#deltaTime|deltaTime},\n   * but does not effect the measured value of {@link ticker.Ticker#FPS|FPS}.\n   * When setting this property it is clamped to a value between\n   * `0` and `Ticker.targetFPMS * 1000`.\n   * @member {number}\n   * @default 10\n   */\n  get minFPS() {\n    return 1e3 / this._maxElapsedMS;\n  }\n  set minFPS(fps) {\n    const minFPS = Math.min(this.maxFPS, fps);\n    const minFPMS = Math.min(Math.max(0, minFPS) / 1e3, _Ticker.targetFPMS);\n    this._maxElapsedMS = 1 / minFPMS;\n  }\n  /**\n   * Manages the minimum amount of milliseconds required to\n   * elapse between invoking {@link ticker.Ticker#update|update}.\n   * This will effect the measured value of {@link ticker.Ticker#FPS|FPS}.\n   * If it is set to `0`, then there is no limit; PixiJS will render as many frames as it can.\n   * Otherwise it will be at least `minFPS`\n   * @member {number}\n   * @default 0\n   */\n  get maxFPS() {\n    if (this._minElapsedMS) {\n      return Math.round(1e3 / this._minElapsedMS);\n    }\n    return 0;\n  }\n  set maxFPS(fps) {\n    if (fps === 0) {\n      this._minElapsedMS = 0;\n    } else {\n      const maxFPS = Math.max(this.minFPS, fps);\n      this._minElapsedMS = 1 / (maxFPS / 1e3);\n    }\n  }\n  /**\n   * The shared ticker instance used by {@link AnimatedSprite} and by\n   * {@link VideoResource} to update animation frames / video textures.\n   *\n   * It may also be used by {@link Application} if created with the `sharedTicker` option property set to true.\n   *\n   * The property {@link ticker.Ticker#autoStart|autoStart} is set to `true` for this instance.\n   * Please follow the examples for usage, including how to opt-out of auto-starting the shared ticker.\n   * @example\n   * import { Ticker } from 'pixi.js';\n   *\n   * const ticker = Ticker.shared;\n   * // Set this to prevent starting this ticker when listeners are added.\n   * // By default this is true only for the Ticker.shared instance.\n   * ticker.autoStart = false;\n   *\n   * // FYI, call this to ensure the ticker is stopped. It should be stopped\n   * // if you have not attempted to render anything yet.\n   * ticker.stop();\n   *\n   * // Call this when you are ready for a running shared ticker.\n   * ticker.start();\n   * @example\n   * import { autoDetectRenderer, Container } from 'pixi.js';\n   *\n   * // You may use the shared ticker to render...\n   * const renderer = autoDetectRenderer();\n   * const stage = new Container();\n   * document.body.appendChild(renderer.view);\n   * ticker.add((time) => renderer.render(stage));\n   *\n   * // Or you can just update it manually.\n   * ticker.autoStart = false;\n   * ticker.stop();\n   * const animate = (time) => {\n   *     ticker.update(time);\n   *     renderer.render(stage);\n   *     requestAnimationFrame(animate);\n   * };\n   * animate(performance.now());\n   * @member {ticker.Ticker}\n   * @readonly\n   * @static\n   */\n  static get shared() {\n    if (!_Ticker._shared) {\n      const shared = _Ticker._shared = new _Ticker();\n      shared.autoStart = true;\n      shared._protected = true;\n    }\n    return _Ticker._shared;\n  }\n  /**\n   * The system ticker instance used by {@link BasePrepare} for core timing\n   * functionality that shouldn't usually need to be paused, unlike the `shared`\n   * ticker which drives visual animations and rendering which may want to be paused.\n   *\n   * The property {@link ticker.Ticker#autoStart|autoStart} is set to `true` for this instance.\n   * @member {ticker.Ticker}\n   * @readonly\n   * @static\n   */\n  static get system() {\n    if (!_Ticker._system) {\n      const system = _Ticker._system = new _Ticker();\n      system.autoStart = true;\n      system._protected = true;\n    }\n    return _Ticker._system;\n  }\n};\n/**\n * Target frames per millisecond.\n * @static\n */\n_Ticker.targetFPMS = 0.06;\nlet Ticker = _Ticker;\n\nexport { Ticker };\n//# sourceMappingURL=Ticker.mjs.map\n","\"use strict\";\nlet promise;\nasync function detectVideoAlphaMode() {\n  promise ?? (promise = (async () => {\n    const canvas = document.createElement(\"canvas\");\n    const gl = canvas.getContext(\"webgl\");\n    if (!gl) {\n      return \"premultiply-alpha-on-upload\";\n    }\n    const video = await new Promise((resolve) => {\n      const video2 = document.createElement(\"video\");\n      video2.onloadeddata = () => resolve(video2);\n      video2.onerror = () => resolve(null);\n      video2.autoplay = false;\n      video2.crossOrigin = \"anonymous\";\n      video2.preload = \"auto\";\n      video2.src = \"data:video/webm;base64,GkXfo59ChoEBQveBAULygQRC84EIQoKEd2VibUKHgQJChYECGFOAZwEAAAAAAAHTEU2bdLpNu4tTq4QVSalmU6yBoU27i1OrhBZUrmtTrIHGTbuMU6uEElTDZ1OsggEXTbuMU6uEHFO7a1OsggG97AEAAAAAAABZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVSalmoCrXsYMPQkBNgIRMYXZmV0GETGF2ZkSJiEBEAAAAAAAAFlSua8yuAQAAAAAAAEPXgQFzxYgAAAAAAAAAAZyBACK1nIN1bmSIgQCGhVZfVlA5g4EBI+ODhAJiWgDglLCBArqBApqBAlPAgQFVsIRVuYEBElTDZ9Vzc9JjwItjxYgAAAAAAAAAAWfInEWjh0VOQ09ERVJEh49MYXZjIGxpYnZweC12cDlnyKJFo4hEVVJBVElPTkSHlDAwOjAwOjAwLjA0MDAwMDAwMAAAH0O2dcfngQCgwqGggQAAAIJJg0IAABAAFgA4JBwYSgAAICAAEb///4r+AAB1oZ2mm+6BAaWWgkmDQgAAEAAWADgkHBhKAAAgIABIQBxTu2uRu4+zgQC3iveBAfGCAXHwgQM=\";\n      video2.load();\n    });\n    if (!video) {\n      return \"premultiply-alpha-on-upload\";\n    }\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    const framebuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      texture,\n      0\n    );\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n    gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, gl.NONE);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, video);\n    const pixel = new Uint8Array(4);\n    gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixel);\n    gl.deleteFramebuffer(framebuffer);\n    gl.deleteTexture(texture);\n    gl.getExtension(\"WEBGL_lose_context\")?.loseContext();\n    return pixel[0] <= pixel[3] ? \"premultiplied-alpha\" : \"premultiply-alpha-on-upload\";\n  })());\n  return promise;\n}\n\nexport { detectVideoAlphaMode };\n//# sourceMappingURL=detectVideoAlphaMode.mjs.map\n","import { ExtensionType } from '../../../../../extensions/Extensions.mjs';\nimport { Ticker } from '../../../../../ticker/Ticker.mjs';\nimport { detectVideoAlphaMode } from '../../../../../utils/browser/detectVideoAlphaMode.mjs';\nimport { TextureSource } from './TextureSource.mjs';\n\n\"use strict\";\nconst _VideoSource = class _VideoSource extends TextureSource {\n  constructor(options) {\n    super(options);\n    // Public\n    /** Whether or not the video is ready to play. */\n    this.isReady = false;\n    /** The upload method for this texture. */\n    this.uploadMethodId = \"video\";\n    options = {\n      ..._VideoSource.defaultOptions,\n      ...options\n    };\n    this._autoUpdate = true;\n    this._isConnectedToTicker = false;\n    this._updateFPS = options.updateFPS || 0;\n    this._msToNextUpdate = 0;\n    this.autoPlay = options.autoPlay !== false;\n    this.alphaMode = options.alphaMode ?? \"premultiply-alpha-on-upload\";\n    this._videoFrameRequestCallback = this._videoFrameRequestCallback.bind(this);\n    this._videoFrameRequestCallbackHandle = null;\n    this._load = null;\n    this._resolve = null;\n    this._reject = null;\n    this._onCanPlay = this._onCanPlay.bind(this);\n    this._onCanPlayThrough = this._onCanPlayThrough.bind(this);\n    this._onError = this._onError.bind(this);\n    this._onPlayStart = this._onPlayStart.bind(this);\n    this._onPlayStop = this._onPlayStop.bind(this);\n    this._onSeeked = this._onSeeked.bind(this);\n    if (options.autoLoad !== false) {\n      void this.load();\n    }\n  }\n  /** Update the video frame if the source is not destroyed and meets certain conditions. */\n  updateFrame() {\n    if (this.destroyed) {\n      return;\n    }\n    if (this._updateFPS) {\n      const elapsedMS = Ticker.shared.elapsedMS * this.resource.playbackRate;\n      this._msToNextUpdate = Math.floor(this._msToNextUpdate - elapsedMS);\n    }\n    if (!this._updateFPS || this._msToNextUpdate <= 0) {\n      this._msToNextUpdate = this._updateFPS ? Math.floor(1e3 / this._updateFPS) : 0;\n    }\n    if (this.isValid) {\n      this.update();\n    }\n  }\n  /** Callback to update the video frame and potentially request the next frame update. */\n  _videoFrameRequestCallback() {\n    this.updateFrame();\n    if (this.destroyed) {\n      this._videoFrameRequestCallbackHandle = null;\n    } else {\n      this._videoFrameRequestCallbackHandle = this.resource.requestVideoFrameCallback(\n        this._videoFrameRequestCallback\n      );\n    }\n  }\n  /**\n   * Checks if the resource has valid dimensions.\n   * @returns {boolean} True if width and height are set, otherwise false.\n   */\n  get isValid() {\n    return !!this.resource.videoWidth && !!this.resource.videoHeight;\n  }\n  /**\n   * Start preloading the video resource.\n   * @returns {Promise<this>} Handle the validate event\n   */\n  async load() {\n    if (this._load) {\n      return this._load;\n    }\n    const source = this.resource;\n    const options = this.options;\n    if ((source.readyState === source.HAVE_ENOUGH_DATA || source.readyState === source.HAVE_FUTURE_DATA) && source.width && source.height) {\n      source.complete = true;\n    }\n    source.addEventListener(\"play\", this._onPlayStart);\n    source.addEventListener(\"pause\", this._onPlayStop);\n    source.addEventListener(\"seeked\", this._onSeeked);\n    if (!this._isSourceReady()) {\n      if (!options.preload) {\n        source.addEventListener(\"canplay\", this._onCanPlay);\n      }\n      source.addEventListener(\"canplaythrough\", this._onCanPlayThrough);\n      source.addEventListener(\"error\", this._onError, true);\n    } else {\n      this._mediaReady();\n    }\n    this.alphaMode = await detectVideoAlphaMode();\n    this._load = new Promise((resolve, reject) => {\n      if (this.isValid) {\n        resolve(this);\n      } else {\n        this._resolve = resolve;\n        this._reject = reject;\n        if (options.preloadTimeoutMs !== void 0) {\n          this._preloadTimeout = setTimeout(() => {\n            this._onError(new ErrorEvent(`Preload exceeded timeout of ${options.preloadTimeoutMs}ms`));\n          });\n        }\n        source.load();\n      }\n    });\n    return this._load;\n  }\n  /**\n   * Handle video error events.\n   * @param event - The error event\n   */\n  _onError(event) {\n    this.resource.removeEventListener(\"error\", this._onError, true);\n    this.emit(\"error\", event);\n    if (this._reject) {\n      this._reject(event);\n      this._reject = null;\n      this._resolve = null;\n    }\n  }\n  /**\n   * Checks if the underlying source is playing.\n   * @returns True if playing.\n   */\n  _isSourcePlaying() {\n    const source = this.resource;\n    return !source.paused && !source.ended;\n  }\n  /**\n   * Checks if the underlying source is ready for playing.\n   * @returns True if ready.\n   */\n  _isSourceReady() {\n    const source = this.resource;\n    return source.readyState > 2;\n  }\n  /** Runs the update loop when the video is ready to play. */\n  _onPlayStart() {\n    if (!this.isValid) {\n      this._mediaReady();\n    }\n    this._configureAutoUpdate();\n  }\n  /** Stops the update loop when a pause event is triggered. */\n  _onPlayStop() {\n    this._configureAutoUpdate();\n  }\n  /** Handles behavior when the video completes seeking to the current playback position. */\n  _onSeeked() {\n    if (this._autoUpdate && !this._isSourcePlaying()) {\n      this._msToNextUpdate = 0;\n      this.updateFrame();\n      this._msToNextUpdate = 0;\n    }\n  }\n  _onCanPlay() {\n    const source = this.resource;\n    source.removeEventListener(\"canplay\", this._onCanPlay);\n    this._mediaReady();\n  }\n  _onCanPlayThrough() {\n    const source = this.resource;\n    source.removeEventListener(\"canplaythrough\", this._onCanPlay);\n    if (this._preloadTimeout) {\n      clearTimeout(this._preloadTimeout);\n      this._preloadTimeout = void 0;\n    }\n    this._mediaReady();\n  }\n  /** Fired when the video is loaded and ready to play. */\n  _mediaReady() {\n    const source = this.resource;\n    if (this.isValid) {\n      this.isReady = true;\n      this.resize(source.videoWidth, source.videoHeight);\n    }\n    this._msToNextUpdate = 0;\n    this.updateFrame();\n    this._msToNextUpdate = 0;\n    if (this._resolve) {\n      this._resolve(this);\n      this._resolve = null;\n      this._reject = null;\n    }\n    if (this._isSourcePlaying()) {\n      this._onPlayStart();\n    } else if (this.autoPlay) {\n      void this.resource.play();\n    }\n  }\n  /** Cleans up resources and event listeners associated with this texture. */\n  destroy() {\n    this._configureAutoUpdate();\n    const source = this.resource;\n    if (source) {\n      source.removeEventListener(\"play\", this._onPlayStart);\n      source.removeEventListener(\"pause\", this._onPlayStop);\n      source.removeEventListener(\"seeked\", this._onSeeked);\n      source.removeEventListener(\"canplay\", this._onCanPlay);\n      source.removeEventListener(\"canplaythrough\", this._onCanPlayThrough);\n      source.removeEventListener(\"error\", this._onError, true);\n      source.pause();\n      source.src = \"\";\n      source.load();\n    }\n    super.destroy();\n  }\n  /** Should the base texture automatically update itself, set to true by default. */\n  get autoUpdate() {\n    return this._autoUpdate;\n  }\n  set autoUpdate(value) {\n    if (value !== this._autoUpdate) {\n      this._autoUpdate = value;\n      this._configureAutoUpdate();\n    }\n  }\n  /**\n   * How many times a second to update the texture from the video.\n   * Leave at 0 to update at every render.\n   * A lower fps can help performance, as updating the texture at 60fps on a 30ps video may not be efficient.\n   */\n  get updateFPS() {\n    return this._updateFPS;\n  }\n  set updateFPS(value) {\n    if (value !== this._updateFPS) {\n      this._updateFPS = value;\n      this._configureAutoUpdate();\n    }\n  }\n  /**\n   * Configures the updating mechanism based on the current state and settings.\n   *\n   * This method decides between using the browser's native video frame callback or a custom ticker\n   * for updating the video frame. It ensures optimal performance and responsiveness\n   * based on the video's state, playback status, and the desired frames-per-second setting.\n   *\n   * - If `_autoUpdate` is enabled and the video source is playing:\n   *   - It will prefer the native video frame callback if available and no specific FPS is set.\n   *   - Otherwise, it will use a custom ticker for manual updates.\n   * - If `_autoUpdate` is disabled or the video isn't playing, any active update mechanisms are halted.\n   */\n  _configureAutoUpdate() {\n    if (this._autoUpdate && this._isSourcePlaying()) {\n      if (!this._updateFPS && this.resource.requestVideoFrameCallback) {\n        if (this._isConnectedToTicker) {\n          Ticker.shared.remove(this.updateFrame, this);\n          this._isConnectedToTicker = false;\n          this._msToNextUpdate = 0;\n        }\n        if (this._videoFrameRequestCallbackHandle === null) {\n          this._videoFrameRequestCallbackHandle = this.resource.requestVideoFrameCallback(\n            this._videoFrameRequestCallback\n          );\n        }\n      } else {\n        if (this._videoFrameRequestCallbackHandle !== null) {\n          this.resource.cancelVideoFrameCallback(this._videoFrameRequestCallbackHandle);\n          this._videoFrameRequestCallbackHandle = null;\n        }\n        if (!this._isConnectedToTicker) {\n          Ticker.shared.add(this.updateFrame, this);\n          this._isConnectedToTicker = true;\n          this._msToNextUpdate = 0;\n        }\n      }\n    } else {\n      if (this._videoFrameRequestCallbackHandle !== null) {\n        this.resource.cancelVideoFrameCallback(this._videoFrameRequestCallbackHandle);\n        this._videoFrameRequestCallbackHandle = null;\n      }\n      if (this._isConnectedToTicker) {\n        Ticker.shared.remove(this.updateFrame, this);\n        this._isConnectedToTicker = false;\n        this._msToNextUpdate = 0;\n      }\n    }\n  }\n  static test(resource) {\n    return globalThis.HTMLVideoElement && resource instanceof HTMLVideoElement;\n  }\n};\n_VideoSource.extension = ExtensionType.TextureSource;\n/** The default options for video sources. */\n_VideoSource.defaultOptions = {\n  ...TextureSource.defaultOptions,\n  /** If true, the video will start loading immediately. */\n  autoLoad: true,\n  /** If true, the video will start playing as soon as it is loaded. */\n  autoPlay: true,\n  /** The number of times a second to update the texture from the video. Leave at 0 to update at every render. */\n  updateFPS: 0,\n  /** If true, the video will be loaded with the `crossorigin` attribute. */\n  crossorigin: true,\n  /** If true, the video will loop when it ends. */\n  loop: false,\n  /** If true, the video will be muted. */\n  muted: true,\n  /** If true, the video will play inline. */\n  playsinline: true,\n  /** If true, the video will be preloaded. */\n  preload: false\n};\n/**\n * Map of video MIME types that can't be directly derived from file extensions.\n * @readonly\n */\n_VideoSource.MIME_TYPES = {\n  ogv: \"video/ogg\",\n  mov: \"video/quicktime\",\n  m4v: \"video/mp4\"\n};\nlet VideoSource = _VideoSource;\n\nexport { VideoSource };\n//# sourceMappingURL=VideoSource.mjs.map\n","\"use strict\";\nconst convertToList = (input, transform, forceTransform = false) => {\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n  if (!transform) {\n    return input;\n  }\n  return input.map((item) => {\n    if (typeof item === \"string\" || forceTransform) {\n      return transform(item);\n    }\n    return item;\n  });\n};\n\nexport { convertToList };\n//# sourceMappingURL=convertToList.mjs.map\n","import { warn } from '../../utils/logging/warn.mjs';\nimport { convertToList } from '../utils/convertToList.mjs';\n\n\"use strict\";\nclass CacheClass {\n  constructor() {\n    this._parsers = [];\n    this._cache = /* @__PURE__ */ new Map();\n    this._cacheMap = /* @__PURE__ */ new Map();\n  }\n  /** Clear all entries. */\n  reset() {\n    this._cacheMap.clear();\n    this._cache.clear();\n  }\n  /**\n   * Check if the key exists\n   * @param key - The key to check\n   */\n  has(key) {\n    return this._cache.has(key);\n  }\n  /**\n   * Fetch entry by key\n   * @param key - The key of the entry to get\n   */\n  get(key) {\n    const result = this._cache.get(key);\n    if (!result) {\n      warn(`[Assets] Asset id ${key} was not found in the Cache`);\n    }\n    return result;\n  }\n  /**\n   * Set a value by key or keys name\n   * @param key - The key or keys to set\n   * @param value - The value to store in the cache or from which cacheable assets will be derived.\n   */\n  set(key, value) {\n    const keys = convertToList(key);\n    let cacheableAssets;\n    for (let i = 0; i < this.parsers.length; i++) {\n      const parser = this.parsers[i];\n      if (parser.test(value)) {\n        cacheableAssets = parser.getCacheableAssets(keys, value);\n        break;\n      }\n    }\n    const cacheableMap = new Map(Object.entries(cacheableAssets || {}));\n    if (!cacheableAssets) {\n      keys.forEach((key2) => {\n        cacheableMap.set(key2, value);\n      });\n    }\n    const cacheKeys = [...cacheableMap.keys()];\n    const cachedAssets = {\n      cacheKeys,\n      keys\n    };\n    keys.forEach((key2) => {\n      this._cacheMap.set(key2, cachedAssets);\n    });\n    cacheKeys.forEach((key2) => {\n      const val = cacheableAssets ? cacheableAssets[key2] : value;\n      if (this._cache.has(key2) && this._cache.get(key2) !== val) {\n        warn(\"[Cache] already has key:\", key2);\n      }\n      this._cache.set(key2, cacheableMap.get(key2));\n    });\n  }\n  /**\n   * Remove entry by key\n   *\n   * This function will also remove any associated alias from the cache also.\n   * @param key - The key of the entry to remove\n   */\n  remove(key) {\n    if (!this._cacheMap.has(key)) {\n      warn(`[Assets] Asset id ${key} was not found in the Cache`);\n      return;\n    }\n    const cacheMap = this._cacheMap.get(key);\n    const cacheKeys = cacheMap.cacheKeys;\n    cacheKeys.forEach((key2) => {\n      this._cache.delete(key2);\n    });\n    cacheMap.keys.forEach((key2) => {\n      this._cacheMap.delete(key2);\n    });\n  }\n  /** All loader parsers registered */\n  get parsers() {\n    return this._parsers;\n  }\n}\nconst Cache = new CacheClass();\n\nexport { Cache };\n//# sourceMappingURL=Cache.mjs.map\n","import { Cache } from '../../../../../assets/cache/Cache.mjs';\nimport { extensions, ExtensionType } from '../../../../../extensions/Extensions.mjs';\nimport { TextureSource } from '../sources/TextureSource.mjs';\nimport { Texture } from '../Texture.mjs';\n\n\"use strict\";\nconst sources = [];\nextensions.handleByList(ExtensionType.TextureSource, sources);\nfunction autoDetectSource(options = {}) {\n  return textureSourceFrom(options);\n}\nfunction textureSourceFrom(options = {}) {\n  const hasResource = options && options.resource;\n  const res = hasResource ? options.resource : options;\n  const opts = hasResource ? options : { resource: options };\n  for (let i = 0; i < sources.length; i++) {\n    const Source = sources[i];\n    if (Source.test(res)) {\n      return new Source(opts);\n    }\n  }\n  throw new Error(`Could not find a source type for resource: ${opts.resource}`);\n}\nfunction resourceToTexture(options = {}, skipCache = false) {\n  const hasResource = options && options.resource;\n  const resource = hasResource ? options.resource : options;\n  const opts = hasResource ? options : { resource: options };\n  if (!skipCache && Cache.has(resource)) {\n    return Cache.get(resource);\n  }\n  const texture = new Texture({ source: textureSourceFrom(opts) });\n  texture.on(\"destroy\", () => {\n    if (Cache.has(resource)) {\n      Cache.remove(resource);\n    }\n  });\n  if (!skipCache) {\n    Cache.set(resource, texture);\n  }\n  return texture;\n}\nfunction textureFrom(id, skipCache = false) {\n  if (typeof id === \"string\") {\n    return Cache.get(id);\n  } else if (id instanceof TextureSource) {\n    return new Texture({ source: id });\n  }\n  return resourceToTexture(id, skipCache);\n}\nTexture.from = textureFrom;\nTextureSource.from = textureSourceFrom;\n\nexport { autoDetectSource, resourceToTexture, textureFrom };\n//# sourceMappingURL=textureFrom.mjs.map\n","import { extensions } from '../extensions/Extensions.mjs';\nimport { AlphaMask } from './mask/alpha/AlphaMask.mjs';\nimport { ColorMask } from './mask/color/ColorMask.mjs';\nimport { StencilMask } from './mask/stencil/StencilMask.mjs';\nimport { BufferImageSource } from './renderers/shared/texture/sources/BufferImageSource.mjs';\nimport { CanvasSource } from './renderers/shared/texture/sources/CanvasSource.mjs';\nimport { ImageSource } from './renderers/shared/texture/sources/ImageSource.mjs';\nimport { VideoSource } from './renderers/shared/texture/sources/VideoSource.mjs';\nimport './renderers/shared/texture/utils/textureFrom.mjs';\nimport './mask/MaskEffectManager.mjs';\n\n\"use strict\";\nextensions.add(AlphaMask, ColorMask, StencilMask, VideoSource, ImageSource, CanvasSource, BufferImageSource);\n//# sourceMappingURL=init.mjs.map\n","\"use strict\";\nvar LoaderParserPriority = /* @__PURE__ */ ((LoaderParserPriority2) => {\n  LoaderParserPriority2[LoaderParserPriority2[\"Low\"] = 0] = \"Low\";\n  LoaderParserPriority2[LoaderParserPriority2[\"Normal\"] = 1] = \"Normal\";\n  LoaderParserPriority2[LoaderParserPriority2[\"High\"] = 2] = \"High\";\n  return LoaderParserPriority2;\n})(LoaderParserPriority || {});\n\nexport { LoaderParserPriority };\n//# sourceMappingURL=LoaderParser.mjs.map\n","import { DOMAdapter } from '../environment/adapter.mjs';\n\n\"use strict\";\nfunction assertPath(path2) {\n  if (typeof path2 !== \"string\") {\n    throw new TypeError(`Path must be a string. Received ${JSON.stringify(path2)}`);\n  }\n}\nfunction removeUrlParams(url) {\n  const re = url.split(\"?\")[0];\n  return re.split(\"#\")[0];\n}\nfunction escapeRegExp(string) {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n}\nfunction replaceAll(str, find, replace) {\n  return str.replace(new RegExp(escapeRegExp(find), \"g\"), replace);\n}\nfunction normalizeStringPosix(path2, allowAboveRoot) {\n  let res = \"\";\n  let lastSegmentLength = 0;\n  let lastSlash = -1;\n  let dots = 0;\n  let code = -1;\n  for (let i = 0; i <= path2.length; ++i) {\n    if (i < path2.length) {\n      code = path2.charCodeAt(i);\n    } else if (code === 47) {\n      break;\n    } else {\n      code = 47;\n    }\n    if (code === 47) {\n      if (lastSlash === i - 1 || dots === 1) {\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 || res.charCodeAt(res.length - 2) !== 46) {\n          if (res.length > 2) {\n            const lastSlashIndex = res.lastIndexOf(\"/\");\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = \"\";\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf(\"/\");\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = \"\";\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0) {\n            res += \"/..\";\n          } else {\n            res = \"..\";\n          }\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0) {\n          res += `/${path2.slice(lastSlash + 1, i)}`;\n        } else {\n          res = path2.slice(lastSlash + 1, i);\n        }\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\nconst path = {\n  /**\n   * Converts a path to posix format.\n   * @param path - The path to convert to posix\n   */\n  toPosix(path2) {\n    return replaceAll(path2, \"\\\\\", \"/\");\n  },\n  /**\n   * Checks if the path is a URL e.g. http://, https://\n   * @param path - The path to check\n   */\n  isUrl(path2) {\n    return /^https?:/.test(this.toPosix(path2));\n  },\n  /**\n   * Checks if the path is a data URL\n   * @param path - The path to check\n   */\n  isDataUrl(path2) {\n    return /^data:([a-z]+\\/[a-z0-9-+.]+(;[a-z0-9-.!#$%*+.{}|~`]+=[a-z0-9-.!#$%*+.{}()_|~`]+)*)?(;base64)?,([a-z0-9!$&',()*+;=\\-._~:@\\/?%\\s<>]*?)$/i.test(path2);\n  },\n  /**\n   * Checks if the path is a blob URL\n   * @param path - The path to check\n   */\n  isBlobUrl(path2) {\n    return path2.startsWith(\"blob:\");\n  },\n  /**\n   * Checks if the path has a protocol e.g. http://, https://, file:///, data:, blob:, C:/\n   * This will return true for windows file paths\n   * @param path - The path to check\n   */\n  hasProtocol(path2) {\n    return /^[^/:]+:/.test(this.toPosix(path2));\n  },\n  /**\n   * Returns the protocol of the path e.g. http://, https://, file:///, data:, blob:, C:/\n   * @param path - The path to get the protocol from\n   */\n  getProtocol(path2) {\n    assertPath(path2);\n    path2 = this.toPosix(path2);\n    const matchFile = /^file:\\/\\/\\//.exec(path2);\n    if (matchFile) {\n      return matchFile[0];\n    }\n    const matchProtocol = /^[^/:]+:\\/{0,2}/.exec(path2);\n    if (matchProtocol) {\n      return matchProtocol[0];\n    }\n    return \"\";\n  },\n  /**\n   * Converts URL to an absolute path.\n   * When loading from a Web Worker, we must use absolute paths.\n   * If the URL is already absolute we return it as is\n   * If it's not, we convert it\n   * @param url - The URL to test\n   * @param customBaseUrl - The base URL to use\n   * @param customRootUrl - The root URL to use\n   */\n  toAbsolute(url, customBaseUrl, customRootUrl) {\n    assertPath(url);\n    if (this.isDataUrl(url) || this.isBlobUrl(url))\n      return url;\n    const baseUrl = removeUrlParams(this.toPosix(customBaseUrl ?? DOMAdapter.get().getBaseUrl()));\n    const rootUrl = removeUrlParams(this.toPosix(customRootUrl ?? this.rootname(baseUrl)));\n    url = this.toPosix(url);\n    if (url.startsWith(\"/\")) {\n      return path.join(rootUrl, url.slice(1));\n    }\n    const absolutePath = this.isAbsolute(url) ? url : this.join(baseUrl, url);\n    return absolutePath;\n  },\n  /**\n   * Normalizes the given path, resolving '..' and '.' segments\n   * @param path - The path to normalize\n   */\n  normalize(path2) {\n    assertPath(path2);\n    if (path2.length === 0)\n      return \".\";\n    if (this.isDataUrl(path2) || this.isBlobUrl(path2))\n      return path2;\n    path2 = this.toPosix(path2);\n    let protocol = \"\";\n    const isAbsolute = path2.startsWith(\"/\");\n    if (this.hasProtocol(path2)) {\n      protocol = this.rootname(path2);\n      path2 = path2.slice(protocol.length);\n    }\n    const trailingSeparator = path2.endsWith(\"/\");\n    path2 = normalizeStringPosix(path2, false);\n    if (path2.length > 0 && trailingSeparator)\n      path2 += \"/\";\n    if (isAbsolute)\n      return `/${path2}`;\n    return protocol + path2;\n  },\n  /**\n   * Determines if path is an absolute path.\n   * Absolute paths can be urls, data urls, or paths on disk\n   * @param path - The path to test\n   */\n  isAbsolute(path2) {\n    assertPath(path2);\n    path2 = this.toPosix(path2);\n    if (this.hasProtocol(path2))\n      return true;\n    return path2.startsWith(\"/\");\n  },\n  /**\n   * Joins all given path segments together using the platform-specific separator as a delimiter,\n   * then normalizes the resulting path\n   * @param segments - The segments of the path to join\n   */\n  join(...segments) {\n    if (segments.length === 0) {\n      return \".\";\n    }\n    let joined;\n    for (let i = 0; i < segments.length; ++i) {\n      const arg = segments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === void 0)\n          joined = arg;\n        else {\n          const prevArg = segments[i - 1] ?? \"\";\n          if (this.joinExtensions.includes(this.extname(prevArg).toLowerCase())) {\n            joined += `/../${arg}`;\n          } else {\n            joined += `/${arg}`;\n          }\n        }\n      }\n    }\n    if (joined === void 0) {\n      return \".\";\n    }\n    return this.normalize(joined);\n  },\n  /**\n   * Returns the directory name of a path\n   * @param path - The path to parse\n   */\n  dirname(path2) {\n    assertPath(path2);\n    if (path2.length === 0)\n      return \".\";\n    path2 = this.toPosix(path2);\n    let code = path2.charCodeAt(0);\n    const hasRoot = code === 47;\n    let end = -1;\n    let matchedSlash = true;\n    const proto = this.getProtocol(path2);\n    const origpath = path2;\n    path2 = path2.slice(proto.length);\n    for (let i = path2.length - 1; i >= 1; --i) {\n      code = path2.charCodeAt(i);\n      if (code === 47) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        matchedSlash = false;\n      }\n    }\n    if (end === -1)\n      return hasRoot ? \"/\" : this.isUrl(origpath) ? proto + path2 : proto;\n    if (hasRoot && end === 1)\n      return \"//\";\n    return proto + path2.slice(0, end);\n  },\n  /**\n   * Returns the root of the path e.g. /, C:/, file:///, http://domain.com/\n   * @param path - The path to parse\n   */\n  rootname(path2) {\n    assertPath(path2);\n    path2 = this.toPosix(path2);\n    let root = \"\";\n    if (path2.startsWith(\"/\"))\n      root = \"/\";\n    else {\n      root = this.getProtocol(path2);\n    }\n    if (this.isUrl(path2)) {\n      const index = path2.indexOf(\"/\", root.length);\n      if (index !== -1) {\n        root = path2.slice(0, index);\n      } else\n        root = path2;\n      if (!root.endsWith(\"/\"))\n        root += \"/\";\n    }\n    return root;\n  },\n  /**\n   * Returns the last portion of a path\n   * @param path - The path to test\n   * @param ext - Optional extension to remove\n   */\n  basename(path2, ext) {\n    assertPath(path2);\n    if (ext)\n      assertPath(ext);\n    path2 = removeUrlParams(this.toPosix(path2));\n    let start = 0;\n    let end = -1;\n    let matchedSlash = true;\n    let i;\n    if (ext !== void 0 && ext.length > 0 && ext.length <= path2.length) {\n      if (ext.length === path2.length && ext === path2)\n        return \"\";\n      let extIdx = ext.length - 1;\n      let firstNonSlashEnd = -1;\n      for (i = path2.length - 1; i >= 0; --i) {\n        const code = path2.charCodeAt(i);\n        if (code === 47) {\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                end = i;\n              }\n            } else {\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n      if (start === end)\n        end = firstNonSlashEnd;\n      else if (end === -1)\n        end = path2.length;\n      return path2.slice(start, end);\n    }\n    for (i = path2.length - 1; i >= 0; --i) {\n      if (path2.charCodeAt(i) === 47) {\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n        matchedSlash = false;\n        end = i + 1;\n      }\n    }\n    if (end === -1)\n      return \"\";\n    return path2.slice(start, end);\n  },\n  /**\n   * Returns the extension of the path, from the last occurrence of the . (period) character to end of string in the last\n   * portion of the path. If there is no . in the last portion of the path, or if there are no . characters other than\n   * the first character of the basename of path, an empty string is returned.\n   * @param path - The path to parse\n   */\n  extname(path2) {\n    assertPath(path2);\n    path2 = removeUrlParams(this.toPosix(path2));\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    let preDotState = 0;\n    for (let i = path2.length - 1; i >= 0; --i) {\n      const code = path2.charCodeAt(i);\n      if (code === 47) {\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46) {\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        preDotState = -1;\n      }\n    }\n    if (startDot === -1 || end === -1 || preDotState === 0 || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return \"\";\n    }\n    return path2.slice(startDot, end);\n  },\n  /**\n   * Parses a path into an object containing the 'root', `dir`, `base`, `ext`, and `name` properties.\n   * @param path - The path to parse\n   */\n  parse(path2) {\n    assertPath(path2);\n    const ret = { root: \"\", dir: \"\", base: \"\", ext: \"\", name: \"\" };\n    if (path2.length === 0)\n      return ret;\n    path2 = removeUrlParams(this.toPosix(path2));\n    let code = path2.charCodeAt(0);\n    const isAbsolute = this.isAbsolute(path2);\n    let start;\n    const protocol = \"\";\n    ret.root = this.rootname(path2);\n    if (isAbsolute || this.hasProtocol(path2)) {\n      start = 1;\n    } else {\n      start = 0;\n    }\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    let i = path2.length - 1;\n    let preDotState = 0;\n    for (; i >= start; --i) {\n      code = path2.charCodeAt(i);\n      if (code === 47) {\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46) {\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        preDotState = -1;\n      }\n    }\n    if (startDot === -1 || end === -1 || preDotState === 0 || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute)\n          ret.base = ret.name = path2.slice(1, end);\n        else\n          ret.base = ret.name = path2.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path2.slice(1, startDot);\n        ret.base = path2.slice(1, end);\n      } else {\n        ret.name = path2.slice(startPart, startDot);\n        ret.base = path2.slice(startPart, end);\n      }\n      ret.ext = path2.slice(startDot, end);\n    }\n    ret.dir = this.dirname(path2);\n    if (protocol)\n      ret.dir = protocol + ret.dir;\n    return ret;\n  },\n  sep: \"/\",\n  delimiter: \":\",\n  joinExtensions: [\".html\"]\n};\n\nexport { path };\n//# sourceMappingURL=path.mjs.map\n","\"use strict\";\nfunction processX(base, ids, depth, result, tags) {\n  const id = ids[depth];\n  for (let i = 0; i < id.length; i++) {\n    const value = id[i];\n    if (depth < ids.length - 1) {\n      processX(base.replace(result[depth], value), ids, depth + 1, result, tags);\n    } else {\n      tags.push(base.replace(result[depth], value));\n    }\n  }\n}\nfunction createStringVariations(string) {\n  const regex = /\\{(.*?)\\}/g;\n  const result = string.match(regex);\n  const tags = [];\n  if (result) {\n    const ids = [];\n    result.forEach((vars) => {\n      const split = vars.substring(1, vars.length - 1).split(\",\");\n      ids.push(split);\n    });\n    processX(string, ids, 0, result, tags);\n  } else {\n    tags.push(string);\n  }\n  return tags;\n}\n\nexport { createStringVariations };\n//# sourceMappingURL=createStringVariations.mjs.map\n","\"use strict\";\nconst isSingleItem = (item) => !Array.isArray(item);\n\nexport { isSingleItem };\n//# sourceMappingURL=isSingleItem.mjs.map\n","import { warn } from '../../utils/logging/warn.mjs';\nimport { path } from '../../utils/path.mjs';\nimport { convertToList } from '../utils/convertToList.mjs';\nimport { createStringVariations } from '../utils/createStringVariations.mjs';\nimport { isSingleItem } from '../utils/isSingleItem.mjs';\n\n\"use strict\";\nclass Resolver {\n  constructor() {\n    this._defaultBundleIdentifierOptions = {\n      connector: \"-\",\n      createBundleAssetId: (bundleId, assetId) => `${bundleId}${this._bundleIdConnector}${assetId}`,\n      extractAssetIdFromBundle: (bundleId, assetBundleId) => assetBundleId.replace(`${bundleId}${this._bundleIdConnector}`, \"\")\n    };\n    /** The character that is used to connect the bundleId and the assetId when generating a bundle asset id key */\n    this._bundleIdConnector = this._defaultBundleIdentifierOptions.connector;\n    /**\n     * A function that generates a bundle asset id key from a bundleId and an assetId\n     * @param bundleId - the bundleId\n     * @param assetId  - the assetId\n     * @returns the bundle asset id key\n     */\n    this._createBundleAssetId = this._defaultBundleIdentifierOptions.createBundleAssetId;\n    /**\n     * A function that generates an assetId from a bundle asset id key. This is the reverse of generateBundleAssetId\n     * @param bundleId - the bundleId\n     * @param assetBundleId - the bundle asset id key\n     * @returns the assetId\n     */\n    this._extractAssetIdFromBundle = this._defaultBundleIdentifierOptions.extractAssetIdFromBundle;\n    this._assetMap = {};\n    this._preferredOrder = [];\n    this._parsers = [];\n    this._resolverHash = {};\n    this._bundles = {};\n  }\n  /**\n   * Override how the resolver deals with generating bundle ids.\n   * must be called before any bundles are added\n   * @param bundleIdentifier - the bundle identifier options\n   */\n  setBundleIdentifier(bundleIdentifier) {\n    this._bundleIdConnector = bundleIdentifier.connector ?? this._bundleIdConnector;\n    this._createBundleAssetId = bundleIdentifier.createBundleAssetId ?? this._createBundleAssetId;\n    this._extractAssetIdFromBundle = bundleIdentifier.extractAssetIdFromBundle ?? this._extractAssetIdFromBundle;\n    if (this._extractAssetIdFromBundle(\"foo\", this._createBundleAssetId(\"foo\", \"bar\")) !== \"bar\") {\n      throw new Error(\"[Resolver] GenerateBundleAssetId are not working correctly\");\n    }\n  }\n  /**\n   * Let the resolver know which assets you prefer to use when resolving assets.\n   * Multiple prefer user defined rules can be added.\n   * @example\n   * resolver.prefer({\n   *     // first look for something with the correct format, and then then correct resolution\n   *     priority: ['format', 'resolution'],\n   *     params:{\n   *         format:'webp', // prefer webp images\n   *         resolution: 2, // prefer a resolution of 2\n   *     }\n   * })\n   * resolver.add('foo', ['bar@2x.webp', 'bar@2x.png', 'bar.webp', 'bar.png']);\n   * resolver.resolveUrl('foo') // => 'bar@2x.webp'\n   * @param preferOrders - the prefer options\n   */\n  prefer(...preferOrders) {\n    preferOrders.forEach((prefer) => {\n      this._preferredOrder.push(prefer);\n      if (!prefer.priority) {\n        prefer.priority = Object.keys(prefer.params);\n      }\n    });\n    this._resolverHash = {};\n  }\n  /**\n   * Set the base path to prepend to all urls when resolving\n   * @example\n   * resolver.basePath = 'https://home.com/';\n   * resolver.add('foo', 'bar.ong');\n   * resolver.resolveUrl('foo', 'bar.png'); // => 'https://home.com/bar.png'\n   * @param basePath - the base path to use\n   */\n  set basePath(basePath) {\n    this._basePath = basePath;\n  }\n  get basePath() {\n    return this._basePath;\n  }\n  /**\n   * Set the root path for root-relative URLs. By default the `basePath`'s root is used. If no `basePath` is set, then the\n   * default value for browsers is `window.location.origin`\n   * @example\n   * // Application hosted on https://home.com/some-path/index.html\n   * resolver.basePath = 'https://home.com/some-path/';\n   * resolver.rootPath = 'https://home.com/';\n   * resolver.add('foo', '/bar.png');\n   * resolver.resolveUrl('foo', '/bar.png'); // => 'https://home.com/bar.png'\n   * @param rootPath - the root path to use\n   */\n  set rootPath(rootPath) {\n    this._rootPath = rootPath;\n  }\n  get rootPath() {\n    return this._rootPath;\n  }\n  /**\n   * All the active URL parsers that help the parser to extract information and create\n   * an asset object-based on parsing the URL itself.\n   *\n   * Can be added using the extensions API\n   * @example\n   * resolver.add('foo', [\n   *     {\n   *         resolution: 2,\n   *         format: 'png',\n   *         src: 'image@2x.png',\n   *     },\n   *     {\n   *         resolution:1,\n   *         format:'png',\n   *         src: 'image.png',\n   *     },\n   * ]);\n   *\n   * // With a url parser the information such as resolution and file format could extracted from the url itself:\n   * extensions.add({\n   *     extension: ExtensionType.ResolveParser,\n   *     test: loadTextures.test, // test if url ends in an image\n   *     parse: (value: string) =>\n   *     ({\n   *         resolution: parseFloat(Resolver.RETINA_PREFIX.exec(value)?.[1] ?? '1'),\n   *         format: value.split('.').pop(),\n   *         src: value,\n   *     }),\n   * });\n   *\n   * // Now resolution and format can be extracted from the url\n   * resolver.add('foo', [\n   *     'image@2x.png',\n   *     'image.png',\n   * ]);\n   */\n  get parsers() {\n    return this._parsers;\n  }\n  /** Used for testing, this resets the resolver to its initial state */\n  reset() {\n    this.setBundleIdentifier(this._defaultBundleIdentifierOptions);\n    this._assetMap = {};\n    this._preferredOrder = [];\n    this._resolverHash = {};\n    this._rootPath = null;\n    this._basePath = null;\n    this._manifest = null;\n    this._bundles = {};\n    this._defaultSearchParams = null;\n  }\n  /**\n   * Sets the default URL search parameters for the URL resolver. The urls can be specified as a string or an object.\n   * @param searchParams - the default url parameters to append when resolving urls\n   */\n  setDefaultSearchParams(searchParams) {\n    if (typeof searchParams === \"string\") {\n      this._defaultSearchParams = searchParams;\n    } else {\n      const queryValues = searchParams;\n      this._defaultSearchParams = Object.keys(queryValues).map((key) => `${encodeURIComponent(key)}=${encodeURIComponent(queryValues[key])}`).join(\"&\");\n    }\n  }\n  /**\n   * Returns the aliases for a given asset\n   * @param asset - the asset to get the aliases for\n   */\n  getAlias(asset) {\n    const { alias, src } = asset;\n    const aliasesToUse = convertToList(\n      alias || src,\n      (value) => {\n        if (typeof value === \"string\")\n          return value;\n        if (Array.isArray(value))\n          return value.map((v) => v?.src ?? v);\n        if (value?.src)\n          return value.src;\n        return value;\n      },\n      true\n    );\n    return aliasesToUse;\n  }\n  /**\n   * Add a manifest to the asset resolver. This is a nice way to add all the asset information in one go.\n   * generally a manifest would be built using a tool.\n   * @param manifest - the manifest to add to the resolver\n   */\n  addManifest(manifest) {\n    if (this._manifest) {\n      warn(\"[Resolver] Manifest already exists, this will be overwritten\");\n    }\n    this._manifest = manifest;\n    manifest.bundles.forEach((bundle) => {\n      this.addBundle(bundle.name, bundle.assets);\n    });\n  }\n  /**\n   * This adds a bundle of assets in one go so that you can resolve them as a group.\n   * For example you could add a bundle for each screen in you pixi app\n   * @example\n   * resolver.addBundle('animals', [\n   *  { alias: 'bunny', src: 'bunny.png' },\n   *  { alias: 'chicken', src: 'chicken.png' },\n   *  { alias: 'thumper', src: 'thumper.png' },\n   * ]);\n   * // or\n   * resolver.addBundle('animals', {\n   *     bunny: 'bunny.png',\n   *     chicken: 'chicken.png',\n   *     thumper: 'thumper.png',\n   * });\n   *\n   * const resolvedAssets = await resolver.resolveBundle('animals');\n   * @param bundleId - The id of the bundle to add\n   * @param assets - A record of the asset or assets that will be chosen from when loading via the specified key\n   */\n  addBundle(bundleId, assets) {\n    const assetNames = [];\n    let convertedAssets = assets;\n    if (!Array.isArray(assets)) {\n      convertedAssets = Object.entries(assets).map(([alias, src]) => {\n        if (typeof src === \"string\" || Array.isArray(src)) {\n          return { alias, src };\n        }\n        return { alias, ...src };\n      });\n    }\n    convertedAssets.forEach((asset) => {\n      const srcs = asset.src;\n      const aliases = asset.alias;\n      let ids;\n      if (typeof aliases === \"string\") {\n        const bundleAssetId = this._createBundleAssetId(bundleId, aliases);\n        assetNames.push(bundleAssetId);\n        ids = [aliases, bundleAssetId];\n      } else {\n        const bundleIds = aliases.map((name) => this._createBundleAssetId(bundleId, name));\n        assetNames.push(...bundleIds);\n        ids = [...aliases, ...bundleIds];\n      }\n      this.add({\n        ...asset,\n        ...{\n          alias: ids,\n          src: srcs\n        }\n      });\n    });\n    this._bundles[bundleId] = assetNames;\n  }\n  /**\n   * Tells the resolver what keys are associated with witch asset.\n   * The most important thing the resolver does\n   * @example\n   * // Single key, single asset:\n   * resolver.add({alias: 'foo', src: 'bar.png');\n   * resolver.resolveUrl('foo') // => 'bar.png'\n   *\n   * // Multiple keys, single asset:\n   * resolver.add({alias: ['foo', 'boo'], src: 'bar.png'});\n   * resolver.resolveUrl('foo') // => 'bar.png'\n   * resolver.resolveUrl('boo') // => 'bar.png'\n   *\n   * // Multiple keys, multiple assets:\n   * resolver.add({alias: ['foo', 'boo'], src: ['bar.png', 'bar.webp']});\n   * resolver.resolveUrl('foo') // => 'bar.png'\n   *\n   * // Add custom data attached to the resolver\n   * Resolver.add({\n   *     alias: 'bunnyBooBooSmooth',\n   *     src: 'bunny{png,webp}',\n   *     data: { scaleMode:SCALE_MODES.NEAREST }, // Base texture options\n   * });\n   *\n   * resolver.resolve('bunnyBooBooSmooth') // => { src: 'bunny.png', data: { scaleMode: SCALE_MODES.NEAREST } }\n   * @param aliases - the UnresolvedAsset or array of UnresolvedAssets to add to the resolver\n   */\n  add(aliases) {\n    const assets = [];\n    if (Array.isArray(aliases)) {\n      assets.push(...aliases);\n    } else {\n      assets.push(aliases);\n    }\n    let keyCheck;\n    keyCheck = (key) => {\n      if (this.hasKey(key)) {\n        warn(`[Resolver] already has key: ${key} overwriting`);\n      }\n    };\n    const assetArray = convertToList(assets);\n    assetArray.forEach((asset) => {\n      const { src } = asset;\n      let { data, format, loadParser } = asset;\n      const srcsToUse = convertToList(src).map((src2) => {\n        if (typeof src2 === \"string\") {\n          return createStringVariations(src2);\n        }\n        return Array.isArray(src2) ? src2 : [src2];\n      });\n      const aliasesToUse = this.getAlias(asset);\n      Array.isArray(aliasesToUse) ? aliasesToUse.forEach(keyCheck) : keyCheck(aliasesToUse);\n      const resolvedAssets = [];\n      srcsToUse.forEach((srcs) => {\n        srcs.forEach((src2) => {\n          let formattedAsset = {};\n          if (typeof src2 !== \"object\") {\n            formattedAsset.src = src2;\n            for (let i = 0; i < this._parsers.length; i++) {\n              const parser = this._parsers[i];\n              if (parser.test(src2)) {\n                formattedAsset = parser.parse(src2);\n                break;\n              }\n            }\n          } else {\n            data = src2.data ?? data;\n            format = src2.format ?? format;\n            loadParser = src2.loadParser ?? loadParser;\n            formattedAsset = {\n              ...formattedAsset,\n              ...src2\n            };\n          }\n          if (!aliasesToUse) {\n            throw new Error(`[Resolver] alias is undefined for this asset: ${formattedAsset.src}`);\n          }\n          formattedAsset = this._buildResolvedAsset(formattedAsset, {\n            aliases: aliasesToUse,\n            data,\n            format,\n            loadParser\n          });\n          resolvedAssets.push(formattedAsset);\n        });\n      });\n      aliasesToUse.forEach((alias) => {\n        this._assetMap[alias] = resolvedAssets;\n      });\n    });\n  }\n  // TODO: this needs an overload like load did in Assets\n  /**\n   * If the resolver has had a manifest set via setManifest, this will return the assets urls for\n   * a given bundleId or bundleIds.\n   * @example\n   * // Manifest Example\n   * const manifest = {\n   *     bundles: [\n   *         {\n   *             name: 'load-screen',\n   *             assets: [\n   *                 {\n   *                     alias: 'background',\n   *                     src: 'sunset.png',\n   *                 },\n   *                 {\n   *                     alias: 'bar',\n   *                     src: 'load-bar.{png,webp}',\n   *                 },\n   *             ],\n   *         },\n   *         {\n   *             name: 'game-screen',\n   *             assets: [\n   *                 {\n   *                     alias: 'character',\n   *                     src: 'robot.png',\n   *                 },\n   *                 {\n   *                     alias: 'enemy',\n   *                     src: 'bad-guy.png',\n   *                 },\n   *             ],\n   *         },\n   *     ]\n   * };\n   *\n   * resolver.setManifest(manifest);\n   * const resolved = resolver.resolveBundle('load-screen');\n   * @param bundleIds - The bundle ids to resolve\n   * @returns All the bundles assets or a hash of assets for each bundle specified\n   */\n  resolveBundle(bundleIds) {\n    const singleAsset = isSingleItem(bundleIds);\n    bundleIds = convertToList(bundleIds);\n    const out = {};\n    bundleIds.forEach((bundleId) => {\n      const assetNames = this._bundles[bundleId];\n      if (assetNames) {\n        const results = this.resolve(assetNames);\n        const assets = {};\n        for (const key in results) {\n          const asset = results[key];\n          assets[this._extractAssetIdFromBundle(bundleId, key)] = asset;\n        }\n        out[bundleId] = assets;\n      }\n    });\n    return singleAsset ? out[bundleIds[0]] : out;\n  }\n  /**\n   * Does exactly what resolve does, but returns just the URL rather than the whole asset object\n   * @param key - The key or keys to resolve\n   * @returns - The URLs associated with the key(s)\n   */\n  resolveUrl(key) {\n    const result = this.resolve(key);\n    if (typeof key !== \"string\") {\n      const out = {};\n      for (const i in result) {\n        out[i] = result[i].src;\n      }\n      return out;\n    }\n    return result.src;\n  }\n  resolve(keys) {\n    const singleAsset = isSingleItem(keys);\n    keys = convertToList(keys);\n    const result = {};\n    keys.forEach((key) => {\n      if (!this._resolverHash[key]) {\n        if (this._assetMap[key]) {\n          let assets = this._assetMap[key];\n          const preferredOrder = this._getPreferredOrder(assets);\n          preferredOrder?.priority.forEach((priorityKey) => {\n            preferredOrder.params[priorityKey].forEach((value) => {\n              const filteredAssets = assets.filter((asset) => {\n                if (asset[priorityKey]) {\n                  return asset[priorityKey] === value;\n                }\n                return false;\n              });\n              if (filteredAssets.length) {\n                assets = filteredAssets;\n              }\n            });\n          });\n          this._resolverHash[key] = assets[0];\n        } else {\n          this._resolverHash[key] = this._buildResolvedAsset({\n            alias: [key],\n            src: key\n          }, {});\n        }\n      }\n      result[key] = this._resolverHash[key];\n    });\n    return singleAsset ? result[keys[0]] : result;\n  }\n  /**\n   * Checks if an asset with a given key exists in the resolver\n   * @param key - The key of the asset\n   */\n  hasKey(key) {\n    return !!this._assetMap[key];\n  }\n  /**\n   * Checks if a bundle with the given key exists in the resolver\n   * @param key - The key of the bundle\n   */\n  hasBundle(key) {\n    return !!this._bundles[key];\n  }\n  /**\n   * Internal function for figuring out what prefer criteria an asset should use.\n   * @param assets\n   */\n  _getPreferredOrder(assets) {\n    for (let i = 0; i < assets.length; i++) {\n      const asset = assets[i];\n      const preferred = this._preferredOrder.find((preference) => preference.params.format.includes(asset.format));\n      if (preferred) {\n        return preferred;\n      }\n    }\n    return this._preferredOrder[0];\n  }\n  /**\n   * Appends the default url parameters to the url\n   * @param url - The url to append the default parameters to\n   * @returns - The url with the default parameters appended\n   */\n  _appendDefaultSearchParams(url) {\n    if (!this._defaultSearchParams)\n      return url;\n    const paramConnector = /\\?/.test(url) ? \"&\" : \"?\";\n    return `${url}${paramConnector}${this._defaultSearchParams}`;\n  }\n  _buildResolvedAsset(formattedAsset, data) {\n    const { aliases, data: assetData, loadParser, format } = data;\n    if (this._basePath || this._rootPath) {\n      formattedAsset.src = path.toAbsolute(formattedAsset.src, this._basePath, this._rootPath);\n    }\n    formattedAsset.alias = aliases ?? formattedAsset.alias ?? [formattedAsset.src];\n    formattedAsset.src = this._appendDefaultSearchParams(formattedAsset.src);\n    formattedAsset.data = { ...assetData || {}, ...formattedAsset.data };\n    formattedAsset.loadParser = loadParser ?? formattedAsset.loadParser;\n    formattedAsset.format = format ?? formattedAsset.format ?? getUrlExtension(formattedAsset.src);\n    return formattedAsset;\n  }\n}\n/**\n * The prefix that denotes a URL is for a retina asset.\n * @static\n * @name RETINA_PREFIX\n * @type {RegExp}\n * @default /@([0-9\\.]+)x/\n * @example `@2x`\n */\nResolver.RETINA_PREFIX = /@([0-9\\.]+)x/;\nfunction getUrlExtension(url) {\n  return url.split(\".\").pop().split(\"?\").shift().split(\"#\").shift();\n}\n\nexport { Resolver, getUrlExtension };\n//# sourceMappingURL=Resolver.mjs.map\n","\"use strict\";\nconst copySearchParams = (targetUrl, sourceUrl) => {\n  const searchParams = sourceUrl.split(\"?\")[1];\n  if (searchParams) {\n    targetUrl += `?${searchParams}`;\n  }\n  return targetUrl;\n};\n\nexport { copySearchParams };\n//# sourceMappingURL=copySearchParams.mjs.map\n","import { Rectangle } from '../maths/shapes/Rectangle.mjs';\nimport { Texture } from '../rendering/renderers/shared/texture/Texture.mjs';\n\n\"use strict\";\nconst _Spritesheet = class _Spritesheet {\n  /**\n   * @param texture - Reference to the source BaseTexture object.\n   * @param {object} data - Spritesheet image data.\n   */\n  constructor(texture, data) {\n    /** For multi-packed spritesheets, this contains a reference to all the other spritesheets it depends on. */\n    this.linkedSheets = [];\n    this._texture = texture instanceof Texture ? texture : null;\n    this.textureSource = texture.source;\n    this.textures = {};\n    this.animations = {};\n    this.data = data;\n    const metaResolution = parseFloat(data.meta.scale);\n    if (metaResolution) {\n      this.resolution = metaResolution;\n      texture.source.resolution = this.resolution;\n    } else {\n      this.resolution = texture.source._resolution;\n    }\n    this._frames = this.data.frames;\n    this._frameKeys = Object.keys(this._frames);\n    this._batchIndex = 0;\n    this._callback = null;\n  }\n  /**\n   * Parser spritesheet from loaded data. This is done asynchronously\n   * to prevent creating too many Texture within a single process.\n   */\n  parse() {\n    return new Promise((resolve) => {\n      this._callback = resolve;\n      this._batchIndex = 0;\n      if (this._frameKeys.length <= _Spritesheet.BATCH_SIZE) {\n        this._processFrames(0);\n        this._processAnimations();\n        this._parseComplete();\n      } else {\n        this._nextBatch();\n      }\n    });\n  }\n  /**\n   * Process a batch of frames\n   * @param initialFrameIndex - The index of frame to start.\n   */\n  _processFrames(initialFrameIndex) {\n    let frameIndex = initialFrameIndex;\n    const maxFrames = _Spritesheet.BATCH_SIZE;\n    while (frameIndex - initialFrameIndex < maxFrames && frameIndex < this._frameKeys.length) {\n      const i = this._frameKeys[frameIndex];\n      const data = this._frames[i];\n      const rect = data.frame;\n      if (rect) {\n        let frame = null;\n        let trim = null;\n        const sourceSize = data.trimmed !== false && data.sourceSize ? data.sourceSize : data.frame;\n        const orig = new Rectangle(\n          0,\n          0,\n          Math.floor(sourceSize.w) / this.resolution,\n          Math.floor(sourceSize.h) / this.resolution\n        );\n        if (data.rotated) {\n          frame = new Rectangle(\n            Math.floor(rect.x) / this.resolution,\n            Math.floor(rect.y) / this.resolution,\n            Math.floor(rect.h) / this.resolution,\n            Math.floor(rect.w) / this.resolution\n          );\n        } else {\n          frame = new Rectangle(\n            Math.floor(rect.x) / this.resolution,\n            Math.floor(rect.y) / this.resolution,\n            Math.floor(rect.w) / this.resolution,\n            Math.floor(rect.h) / this.resolution\n          );\n        }\n        if (data.trimmed !== false && data.spriteSourceSize) {\n          trim = new Rectangle(\n            Math.floor(data.spriteSourceSize.x) / this.resolution,\n            Math.floor(data.spriteSourceSize.y) / this.resolution,\n            Math.floor(rect.w) / this.resolution,\n            Math.floor(rect.h) / this.resolution\n          );\n        }\n        this.textures[i] = new Texture({\n          source: this.textureSource,\n          frame,\n          orig,\n          trim,\n          rotate: data.rotated ? 2 : 0,\n          defaultAnchor: data.anchor,\n          defaultBorders: data.borders,\n          label: i.toString()\n        });\n      }\n      frameIndex++;\n    }\n  }\n  /** Parse animations config. */\n  _processAnimations() {\n    const animations = this.data.animations || {};\n    for (const animName in animations) {\n      this.animations[animName] = [];\n      for (let i = 0; i < animations[animName].length; i++) {\n        const frameName = animations[animName][i];\n        this.animations[animName].push(this.textures[frameName]);\n      }\n    }\n  }\n  /** The parse has completed. */\n  _parseComplete() {\n    const callback = this._callback;\n    this._callback = null;\n    this._batchIndex = 0;\n    callback.call(this, this.textures);\n  }\n  /** Begin the next batch of textures. */\n  _nextBatch() {\n    this._processFrames(this._batchIndex * _Spritesheet.BATCH_SIZE);\n    this._batchIndex++;\n    setTimeout(() => {\n      if (this._batchIndex * _Spritesheet.BATCH_SIZE < this._frameKeys.length) {\n        this._nextBatch();\n      } else {\n        this._processAnimations();\n        this._parseComplete();\n      }\n    }, 0);\n  }\n  /**\n   * Destroy Spritesheet and don't use after this.\n   * @param {boolean} [destroyBase=false] - Whether to destroy the base texture as well\n   */\n  destroy(destroyBase = false) {\n    for (const i in this.textures) {\n      this.textures[i].destroy();\n    }\n    this._frames = null;\n    this._frameKeys = null;\n    this.data = null;\n    this.textures = null;\n    if (destroyBase) {\n      this._texture?.destroy();\n      this.textureSource.destroy();\n    }\n    this._texture = null;\n    this.textureSource = null;\n    this.linkedSheets = [];\n  }\n};\n/** The maximum number of Textures to build per process. */\n_Spritesheet.BATCH_SIZE = 1e3;\nlet Spritesheet = _Spritesheet;\n\nexport { Spritesheet };\n//# sourceMappingURL=Spritesheet.mjs.map\n","import { LoaderParserPriority } from '../assets/loader/parsers/LoaderParser.mjs';\nimport { Resolver } from '../assets/resolver/Resolver.mjs';\nimport { copySearchParams } from '../assets/utils/copySearchParams.mjs';\nimport { ExtensionType } from '../extensions/Extensions.mjs';\nimport { Texture } from '../rendering/renderers/shared/texture/Texture.mjs';\nimport { path } from '../utils/path.mjs';\nimport { Spritesheet } from './Spritesheet.mjs';\n\n\"use strict\";\nconst validImages = [\n  \"jpg\",\n  \"png\",\n  \"jpeg\",\n  \"avif\",\n  \"webp\",\n  \"basis\",\n  \"etc2\",\n  \"bc7\",\n  \"bc6h\",\n  \"bc5\",\n  \"bc4\",\n  \"bc3\",\n  \"bc2\",\n  \"bc1\",\n  \"eac\",\n  \"astc\"\n];\nfunction getCacheableAssets(keys, asset, ignoreMultiPack) {\n  const out = {};\n  keys.forEach((key) => {\n    out[key] = asset;\n  });\n  Object.keys(asset.textures).forEach((key) => {\n    out[key] = asset.textures[key];\n  });\n  if (!ignoreMultiPack) {\n    const basePath = path.dirname(keys[0]);\n    asset.linkedSheets.forEach((item, i) => {\n      const out2 = getCacheableAssets([`${basePath}/${asset.data.meta.related_multi_packs[i]}`], item, true);\n      Object.assign(out, out2);\n    });\n  }\n  return out;\n}\nconst spritesheetAsset = {\n  extension: ExtensionType.Asset,\n  /** Handle the caching of the related Spritesheet Textures */\n  cache: {\n    test: (asset) => asset instanceof Spritesheet,\n    getCacheableAssets: (keys, asset) => getCacheableAssets(keys, asset, false)\n  },\n  /** Resolve the resolution of the asset. */\n  resolver: {\n    extension: {\n      type: ExtensionType.ResolveParser,\n      name: \"resolveSpritesheet\"\n    },\n    test: (value) => {\n      const tempURL = value.split(\"?\")[0];\n      const split = tempURL.split(\".\");\n      const extension = split.pop();\n      const format = split.pop();\n      return extension === \"json\" && validImages.includes(format);\n    },\n    parse: (value) => {\n      const split = value.split(\".\");\n      return {\n        resolution: parseFloat(Resolver.RETINA_PREFIX.exec(value)?.[1] ?? \"1\"),\n        format: split[split.length - 2],\n        src: value\n      };\n    }\n  },\n  /**\n   * Loader plugin that parses sprite sheets!\n   * once the JSON has been loaded this checks to see if the JSON is spritesheet data.\n   * If it is, we load the spritesheets image and parse the data into Spritesheet\n   * All textures in the sprite sheet are then added to the cache\n   */\n  loader: {\n    name: \"spritesheetLoader\",\n    extension: {\n      type: ExtensionType.LoadParser,\n      priority: LoaderParserPriority.Normal,\n      name: \"spritesheetLoader\"\n    },\n    async testParse(asset, options) {\n      return path.extname(options.src).toLowerCase() === \".json\" && !!asset.frames;\n    },\n    async parse(asset, options, loader) {\n      const {\n        texture: imageTexture,\n        // if user need to use preloaded texture\n        imageFilename,\n        // if user need to use custom filename (not from jsonFile.meta.image)\n        textureOptions\n        // if user need to set texture options on texture\n      } = options?.data ?? {};\n      let basePath = path.dirname(options.src);\n      if (basePath && basePath.lastIndexOf(\"/\") !== basePath.length - 1) {\n        basePath += \"/\";\n      }\n      let texture;\n      if (imageTexture instanceof Texture) {\n        texture = imageTexture;\n      } else {\n        const imagePath = copySearchParams(basePath + (imageFilename ?? asset.meta.image), options.src);\n        const assets = await loader.load([{ src: imagePath, data: textureOptions }]);\n        texture = assets[imagePath];\n      }\n      const spritesheet = new Spritesheet(\n        texture.source,\n        asset\n      );\n      await spritesheet.parse();\n      const multiPacks = asset?.meta?.related_multi_packs;\n      if (Array.isArray(multiPacks)) {\n        const promises = [];\n        for (const item of multiPacks) {\n          if (typeof item !== \"string\") {\n            continue;\n          }\n          let itemUrl = basePath + item;\n          if (options.data?.ignoreMultiPack) {\n            continue;\n          }\n          itemUrl = copySearchParams(itemUrl, options.src);\n          promises.push(loader.load({\n            src: itemUrl,\n            data: {\n              textureOptions,\n              ignoreMultiPack: true\n            }\n          }));\n        }\n        const res = await Promise.all(promises);\n        spritesheet.linkedSheets = res;\n        res.forEach((item) => {\n          item.linkedSheets = [spritesheet].concat(spritesheet.linkedSheets.filter((sp) => sp !== item));\n        });\n      }\n      return spritesheet;\n    },\n    async unload(spritesheet, _resolvedAsset, loader) {\n      await loader.unload(spritesheet.textureSource._sourceOrigin);\n      spritesheet.destroy(false);\n    }\n  }\n};\n\nexport { spritesheetAsset };\n//# sourceMappingURL=spritesheetAsset.mjs.map\n","import { extensions } from '../extensions/Extensions.mjs';\nimport { spritesheetAsset } from './spritesheetAsset.mjs';\n\n\"use strict\";\nextensions.add(spritesheetAsset);\n//# sourceMappingURL=init.mjs.map\n","\"use strict\";\nconst idCounts = /* @__PURE__ */ Object.create(null);\nconst idHash = /* @__PURE__ */ Object.create(null);\nfunction createIdFromString(value, groupId) {\n  let id = idHash[value];\n  if (id === void 0) {\n    if (idCounts[groupId] === void 0) {\n      idCounts[groupId] = 1;\n    }\n    idHash[value] = id = idCounts[groupId]++;\n  }\n  return id;\n}\n\nexport { createIdFromString };\n//# sourceMappingURL=createIdFromString.mjs.map\n","import { DOMAdapter } from '../../../../../environment/adapter.mjs';\n\n\"use strict\";\nlet context;\nfunction getTestContext() {\n  if (!context || context?.isContextLost()) {\n    const canvas = DOMAdapter.get().createCanvas();\n    context = canvas.getContext(\"webgl\", {});\n  }\n  return context;\n}\n\nexport { getTestContext };\n//# sourceMappingURL=getTestContext.mjs.map\n","import { getTestContext } from './getTestContext.mjs';\n\n\"use strict\";\nlet maxFragmentPrecision;\nfunction getMaxFragmentPrecision() {\n  if (!maxFragmentPrecision) {\n    maxFragmentPrecision = \"mediump\";\n    const gl = getTestContext();\n    if (gl) {\n      if (gl.getShaderPrecisionFormat) {\n        const shaderFragment = gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT);\n        maxFragmentPrecision = shaderFragment.precision ? \"highp\" : \"mediump\";\n      }\n    }\n  }\n  return maxFragmentPrecision;\n}\n\nexport { getMaxFragmentPrecision };\n//# sourceMappingURL=getMaxFragmentPrecision.mjs.map\n","\"use strict\";\nfunction addProgramDefines(src, isES300, isFragment) {\n  if (isES300)\n    return src;\n  if (isFragment) {\n    src = src.replace(\"out vec4 finalColor;\", \"\");\n    return `\n        \n        #ifdef GL_ES // This checks if it is WebGL1\n        #define in varying\n        #define finalColor gl_FragColor\n        #define texture texture2D\n        #endif\n        ${src}\n        `;\n  }\n  return `\n        \n        #ifdef GL_ES // This checks if it is WebGL1\n        #define in attribute\n        #define out varying\n        #endif\n        ${src}\n        `;\n}\n\nexport { addProgramDefines };\n//# sourceMappingURL=addProgramDefines.mjs.map\n","\"use strict\";\nfunction ensurePrecision(src, options, isFragment) {\n  const maxSupportedPrecision = isFragment ? options.maxSupportedFragmentPrecision : options.maxSupportedVertexPrecision;\n  if (src.substring(0, 9) !== \"precision\") {\n    let precision = isFragment ? options.requestedFragmentPrecision : options.requestedVertexPrecision;\n    if (precision === \"highp\" && maxSupportedPrecision !== \"highp\") {\n      precision = \"mediump\";\n    }\n    return `precision ${precision} float;\n${src}`;\n  } else if (maxSupportedPrecision !== \"highp\" && src.substring(0, 15) === \"precision highp\") {\n    return src.replace(\"precision highp\", \"precision mediump\");\n  }\n  return src;\n}\n\nexport { ensurePrecision };\n//# sourceMappingURL=ensurePrecision.mjs.map\n","\"use strict\";\nfunction insertVersion(src, isES300) {\n  if (!isES300)\n    return src;\n  return `#version 300 es\n${src}`;\n}\n\nexport { insertVersion };\n//# sourceMappingURL=insertVersion.mjs.map\n","\"use strict\";\nconst fragmentNameCache = {};\nconst VertexNameCache = {};\nfunction setProgramName(src, { name = `pixi-program` }, isFragment = true) {\n  name = name.replace(/\\s+/g, \"-\");\n  name += isFragment ? \"-fragment\" : \"-vertex\";\n  const nameCache = isFragment ? fragmentNameCache : VertexNameCache;\n  if (nameCache[name]) {\n    nameCache[name]++;\n    name += `-${nameCache[name]}`;\n  } else {\n    nameCache[name] = 1;\n  }\n  if (src.indexOf(\"#define SHADER_NAME\") !== -1)\n    return src;\n  const shaderName = `#define SHADER_NAME ${name}`;\n  return `${shaderName}\n${src}`;\n}\n\nexport { setProgramName };\n//# sourceMappingURL=setProgramName.mjs.map\n","\"use strict\";\nfunction stripVersion(src, isES300) {\n  if (!isES300)\n    return src;\n  return src.replace(\"#version 300 es\", \"\");\n}\n\nexport { stripVersion };\n//# sourceMappingURL=stripVersion.mjs.map\n","import { createIdFromString } from '../../shared/utils/createIdFromString.mjs';\nimport { getMaxFragmentPrecision } from './program/getMaxFragmentPrecision.mjs';\nimport { addProgramDefines } from './program/preprocessors/addProgramDefines.mjs';\nimport { ensurePrecision } from './program/preprocessors/ensurePrecision.mjs';\nimport { insertVersion } from './program/preprocessors/insertVersion.mjs';\nimport { setProgramName } from './program/preprocessors/setProgramName.mjs';\nimport { stripVersion } from './program/preprocessors/stripVersion.mjs';\n\n\"use strict\";\nconst processes = {\n  // strips any version headers..\n  stripVersion,\n  // adds precision string if not already present\n  ensurePrecision,\n  // add some defines if WebGL1 to make it more compatible with WebGL2 shaders\n  addProgramDefines,\n  // add the program name to the shader\n  setProgramName,\n  // add the version string to the shader header\n  insertVersion\n};\nconst programCache = /* @__PURE__ */ Object.create(null);\nconst _GlProgram = class _GlProgram {\n  /**\n   * Creates a shiny new GlProgram. Used by WebGL renderer.\n   * @param options - The options for the program.\n   */\n  constructor(options) {\n    options = { ..._GlProgram.defaultOptions, ...options };\n    const isES300 = options.fragment.indexOf(\"#version 300 es\") !== -1;\n    const preprocessorOptions = {\n      stripVersion: isES300,\n      ensurePrecision: {\n        requestedFragmentPrecision: options.preferredFragmentPrecision,\n        requestedVertexPrecision: options.preferredVertexPrecision,\n        maxSupportedVertexPrecision: \"highp\",\n        maxSupportedFragmentPrecision: getMaxFragmentPrecision()\n      },\n      setProgramName: {\n        name: options.name\n      },\n      addProgramDefines: isES300,\n      insertVersion: isES300\n    };\n    let fragment = options.fragment;\n    let vertex = options.vertex;\n    Object.keys(processes).forEach((processKey) => {\n      const processOptions = preprocessorOptions[processKey];\n      fragment = processes[processKey](fragment, processOptions, true);\n      vertex = processes[processKey](vertex, processOptions, false);\n    });\n    this.fragment = fragment;\n    this.vertex = vertex;\n    this.transformFeedbackVaryings = options.transformFeedbackVaryings;\n    this._key = createIdFromString(`${this.vertex}:${this.fragment}`, \"gl-program\");\n  }\n  /** destroys the program */\n  destroy() {\n    this.fragment = null;\n    this.vertex = null;\n    this._attributeData = null;\n    this._uniformData = null;\n    this._uniformBlockData = null;\n    this.transformFeedbackVaryings = null;\n  }\n  /**\n   * Helper function that creates a program for a given source.\n   * It will check the program cache if the program has already been created.\n   * If it has that one will be returned, if not a new one will be created and cached.\n   * @param options - The options for the program.\n   * @returns A program using the same source\n   */\n  static from(options) {\n    const key = `${options.vertex}:${options.fragment}`;\n    if (!programCache[key]) {\n      programCache[key] = new _GlProgram(options);\n    }\n    return programCache[key];\n  }\n};\n/** The default options used by the program. */\n_GlProgram.defaultOptions = {\n  preferredVertexPrecision: \"highp\",\n  preferredFragmentPrecision: \"mediump\"\n};\nlet GlProgram = _GlProgram;\n\nexport { GlProgram };\n//# sourceMappingURL=GlProgram.mjs.map\n","\"use strict\";\nconst attributeFormatData = {\n  uint8x2: { size: 2, stride: 2, normalised: false },\n  uint8x4: { size: 4, stride: 4, normalised: false },\n  sint8x2: { size: 2, stride: 2, normalised: false },\n  sint8x4: { size: 4, stride: 4, normalised: false },\n  unorm8x2: { size: 2, stride: 2, normalised: true },\n  unorm8x4: { size: 4, stride: 4, normalised: true },\n  snorm8x2: { size: 2, stride: 2, normalised: true },\n  snorm8x4: { size: 4, stride: 4, normalised: true },\n  uint16x2: { size: 2, stride: 4, normalised: false },\n  uint16x4: { size: 4, stride: 8, normalised: false },\n  sint16x2: { size: 2, stride: 4, normalised: false },\n  sint16x4: { size: 4, stride: 8, normalised: false },\n  unorm16x2: { size: 2, stride: 4, normalised: true },\n  unorm16x4: { size: 4, stride: 8, normalised: true },\n  snorm16x2: { size: 2, stride: 4, normalised: true },\n  snorm16x4: { size: 4, stride: 8, normalised: true },\n  float16x2: { size: 2, stride: 4, normalised: false },\n  float16x4: { size: 4, stride: 8, normalised: false },\n  float32: { size: 1, stride: 4, normalised: false },\n  float32x2: { size: 2, stride: 8, normalised: false },\n  float32x3: { size: 3, stride: 12, normalised: false },\n  float32x4: { size: 4, stride: 16, normalised: false },\n  uint32: { size: 1, stride: 4, normalised: false },\n  uint32x2: { size: 2, stride: 8, normalised: false },\n  uint32x3: { size: 3, stride: 12, normalised: false },\n  uint32x4: { size: 4, stride: 16, normalised: false },\n  sint32: { size: 1, stride: 4, normalised: false },\n  sint32x2: { size: 2, stride: 8, normalised: false },\n  sint32x3: { size: 3, stride: 12, normalised: false },\n  sint32x4: { size: 4, stride: 16, normalised: false }\n};\nfunction getAttributeInfoFromFormat(format) {\n  return attributeFormatData[format] ?? attributeFormatData.float32;\n}\n\nexport { getAttributeInfoFromFormat };\n//# sourceMappingURL=getAttributeInfoFromFormat.mjs.map\n","import { getAttributeInfoFromFormat } from '../../../shared/geometry/utils/getAttributeInfoFromFormat.mjs';\n\n\"use strict\";\nconst WGSL_TO_VERTEX_TYPES = {\n  f32: \"float32\",\n  \"vec2<f32>\": \"float32x2\",\n  \"vec3<f32>\": \"float32x3\",\n  \"vec4<f32>\": \"float32x4\",\n  vec2f: \"float32x2\",\n  vec3f: \"float32x3\",\n  vec4f: \"float32x4\",\n  i32: \"sint32\",\n  \"vec2<i32>\": \"sint32x2\",\n  \"vec3<i32>\": \"sint32x3\",\n  \"vec4<i32>\": \"sint32x4\",\n  u32: \"uint32\",\n  \"vec2<u32>\": \"uint32x2\",\n  \"vec3<u32>\": \"uint32x3\",\n  \"vec4<u32>\": \"uint32x4\",\n  bool: \"uint32\",\n  \"vec2<bool>\": \"uint32x2\",\n  \"vec3<bool>\": \"uint32x3\",\n  \"vec4<bool>\": \"uint32x4\"\n};\nfunction extractAttributesFromGpuProgram({ source, entryPoint }) {\n  const results = {};\n  const mainVertStart = source.indexOf(`fn ${entryPoint}`);\n  if (mainVertStart !== -1) {\n    const arrowFunctionStart = source.indexOf(\"->\", mainVertStart);\n    if (arrowFunctionStart !== -1) {\n      const functionArgsSubstring = source.substring(mainVertStart, arrowFunctionStart);\n      const inputsRegex = /@location\\((\\d+)\\)\\s+([a-zA-Z0-9_]+)\\s*:\\s*([a-zA-Z0-9_<>]+)(?:,|\\s|$)/g;\n      let match;\n      while ((match = inputsRegex.exec(functionArgsSubstring)) !== null) {\n        const format = WGSL_TO_VERTEX_TYPES[match[3]] ?? \"float32\";\n        results[match[2]] = {\n          location: parseInt(match[1], 10),\n          format,\n          stride: getAttributeInfoFromFormat(format).stride,\n          offset: 0,\n          instance: false,\n          start: 0\n        };\n      }\n    }\n  }\n  return results;\n}\n\nexport { extractAttributesFromGpuProgram };\n//# sourceMappingURL=extractAttributesFromGpuProgram.mjs.map\n","\"use strict\";\nfunction extractStructAndGroups(wgsl) {\n  const linePattern = /(^|[^/])@(group|binding)\\(\\d+\\)[^;]+;/g;\n  const groupPattern = /@group\\((\\d+)\\)/;\n  const bindingPattern = /@binding\\((\\d+)\\)/;\n  const namePattern = /var(<[^>]+>)? (\\w+)/;\n  const typePattern = /:\\s*(\\w+)/;\n  const structPattern = /struct\\s+(\\w+)\\s*{([^}]+)}/g;\n  const structMemberPattern = /(\\w+)\\s*:\\s*([\\w\\<\\>]+)/g;\n  const structName = /struct\\s+(\\w+)/;\n  const groups = wgsl.match(linePattern)?.map((item) => ({\n    group: parseInt(item.match(groupPattern)[1], 10),\n    binding: parseInt(item.match(bindingPattern)[1], 10),\n    name: item.match(namePattern)[2],\n    isUniform: item.match(namePattern)[1] === \"<uniform>\",\n    type: item.match(typePattern)[1]\n  }));\n  if (!groups) {\n    return {\n      groups: [],\n      structs: []\n    };\n  }\n  const structs = wgsl.match(structPattern)?.map((struct) => {\n    const name = struct.match(structName)[1];\n    const members = struct.match(structMemberPattern).reduce((acc, member) => {\n      const [name2, type] = member.split(\":\");\n      acc[name2.trim()] = type.trim();\n      return acc;\n    }, {});\n    if (!members) {\n      return null;\n    }\n    return { name, members };\n  }).filter(({ name }) => groups.some((group) => group.type === name)) ?? [];\n  return {\n    groups,\n    structs\n  };\n}\n\nexport { extractStructAndGroups };\n//# sourceMappingURL=extractStructAndGroups.mjs.map\n","\"use strict\";\nvar ShaderStage = /* @__PURE__ */ ((ShaderStage2) => {\n  ShaderStage2[ShaderStage2[\"VERTEX\"] = 1] = \"VERTEX\";\n  ShaderStage2[ShaderStage2[\"FRAGMENT\"] = 2] = \"FRAGMENT\";\n  ShaderStage2[ShaderStage2[\"COMPUTE\"] = 4] = \"COMPUTE\";\n  return ShaderStage2;\n})(ShaderStage || {});\n\nexport { ShaderStage };\n//# sourceMappingURL=const.mjs.map\n","import { ShaderStage } from '../../../shared/shader/const.mjs';\n\n\"use strict\";\nfunction generateGpuLayoutGroups({ groups }) {\n  const layout = [];\n  for (let i = 0; i < groups.length; i++) {\n    const group = groups[i];\n    if (!layout[group.group]) {\n      layout[group.group] = [];\n    }\n    if (group.isUniform) {\n      layout[group.group].push({\n        binding: group.binding,\n        visibility: ShaderStage.VERTEX | ShaderStage.FRAGMENT,\n        buffer: {\n          type: \"uniform\"\n        }\n      });\n    } else if (group.type === \"sampler\") {\n      layout[group.group].push({\n        binding: group.binding,\n        visibility: ShaderStage.FRAGMENT,\n        sampler: {\n          type: \"filtering\"\n        }\n      });\n    } else if (group.type === \"texture_2d\") {\n      layout[group.group].push({\n        binding: group.binding,\n        visibility: ShaderStage.FRAGMENT,\n        texture: {\n          sampleType: \"float\",\n          viewDimension: \"2d\",\n          multisampled: false\n        }\n      });\n    }\n  }\n  return layout;\n}\n\nexport { generateGpuLayoutGroups };\n//# sourceMappingURL=generateGpuLayoutGroups.mjs.map\n","\"use strict\";\nfunction generateLayoutHash({ groups }) {\n  const layout = [];\n  for (let i = 0; i < groups.length; i++) {\n    const group = groups[i];\n    if (!layout[group.group]) {\n      layout[group.group] = {};\n    }\n    layout[group.group][group.name] = group.binding;\n  }\n  return layout;\n}\n\nexport { generateLayoutHash };\n//# sourceMappingURL=generateLayoutHash.mjs.map\n","\"use strict\";\nfunction removeStructAndGroupDuplicates(vertexStructsAndGroups, fragmentStructsAndGroups) {\n  const structNameSet = /* @__PURE__ */ new Set();\n  const dupeGroupKeySet = /* @__PURE__ */ new Set();\n  const structs = [...vertexStructsAndGroups.structs, ...fragmentStructsAndGroups.structs].filter((struct) => {\n    if (structNameSet.has(struct.name)) {\n      return false;\n    }\n    structNameSet.add(struct.name);\n    return true;\n  });\n  const groups = [...vertexStructsAndGroups.groups, ...fragmentStructsAndGroups.groups].filter((group) => {\n    const key = `${group.name}-${group.binding}`;\n    if (dupeGroupKeySet.has(key)) {\n      return false;\n    }\n    dupeGroupKeySet.add(key);\n    return true;\n  });\n  return { structs, groups };\n}\n\nexport { removeStructAndGroupDuplicates };\n//# sourceMappingURL=removeStructAndGroupDuplicates.mjs.map\n","import { createIdFromString } from '../../shared/utils/createIdFromString.mjs';\nimport { extractAttributesFromGpuProgram } from './utils/extractAttributesFromGpuProgram.mjs';\nimport { extractStructAndGroups } from './utils/extractStructAndGroups.mjs';\nimport { generateGpuLayoutGroups } from './utils/generateGpuLayoutGroups.mjs';\nimport { generateLayoutHash } from './utils/generateLayoutHash.mjs';\nimport { removeStructAndGroupDuplicates } from './utils/removeStructAndGroupDuplicates.mjs';\n\n\"use strict\";\nconst programCache = /* @__PURE__ */ Object.create(null);\nclass GpuProgram {\n  /**\n   * Create a new GpuProgram\n   * @param options - The options for the gpu program\n   */\n  constructor(options) {\n    /**\n     * @internal\n     * @ignore\n     */\n    this._layoutKey = 0;\n    /**\n     * @internal\n     * @ignore\n     */\n    this._attributeLocationsKey = 0;\n    const { fragment, vertex, layout, gpuLayout, name } = options;\n    this.name = name;\n    this.fragment = fragment;\n    this.vertex = vertex;\n    if (fragment.source === vertex.source) {\n      const structsAndGroups = extractStructAndGroups(fragment.source);\n      this.structsAndGroups = structsAndGroups;\n    } else {\n      const vertexStructsAndGroups = extractStructAndGroups(vertex.source);\n      const fragmentStructsAndGroups = extractStructAndGroups(fragment.source);\n      this.structsAndGroups = removeStructAndGroupDuplicates(vertexStructsAndGroups, fragmentStructsAndGroups);\n    }\n    this.layout = layout ?? generateLayoutHash(this.structsAndGroups);\n    this.gpuLayout = gpuLayout ?? generateGpuLayoutGroups(this.structsAndGroups);\n    this.autoAssignGlobalUniforms = !!(this.layout[0]?.globalUniforms !== void 0);\n    this.autoAssignLocalUniforms = !!(this.layout[1]?.localUniforms !== void 0);\n    this._generateProgramKey();\n  }\n  // TODO maker this pure\n  _generateProgramKey() {\n    const { vertex, fragment } = this;\n    const bigKey = vertex.source + fragment.source + vertex.entryPoint + fragment.entryPoint;\n    this._layoutKey = createIdFromString(bigKey, \"program\");\n  }\n  get attributeData() {\n    this._attributeData ?? (this._attributeData = extractAttributesFromGpuProgram(this.vertex));\n    return this._attributeData;\n  }\n  /** destroys the program */\n  destroy() {\n    this.gpuLayout = null;\n    this.layout = null;\n    this.structsAndGroups = null;\n    this.fragment = null;\n    this.vertex = null;\n  }\n  /**\n   * Helper function that creates a program for a given source.\n   * It will check the program cache if the program has already been created.\n   * If it has that one will be returned, if not a new one will be created and cached.\n   * @param options - The options for the program.\n   * @returns A program using the same source\n   */\n  static from(options) {\n    const key = `${options.vertex.source}:${options.fragment.source}:${options.fragment.entryPoint}:${options.vertex.entryPoint}`;\n    if (!programCache[key]) {\n      programCache[key] = new GpuProgram(options);\n    }\n    return programCache[key];\n  }\n}\n\nexport { GpuProgram };\n//# sourceMappingURL=GpuProgram.mjs.map\n","\"use strict\";\nconst UNIFORM_TYPES_VALUES = [\n  \"f32\",\n  \"i32\",\n  \"vec2<f32>\",\n  \"vec3<f32>\",\n  \"vec4<f32>\",\n  \"mat2x2<f32>\",\n  \"mat3x3<f32>\",\n  \"mat4x4<f32>\",\n  \"mat3x2<f32>\",\n  \"mat4x2<f32>\",\n  \"mat2x3<f32>\",\n  \"mat4x3<f32>\",\n  \"mat2x4<f32>\",\n  \"mat3x4<f32>\",\n  \"vec2<i32>\",\n  \"vec3<i32>\",\n  \"vec4<i32>\"\n];\nconst UNIFORM_TYPES_MAP = UNIFORM_TYPES_VALUES.reduce((acc, type) => {\n  acc[type] = true;\n  return acc;\n}, {});\n\nexport { UNIFORM_TYPES_MAP, UNIFORM_TYPES_VALUES };\n//# sourceMappingURL=types.mjs.map\n","\"use strict\";\nfunction getDefaultUniformValue(type, size) {\n  switch (type) {\n    case \"f32\":\n      return 0;\n    case \"vec2<f32>\":\n      return new Float32Array(2 * size);\n    case \"vec3<f32>\":\n      return new Float32Array(3 * size);\n    case \"vec4<f32>\":\n      return new Float32Array(4 * size);\n    case \"mat2x2<f32>\":\n      return new Float32Array([\n        1,\n        0,\n        0,\n        1\n      ]);\n    case \"mat3x3<f32>\":\n      return new Float32Array([\n        1,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        1\n      ]);\n    case \"mat4x4<f32>\":\n      return new Float32Array([\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1\n      ]);\n  }\n  return null;\n}\n\nexport { getDefaultUniformValue };\n//# sourceMappingURL=getDefaultUniformValue.mjs.map\n","import { uid } from '../../../../utils/data/uid.mjs';\nimport { createIdFromString } from '../utils/createIdFromString.mjs';\nimport { UNIFORM_TYPES_MAP, UNIFORM_TYPES_VALUES } from './types.mjs';\nimport { getDefaultUniformValue } from './utils/getDefaultUniformValue.mjs';\n\n\"use strict\";\nconst _UniformGroup = class _UniformGroup {\n  /**\n   * Create a new Uniform group\n   * @param uniformStructures - The structures of the uniform group\n   * @param options - The optional parameters of this uniform group\n   */\n  constructor(uniformStructures, options) {\n    /** used internally to know if a uniform group was used in the last render pass */\n    this._touched = 0;\n    /** a unique id for this uniform group used through the renderer */\n    this.uid = uid(\"uniform\");\n    /** a resource type, used to identify how to handle it when its in a bind group / shader resource */\n    this._resourceType = \"uniformGroup\";\n    /** the resource id used internally by the renderer to build bind group keys */\n    this._resourceId = uid(\"resource\");\n    /** used ito identify if this is a uniform group */\n    this.isUniformGroup = true;\n    /**\n     * used to flag if this Uniform groups data is different from what it has stored in its buffer / on the GPU\n     * @internal\n     * @ignore\n     */\n    this._dirtyId = 0;\n    // implementing the interface - UniformGroup are not destroyed\n    this.destroyed = false;\n    options = { ..._UniformGroup.defaultOptions, ...options };\n    this.uniformStructures = uniformStructures;\n    const uniforms = {};\n    for (const i in uniformStructures) {\n      const uniformData = uniformStructures[i];\n      uniformData.name = i;\n      uniformData.size = uniformData.size ?? 1;\n      if (!UNIFORM_TYPES_MAP[uniformData.type]) {\n        throw new Error(`Uniform type ${uniformData.type} is not supported. Supported uniform types are: ${UNIFORM_TYPES_VALUES.join(\", \")}`);\n      }\n      uniformData.value ?? (uniformData.value = getDefaultUniformValue(uniformData.type, uniformData.size));\n      uniforms[i] = uniformData.value;\n    }\n    this.uniforms = uniforms;\n    this._dirtyId = 1;\n    this.ubo = options.ubo;\n    this.isStatic = options.isStatic;\n    this._signature = createIdFromString(Object.keys(uniforms).map(\n      (i) => `${i}-${uniformStructures[i].type}`\n    ).join(\"-\"), \"uniform-group\");\n  }\n  /** Call this if you want the uniform groups data to be uploaded to the GPU only useful if `isStatic` is true. */\n  update() {\n    this._dirtyId++;\n  }\n};\n/** The default options used by the uniform group. */\n_UniformGroup.defaultOptions = {\n  /** if true the UniformGroup is handled as an Uniform buffer object. */\n  ubo: false,\n  /** if true, then you are responsible for when the data is uploaded to the GPU by calling `update()` */\n  isStatic: false\n};\nlet UniformGroup = _UniformGroup;\n\nexport { UniformGroup };\n//# sourceMappingURL=UniformGroup.mjs.map\n","\"use strict\";\nclass BindGroup {\n  /**\n   * Create a new instance eof the Bind Group.\n   * @param resources - The resources that are bound together for use by a shader.\n   */\n  constructor(resources) {\n    /** The resources that are bound together for use by a shader. */\n    this.resources = /* @__PURE__ */ Object.create(null);\n    this._dirty = true;\n    let index = 0;\n    for (const i in resources) {\n      const resource = resources[i];\n      this.setResource(resource, index++);\n    }\n    this._updateKey();\n  }\n  /**\n   * Updates the key if its flagged as dirty. This is used internally to\n   * match this bind group to a WebGPU BindGroup.\n   * @internal\n   * @ignore\n   */\n  _updateKey() {\n    if (!this._dirty)\n      return;\n    this._dirty = false;\n    const keyParts = [];\n    let index = 0;\n    for (const i in this.resources) {\n      keyParts[index++] = this.resources[i]._resourceId;\n    }\n    this._key = keyParts.join(\"|\");\n  }\n  /**\n   * Set a resource at a given index. this function will\n   * ensure that listeners will be removed from the current resource\n   * and added to the new resource.\n   * @param resource - The resource to set.\n   * @param index - The index to set the resource at.\n   */\n  setResource(resource, index) {\n    const currentResource = this.resources[index];\n    if (resource === currentResource)\n      return;\n    if (currentResource) {\n      resource.off?.(\"change\", this.onResourceChange, this);\n    }\n    resource.on?.(\"change\", this.onResourceChange, this);\n    this.resources[index] = resource;\n    this._dirty = true;\n  }\n  /**\n   * Returns the resource at the current specified index.\n   * @param index - The index of the resource to get.\n   * @returns - The resource at the specified index.\n   */\n  getResource(index) {\n    return this.resources[index];\n  }\n  /**\n   * Used internally to 'touch' each resource, to ensure that the GC\n   * knows that all resources in this bind group are still being used.\n   * @param tick - The current tick.\n   * @internal\n   * @ignore\n   */\n  _touch(tick) {\n    const resources = this.resources;\n    for (const i in resources) {\n      resources[i]._touched = tick;\n    }\n  }\n  /** Destroys this bind group and removes all listeners. */\n  destroy() {\n    const resources = this.resources;\n    for (const i in resources) {\n      const resource = resources[i];\n      resource.off?.(\"change\", this.onResourceChange, this);\n    }\n    this.resources = null;\n  }\n  onResourceChange(resource) {\n    this._dirty = true;\n    if (resource.destroyed) {\n      const resources = this.resources;\n      for (const i in resources) {\n        if (resources[i] === resource) {\n          resources[i] = null;\n        }\n      }\n    } else {\n      this._updateKey();\n    }\n  }\n}\n\nexport { BindGroup };\n//# sourceMappingURL=BindGroup.mjs.map\n","\"use strict\";\nvar RendererType = /* @__PURE__ */ ((RendererType2) => {\n  RendererType2[RendererType2[\"WEBGL\"] = 1] = \"WEBGL\";\n  RendererType2[RendererType2[\"WEBGPU\"] = 2] = \"WEBGPU\";\n  RendererType2[RendererType2[\"BOTH\"] = 3] = \"BOTH\";\n  return RendererType2;\n})(RendererType || {});\n\nexport { RendererType };\n//# sourceMappingURL=types.mjs.map\n","import EventEmitter from 'eventemitter3';\nimport { uid } from '../../../../utils/data/uid.mjs';\nimport { GlProgram } from '../../gl/shader/GlProgram.mjs';\nimport { BindGroup } from '../../gpu/shader/BindGroup.mjs';\nimport { GpuProgram } from '../../gpu/shader/GpuProgram.mjs';\nimport { RendererType } from '../../types.mjs';\nimport { UniformGroup } from './UniformGroup.mjs';\n\n\"use strict\";\nclass Shader extends EventEmitter {\n  constructor(options) {\n    super();\n    /** A unique identifier for the shader */\n    this.uid = uid(\"shader\");\n    /**\n     * A record of the uniform groups and resources used by the shader.\n     * This is used by WebGL renderer to sync uniform data.\n     * @internal\n     * @ignore\n     */\n    this._uniformBindMap = /* @__PURE__ */ Object.create(null);\n    this._ownedBindGroups = [];\n    let {\n      gpuProgram,\n      glProgram,\n      groups,\n      resources,\n      compatibleRenderers,\n      groupMap\n    } = options;\n    this.gpuProgram = gpuProgram;\n    this.glProgram = glProgram;\n    if (compatibleRenderers === void 0) {\n      compatibleRenderers = 0;\n      if (gpuProgram)\n        compatibleRenderers |= RendererType.WEBGPU;\n      if (glProgram)\n        compatibleRenderers |= RendererType.WEBGL;\n    }\n    this.compatibleRenderers = compatibleRenderers;\n    const nameHash = {};\n    if (!resources && !groups) {\n      resources = {};\n    }\n    if (resources && groups) {\n      throw new Error(\"[Shader] Cannot have both resources and groups\");\n    } else if (!gpuProgram && groups && !groupMap) {\n      throw new Error(\"[Shader] No group map or WebGPU shader provided - consider using resources instead.\");\n    } else if (!gpuProgram && groups && groupMap) {\n      for (const i in groupMap) {\n        for (const j in groupMap[i]) {\n          const uniformName = groupMap[i][j];\n          nameHash[uniformName] = {\n            group: i,\n            binding: j,\n            name: uniformName\n          };\n        }\n      }\n    } else if (gpuProgram && groups && !groupMap) {\n      const groupData = gpuProgram.structsAndGroups.groups;\n      groupMap = {};\n      groupData.forEach((data) => {\n        groupMap[data.group] = groupMap[data.group] || {};\n        groupMap[data.group][data.binding] = data.name;\n        nameHash[data.name] = data;\n      });\n    } else if (resources) {\n      groups = {};\n      groupMap = {};\n      if (gpuProgram) {\n        const groupData = gpuProgram.structsAndGroups.groups;\n        groupData.forEach((data) => {\n          groupMap[data.group] = groupMap[data.group] || {};\n          groupMap[data.group][data.binding] = data.name;\n          nameHash[data.name] = data;\n        });\n      }\n      let bindTick = 0;\n      for (const i in resources) {\n        if (nameHash[i])\n          continue;\n        if (!groups[99]) {\n          groups[99] = new BindGroup();\n          this._ownedBindGroups.push(groups[99]);\n        }\n        nameHash[i] = { group: 99, binding: bindTick, name: i };\n        groupMap[99] = groupMap[99] || {};\n        groupMap[99][bindTick] = i;\n        bindTick++;\n      }\n      for (const i in resources) {\n        const name = i;\n        let value = resources[i];\n        if (!value.source && !value._resourceType) {\n          value = new UniformGroup(value);\n        }\n        const data = nameHash[name];\n        if (data) {\n          if (!groups[data.group]) {\n            groups[data.group] = new BindGroup();\n            this._ownedBindGroups.push(groups[data.group]);\n          }\n          groups[data.group].setResource(value, data.binding);\n        }\n      }\n    }\n    this.groups = groups;\n    this._uniformBindMap = groupMap;\n    this.resources = this._buildResourceAccessor(groups, nameHash);\n  }\n  /**\n   * Sometimes a resource group will be provided later (for example global uniforms)\n   * In such cases, this method can be used to let the shader know about the group.\n   * @param name - the name of the resource group\n   * @param groupIndex - the index of the group (should match the webGPU shader group location)\n   * @param bindIndex - the index of the bind point (should match the webGPU shader bind point)\n   */\n  addResource(name, groupIndex, bindIndex) {\n    var _a, _b;\n    (_a = this._uniformBindMap)[groupIndex] || (_a[groupIndex] = {});\n    (_b = this._uniformBindMap[groupIndex])[bindIndex] || (_b[bindIndex] = name);\n    if (!this.groups[groupIndex]) {\n      this.groups[groupIndex] = new BindGroup();\n      this._ownedBindGroups.push(this.groups[groupIndex]);\n    }\n  }\n  _buildResourceAccessor(groups, nameHash) {\n    const uniformsOut = {};\n    for (const i in nameHash) {\n      const data = nameHash[i];\n      Object.defineProperty(uniformsOut, data.name, {\n        get() {\n          return groups[data.group].getResource(data.binding);\n        },\n        set(value) {\n          groups[data.group].setResource(value, data.binding);\n        }\n      });\n    }\n    return uniformsOut;\n  }\n  /**\n   * Use to destroy the shader when its not longer needed.\n   * It will destroy the resources and remove listeners.\n   * @param destroyPrograms - if the programs should be destroyed as well.\n   * Make sure its not being used by other shaders!\n   */\n  destroy(destroyPrograms = false) {\n    this.emit(\"destroy\", this);\n    if (destroyPrograms) {\n      this.gpuProgram?.destroy();\n      this.glProgram?.destroy();\n    }\n    this.gpuProgram = null;\n    this.glProgram = null;\n    this.removeAllListeners();\n    this._uniformBindMap = null;\n    this._ownedBindGroups.forEach((bindGroup) => {\n      bindGroup.destroy();\n    });\n    this._ownedBindGroups = null;\n    this.resources = null;\n    this.groups = null;\n  }\n  static from(options) {\n    const { gpu, gl, ...rest } = options;\n    let gpuProgram;\n    let glProgram;\n    if (gpu) {\n      gpuProgram = GpuProgram.from(gpu);\n    }\n    if (gl) {\n      glProgram = GlProgram.from(gl);\n    }\n    return new Shader({\n      gpuProgram,\n      glProgram,\n      ...rest\n    });\n  }\n}\n\nexport { Shader };\n//# sourceMappingURL=Shader.mjs.map\n","\"use strict\";\nconst blendModeIds = {\n  normal: 0,\n  add: 1,\n  multiply: 2,\n  screen: 3,\n  overlay: 4,\n  erase: 5,\n  \"normal-npm\": 6,\n  \"add-npm\": 7,\n  \"screen-npm\": 8,\n  min: 9,\n  max: 10\n};\nconst BLEND = 0;\nconst OFFSET = 1;\nconst CULLING = 2;\nconst DEPTH_TEST = 3;\nconst WINDING = 4;\nconst DEPTH_MASK = 5;\nconst _State = class _State {\n  constructor() {\n    this.data = 0;\n    this.blendMode = \"normal\";\n    this.polygonOffset = 0;\n    this.blend = true;\n    this.depthMask = true;\n  }\n  /**\n   * Activates blending of the computed fragment color values.\n   * @default true\n   */\n  get blend() {\n    return !!(this.data & 1 << BLEND);\n  }\n  set blend(value) {\n    if (!!(this.data & 1 << BLEND) !== value) {\n      this.data ^= 1 << BLEND;\n    }\n  }\n  /**\n   * Activates adding an offset to depth values of polygon's fragments\n   * @default false\n   */\n  get offsets() {\n    return !!(this.data & 1 << OFFSET);\n  }\n  set offsets(value) {\n    if (!!(this.data & 1 << OFFSET) !== value) {\n      this.data ^= 1 << OFFSET;\n    }\n  }\n  /** The culling settings for this state none - No culling back - Back face culling front - Front face culling */\n  set cullMode(value) {\n    if (value === \"none\") {\n      this.culling = false;\n      return;\n    }\n    this.culling = true;\n    this.clockwiseFrontFace = value === \"front\";\n  }\n  get cullMode() {\n    if (!this.culling) {\n      return \"none\";\n    }\n    return this.clockwiseFrontFace ? \"front\" : \"back\";\n  }\n  /**\n   * Activates culling of polygons.\n   * @default false\n   */\n  get culling() {\n    return !!(this.data & 1 << CULLING);\n  }\n  set culling(value) {\n    if (!!(this.data & 1 << CULLING) !== value) {\n      this.data ^= 1 << CULLING;\n    }\n  }\n  /**\n   * Activates depth comparisons and updates to the depth buffer.\n   * @default false\n   */\n  get depthTest() {\n    return !!(this.data & 1 << DEPTH_TEST);\n  }\n  set depthTest(value) {\n    if (!!(this.data & 1 << DEPTH_TEST) !== value) {\n      this.data ^= 1 << DEPTH_TEST;\n    }\n  }\n  /**\n   * Enables or disables writing to the depth buffer.\n   * @default true\n   */\n  get depthMask() {\n    return !!(this.data & 1 << DEPTH_MASK);\n  }\n  set depthMask(value) {\n    if (!!(this.data & 1 << DEPTH_MASK) !== value) {\n      this.data ^= 1 << DEPTH_MASK;\n    }\n  }\n  /**\n   * Specifies whether or not front or back-facing polygons can be culled.\n   * @default false\n   */\n  get clockwiseFrontFace() {\n    return !!(this.data & 1 << WINDING);\n  }\n  set clockwiseFrontFace(value) {\n    if (!!(this.data & 1 << WINDING) !== value) {\n      this.data ^= 1 << WINDING;\n    }\n  }\n  /**\n   * The blend mode to be applied when this state is set. Apply a value of `normal` to reset the blend mode.\n   * Setting this mode to anything other than NO_BLEND will automatically switch blending on.\n   * @default 'normal'\n   */\n  get blendMode() {\n    return this._blendMode;\n  }\n  set blendMode(value) {\n    this.blend = value !== \"none\";\n    this._blendMode = value;\n    this._blendModeId = blendModeIds[value] || 0;\n  }\n  /**\n   * The polygon offset. Setting this property to anything other than 0 will automatically enable polygon offset fill.\n   * @default 0\n   */\n  get polygonOffset() {\n    return this._polygonOffset;\n  }\n  set polygonOffset(value) {\n    this.offsets = !!value;\n    this._polygonOffset = value;\n  }\n  toString() {\n    return `[pixi.js/core:State blendMode=${this.blendMode} clockwiseFrontFace=${this.clockwiseFrontFace} culling=${this.culling} depthMask=${this.depthMask} polygonOffset=${this.polygonOffset}]`;\n  }\n  /**\n   * A quickly getting an instance of a State that is configured for 2d rendering.\n   * @returns a new State with values set for 2d rendering\n   */\n  static for2d() {\n    const state = new _State();\n    state.depthTest = false;\n    state.blend = true;\n    return state;\n  }\n};\n_State.default2d = _State.for2d();\nlet State = _State;\n\nexport { State };\n//# sourceMappingURL=State.mjs.map\n","import { extensions, ExtensionType } from '../extensions/Extensions.mjs';\n\n\"use strict\";\nconst environments = [];\nextensions.handleByNamedList(ExtensionType.Environment, environments);\nasync function loadEnvironmentExtensions(skip) {\n  if (skip)\n    return;\n  for (let i = 0; i < environments.length; i++) {\n    const env = environments[i];\n    if (env.value.test()) {\n      await env.value.load();\n      return;\n    }\n  }\n}\nasync function autoDetectEnvironment(add) {\n  return loadEnvironmentExtensions(!add);\n}\n\nexport { autoDetectEnvironment, loadEnvironmentExtensions };\n//# sourceMappingURL=autoDetectEnvironment.mjs.map\n","\"use strict\";\nlet unsafeEval;\nfunction unsafeEvalSupported() {\n  if (typeof unsafeEval === \"boolean\") {\n    return unsafeEval;\n  }\n  try {\n    const func = new Function(\"param1\", \"param2\", \"param3\", \"return param1[param2] === param3;\");\n    unsafeEval = func({ a: \"b\" }, \"a\", \"b\") === true;\n  } catch (_e) {\n    unsafeEval = false;\n  }\n  return unsafeEval;\n}\n\nexport { unsafeEvalSupported };\n//# sourceMappingURL=unsafeEvalSupported.mjs.map\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim | 0);\n            triangles.push(ear.i / dim | 0);\n            triangles.push(next.i / dim | 0);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    var p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(x0, y0, minX, minY, invSize),\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim | 0);\n            triangles.push(p.i / dim | 0);\n            triangles.push(b.i / dim | 0);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    var bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    var bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = (x - minX) * invSize | 0;\n    y = (y - minY) * invSize | 0;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n           (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n           (bx - px) * (cy - py) >= (cx - px) * (by - py);\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = 0;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","\"use strict\";\nvar CLEAR = /* @__PURE__ */ ((CLEAR2) => {\n  CLEAR2[CLEAR2[\"NONE\"] = 0] = \"NONE\";\n  CLEAR2[CLEAR2[\"COLOR\"] = 16384] = \"COLOR\";\n  CLEAR2[CLEAR2[\"STENCIL\"] = 1024] = \"STENCIL\";\n  CLEAR2[CLEAR2[\"DEPTH\"] = 256] = \"DEPTH\";\n  CLEAR2[CLEAR2[\"COLOR_DEPTH\"] = 16640] = \"COLOR_DEPTH\";\n  CLEAR2[CLEAR2[\"COLOR_STENCIL\"] = 17408] = \"COLOR_STENCIL\";\n  CLEAR2[CLEAR2[\"DEPTH_STENCIL\"] = 1280] = \"DEPTH_STENCIL\";\n  CLEAR2[CLEAR2[\"ALL\"] = 17664] = \"ALL\";\n  return CLEAR2;\n})(CLEAR || {});\n\nexport { CLEAR };\n//# sourceMappingURL=const.mjs.map\n","\"use strict\";\nclass SystemRunner {\n  /**\n   * @param name - The function name that will be executed on the listeners added to this Runner.\n   */\n  constructor(name) {\n    this.items = [];\n    this._name = name;\n  }\n  /* jsdoc/check-param-names */\n  /**\n   * Dispatch/Broadcast Runner to all listeners added to the queue.\n   * @param {...any} params - (optional) parameters to pass to each listener\n   */\n  /* jsdoc/check-param-names */\n  emit(a0, a1, a2, a3, a4, a5, a6, a7) {\n    const { name, items } = this;\n    for (let i = 0, len = items.length; i < len; i++) {\n      items[i][name](a0, a1, a2, a3, a4, a5, a6, a7);\n    }\n    return this;\n  }\n  /**\n   * Add a listener to the Runner\n   *\n   * Runners do not need to have scope or functions passed to them.\n   * All that is required is to pass the listening object and ensure that it has contains a function that has the same name\n   * as the name provided to the Runner when it was created.\n   *\n   * Eg A listener passed to this Runner will require a 'complete' function.\n   *\n   * ```\n   * import { Runner } from 'pixi.js';\n   *\n   * const complete = new Runner('complete');\n   * ```\n   *\n   * The scope used will be the object itself.\n   * @param {any} item - The object that will be listening.\n   */\n  add(item) {\n    if (item[this._name]) {\n      this.remove(item);\n      this.items.push(item);\n    }\n    return this;\n  }\n  /**\n   * Remove a single listener from the dispatch queue.\n   * @param {any} item - The listener that you would like to remove.\n   */\n  remove(item) {\n    const index = this.items.indexOf(item);\n    if (index !== -1) {\n      this.items.splice(index, 1);\n    }\n    return this;\n  }\n  /**\n   * Check to see if the listener is already in the Runner\n   * @param {any} item - The listener that you would like to check.\n   */\n  contains(item) {\n    return this.items.indexOf(item) !== -1;\n  }\n  /** Remove all listeners from the Runner */\n  removeAll() {\n    this.items.length = 0;\n    return this;\n  }\n  /** Remove all references, don't use after this. */\n  destroy() {\n    this.removeAll();\n    this.items = null;\n    this._name = null;\n  }\n  /**\n   * `true` if there are no this Runner contains no listeners\n   * @readonly\n   */\n  get empty() {\n    return this.items.length === 0;\n  }\n  /**\n   * The name of the runner.\n   * @readonly\n   */\n  get name() {\n    return this._name;\n  }\n}\n\nexport { SystemRunner };\n//# sourceMappingURL=SystemRunner.mjs.map\n","import { Color } from '../../../../color/Color.mjs';\nimport { loadEnvironmentExtensions } from '../../../../environment/autoDetectEnvironment.mjs';\nimport { Container } from '../../../../scene/container/Container.mjs';\nimport { unsafeEvalSupported } from '../../../../utils/browser/unsafeEvalSupported.mjs';\nimport { deprecation, v8_0_0 } from '../../../../utils/logging/deprecation.mjs';\nimport '../../../../utils/utils.mjs';\nimport { CLEAR } from '../../gl/const.mjs';\nimport { SystemRunner } from './SystemRunner.mjs';\nimport EventEmitter from 'eventemitter3';\n\n\"use strict\";\nconst defaultRunners = [\n  \"init\",\n  \"destroy\",\n  \"contextChange\",\n  \"resolutionChange\",\n  \"resetState\",\n  \"renderEnd\",\n  \"renderStart\",\n  \"render\",\n  \"update\",\n  \"postrender\",\n  \"prerender\"\n];\nconst _AbstractRenderer = class _AbstractRenderer extends EventEmitter {\n  /**\n   * Set up a system with a collection of SystemClasses and runners.\n   * Systems are attached dynamically to this class when added.\n   * @param config - the config for the system manager\n   */\n  constructor(config) {\n    super();\n    this.runners = /* @__PURE__ */ Object.create(null);\n    this.renderPipes = /* @__PURE__ */ Object.create(null);\n    this._initOptions = {};\n    this._systemsHash = /* @__PURE__ */ Object.create(null);\n    this.type = config.type;\n    this.name = config.name;\n    this.config = config;\n    const combinedRunners = [...defaultRunners, ...this.config.runners ?? []];\n    this._addRunners(...combinedRunners);\n    this._unsafeEvalCheck();\n  }\n  /**\n   * Initialize the renderer.\n   * @param options - The options to use to create the renderer.\n   */\n  async init(options = {}) {\n    const skip = options.skipExtensionImports === true ? true : options.manageImports === false;\n    await loadEnvironmentExtensions(skip);\n    this._addSystems(this.config.systems);\n    this._addPipes(this.config.renderPipes, this.config.renderPipeAdaptors);\n    for (const systemName in this._systemsHash) {\n      const system = this._systemsHash[systemName];\n      const defaultSystemOptions = system.constructor.defaultOptions;\n      options = { ...defaultSystemOptions, ...options };\n    }\n    options = { ..._AbstractRenderer.defaultOptions, ...options };\n    this._roundPixels = options.roundPixels ? 1 : 0;\n    for (let i = 0; i < this.runners.init.items.length; i++) {\n      await this.runners.init.items[i].init(options);\n    }\n    this._initOptions = options;\n  }\n  render(args, deprecated) {\n    let options = args;\n    if (options instanceof Container) {\n      options = { container: options };\n      if (deprecated) {\n        deprecation(v8_0_0, \"passing a second argument is deprecated, please use render options instead\");\n        options.target = deprecated.renderTexture;\n      }\n    }\n    options.target || (options.target = this.view.renderTarget);\n    if (options.target === this.view.renderTarget) {\n      this._lastObjectRendered = options.container;\n      options.clearColor ?? (options.clearColor = this.background.colorRgba);\n      options.clear ?? (options.clear = this.background.clearBeforeRender);\n    }\n    if (options.clearColor) {\n      const isRGBAArray = Array.isArray(options.clearColor) && options.clearColor.length === 4;\n      options.clearColor = isRGBAArray ? options.clearColor : Color.shared.setValue(options.clearColor).toArray();\n    }\n    if (!options.transform) {\n      options.container.updateLocalTransform();\n      options.transform = options.container.localTransform;\n    }\n    options.container.enableRenderGroup();\n    this.runners.prerender.emit(options);\n    this.runners.renderStart.emit(options);\n    this.runners.render.emit(options);\n    this.runners.renderEnd.emit(options);\n    this.runners.postrender.emit(options);\n  }\n  /**\n   * Resizes the WebGL view to the specified width and height.\n   * @param desiredScreenWidth - The desired width of the screen.\n   * @param desiredScreenHeight - The desired height of the screen.\n   * @param resolution - The resolution / device pixel ratio of the renderer.\n   */\n  resize(desiredScreenWidth, desiredScreenHeight, resolution) {\n    const previousResolution = this.view.resolution;\n    this.view.resize(desiredScreenWidth, desiredScreenHeight, resolution);\n    this.emit(\"resize\", this.view.screen.width, this.view.screen.height, this.view.resolution);\n    if (resolution !== void 0 && resolution !== previousResolution) {\n      this.runners.resolutionChange.emit(resolution);\n    }\n  }\n  clear(options = {}) {\n    const renderer = this;\n    options.target || (options.target = renderer.renderTarget.renderTarget);\n    options.clearColor || (options.clearColor = this.background.colorRgba);\n    options.clear ?? (options.clear = CLEAR.ALL);\n    const { clear, clearColor, target } = options;\n    Color.shared.setValue(clearColor ?? this.background.colorRgba);\n    renderer.renderTarget.clear(target, clear, Color.shared.toArray());\n  }\n  /** The resolution / device pixel ratio of the renderer. */\n  get resolution() {\n    return this.view.resolution;\n  }\n  set resolution(value) {\n    this.view.resolution = value;\n    this.runners.resolutionChange.emit(value);\n  }\n  /**\n   * Same as view.width, actual number of pixels in the canvas by horizontal.\n   * @member {number}\n   * @readonly\n   * @default 800\n   */\n  get width() {\n    return this.view.texture.frame.width;\n  }\n  /**\n   * Same as view.height, actual number of pixels in the canvas by vertical.\n   * @default 600\n   */\n  get height() {\n    return this.view.texture.frame.height;\n  }\n  // NOTE: this was `view` in v7\n  /**\n   * The canvas element that everything is drawn to.\n   * @type {environment.ICanvas}\n   */\n  get canvas() {\n    return this.view.canvas;\n  }\n  /**\n   * the last object rendered by the renderer. Useful for other plugins like interaction managers\n   * @readonly\n   */\n  get lastObjectRendered() {\n    return this._lastObjectRendered;\n  }\n  /**\n   * Flag if we are rendering to the screen vs renderTexture\n   * @readonly\n   * @default true\n   */\n  get renderingToScreen() {\n    const renderer = this;\n    return renderer.renderTarget.renderingToScreen;\n  }\n  /**\n   * Measurements of the screen. (0, 0, screenWidth, screenHeight).\n   *\n   * Its safe to use as filterArea or hitArea for the whole stage.\n   */\n  get screen() {\n    return this.view.screen;\n  }\n  /**\n   * Create a bunch of runners based of a collection of ids\n   * @param runnerIds - the runner ids to add\n   */\n  _addRunners(...runnerIds) {\n    runnerIds.forEach((runnerId) => {\n      this.runners[runnerId] = new SystemRunner(runnerId);\n    });\n  }\n  _addSystems(systems) {\n    let i;\n    for (i in systems) {\n      const val = systems[i];\n      this._addSystem(val.value, val.name);\n    }\n  }\n  /**\n   * Add a new system to the renderer.\n   * @param ClassRef - Class reference\n   * @param name - Property name for system, if not specified\n   *        will use a static `name` property on the class itself. This\n   *        name will be assigned as s property on the Renderer so make\n   *        sure it doesn't collide with properties on Renderer.\n   * @returns Return instance of renderer\n   */\n  _addSystem(ClassRef, name) {\n    const system = new ClassRef(this);\n    if (this[name]) {\n      throw new Error(`Whoops! The name \"${name}\" is already in use`);\n    }\n    this[name] = system;\n    this._systemsHash[name] = system;\n    for (const i in this.runners) {\n      this.runners[i].add(system);\n    }\n    return this;\n  }\n  _addPipes(pipes, pipeAdaptors) {\n    const adaptors = pipeAdaptors.reduce((acc, adaptor) => {\n      acc[adaptor.name] = adaptor.value;\n      return acc;\n    }, {});\n    pipes.forEach((pipe) => {\n      const PipeClass = pipe.value;\n      const name = pipe.name;\n      const Adaptor = adaptors[name];\n      this.renderPipes[name] = new PipeClass(\n        this,\n        Adaptor ? new Adaptor() : null\n      );\n    });\n  }\n  destroy(options = false) {\n    this.runners.destroy.items.reverse();\n    this.runners.destroy.emit(options);\n    Object.values(this.runners).forEach((runner) => {\n      runner.destroy();\n    });\n    this._systemsHash = null;\n    this.renderPipes = null;\n  }\n  /**\n   * Generate a texture from a container.\n   * @param options - options or container target to use when generating the texture\n   * @returns a texture\n   */\n  generateTexture(options) {\n    return this.textureGenerator.generateTexture(options);\n  }\n  /**\n   * Whether the renderer will round coordinates to whole pixels when rendering.\n   * Can be overridden on a per scene item basis.\n   */\n  get roundPixels() {\n    return !!this._roundPixels;\n  }\n  /**\n   * Overridable function by `pixi.js/unsafe-eval` to silence\n   * throwing an error if platform doesn't support unsafe-evals.\n   * @private\n   * @ignore\n   */\n  _unsafeEvalCheck() {\n    if (!unsafeEvalSupported()) {\n      throw new Error(\"Current environment does not allow unsafe-eval, please use pixi.js/unsafe-eval module to enable support.\");\n    }\n  }\n  /**\n   * Resets the rendering state of the renderer.\n   * This is useful when you want to use the WebGL context directly and need to ensure PixiJS's internal state\n   * stays synchronized. When modifying the WebGL context state externally, calling this method before the next Pixi\n   * render will reset all internal caches and ensure it executes correctly.\n   *\n   * This is particularly useful when combining PixiJS with other rendering engines like Three.js:\n   * ```js\n   * // Reset Three.js state\n   * threeRenderer.resetState();\n   *\n   * // Render a Three.js scene\n   * threeRenderer.render(threeScene, threeCamera);\n   *\n   * // Reset PixiJS state since Three.js modified the WebGL context\n   * pixiRenderer.resetState();\n   *\n   * // Now render Pixi content\n   * pixiRenderer.render(pixiScene);\n   * ```\n   */\n  resetState() {\n    this.runners.resetState.emit();\n  }\n};\n/** The default options for the renderer. */\n_AbstractRenderer.defaultOptions = {\n  /**\n   * Default resolution / device pixel ratio of the renderer.\n   * @default 1\n   */\n  resolution: 1,\n  /**\n   * Should the `failIfMajorPerformanceCaveat` flag be enabled as a context option used in the `isWebGLSupported`\n   * function. If set to true, a WebGL renderer can fail to be created if the browser thinks there could be\n   * performance issues when using WebGL.\n   *\n   * In PixiJS v6 this has changed from true to false by default, to allow WebGL to work in as many\n   * scenarios as possible. However, some users may have a poor experience, for example, if a user has a gpu or\n   * driver version blacklisted by the\n   * browser.\n   *\n   * If your application requires high performance rendering, you may wish to set this to false.\n   * We recommend one of two options if you decide to set this flag to false:\n   *\n   * 1: Use the Canvas renderer as a fallback in case high performance WebGL is\n   *    not supported.\n   *\n   * 2: Call `isWebGLSupported` (which if found in the utils package) in your code before attempting to create a\n   *    PixiJS renderer, and show an error message to the user if the function returns false, explaining that their\n   *    device & browser combination does not support high performance WebGL.\n   *    This is a much better strategy than trying to create a PixiJS renderer and finding it then fails.\n   * @default false\n   */\n  failIfMajorPerformanceCaveat: false,\n  /**\n   * Should round pixels be forced when rendering?\n   * @default false\n   */\n  roundPixels: false\n};\nlet AbstractRenderer = _AbstractRenderer;\n\nexport { AbstractRenderer };\n//# sourceMappingURL=AbstractRenderer.mjs.map\n","import { DOMAdapter } from '../../environment/adapter.mjs';\nimport { AbstractRenderer } from '../../rendering/renderers/shared/system/AbstractRenderer.mjs';\n\n\"use strict\";\nlet _isWebGLSupported;\nfunction isWebGLSupported(failIfMajorPerformanceCaveat) {\n  if (_isWebGLSupported !== void 0)\n    return _isWebGLSupported;\n  _isWebGLSupported = (() => {\n    const contextOptions = {\n      stencil: true,\n      failIfMajorPerformanceCaveat: failIfMajorPerformanceCaveat ?? AbstractRenderer.defaultOptions.failIfMajorPerformanceCaveat\n    };\n    try {\n      if (!DOMAdapter.get().getWebGLRenderingContext()) {\n        return false;\n      }\n      const canvas = DOMAdapter.get().createCanvas();\n      let gl = canvas.getContext(\"webgl\", contextOptions);\n      const success = !!gl?.getContextAttributes()?.stencil;\n      if (gl) {\n        const loseContext = gl.getExtension(\"WEBGL_lose_context\");\n        if (loseContext) {\n          loseContext.loseContext();\n        }\n      }\n      gl = null;\n      return success;\n    } catch (_e) {\n      return false;\n    }\n  })();\n  return _isWebGLSupported;\n}\n\nexport { isWebGLSupported };\n//# sourceMappingURL=isWebGLSupported.mjs.map\n","import { DOMAdapter } from '../../environment/adapter.mjs';\n\n\"use strict\";\nlet _isWebGPUSupported;\nasync function isWebGPUSupported(options = {}) {\n  if (_isWebGPUSupported !== void 0)\n    return _isWebGPUSupported;\n  _isWebGPUSupported = await (async () => {\n    const gpu = DOMAdapter.get().getNavigator().gpu;\n    if (!gpu) {\n      return false;\n    }\n    try {\n      const adapter = await gpu.requestAdapter(options);\n      await adapter.requestDevice();\n      return true;\n    } catch (_e) {\n      return false;\n    }\n  })();\n  return _isWebGPUSupported;\n}\n\nexport { isWebGPUSupported };\n//# sourceMappingURL=isWebGPUSupported.mjs.map\n","import { isWebGLSupported } from '../../utils/browser/isWebGLSupported.mjs';\nimport { isWebGPUSupported } from '../../utils/browser/isWebGPUSupported.mjs';\nimport { AbstractRenderer } from './shared/system/AbstractRenderer.mjs';\n\n\"use strict\";\nconst renderPriority = [\"webgl\", \"webgpu\", \"canvas\"];\nasync function autoDetectRenderer(options) {\n  let preferredOrder = [];\n  if (options.preference) {\n    preferredOrder.push(options.preference);\n    renderPriority.forEach((item) => {\n      if (item !== options.preference) {\n        preferredOrder.push(item);\n      }\n    });\n  } else {\n    preferredOrder = renderPriority.slice();\n  }\n  let RendererClass;\n  let finalOptions = {};\n  for (let i = 0; i < preferredOrder.length; i++) {\n    const rendererType = preferredOrder[i];\n    if (rendererType === \"webgpu\" && await isWebGPUSupported()) {\n      const { WebGPURenderer } = await import('./gpu/WebGPURenderer.mjs');\n      RendererClass = WebGPURenderer;\n      finalOptions = { ...options, ...options.webgpu };\n      break;\n    } else if (rendererType === \"webgl\" && isWebGLSupported(\n      options.failIfMajorPerformanceCaveat ?? AbstractRenderer.defaultOptions.failIfMajorPerformanceCaveat\n    )) {\n      const { WebGLRenderer } = await import('./gl/WebGLRenderer.mjs');\n      RendererClass = WebGLRenderer;\n      finalOptions = { ...options, ...options.webgl };\n      break;\n    } else if (rendererType === \"canvas\") {\n      finalOptions = { ...options };\n      throw new Error(\"CanvasRenderer is not yet implemented\");\n    }\n  }\n  delete finalOptions.webgpu;\n  delete finalOptions.webgl;\n  if (!RendererClass) {\n    throw new Error(\"No available renderer for the current environment\");\n  }\n  const renderer = new RendererClass();\n  await renderer.init(finalOptions);\n  return renderer;\n}\n\nexport { autoDetectRenderer };\n//# sourceMappingURL=autoDetectRenderer.mjs.map\n","export { default as EventEmitter } from 'eventemitter3';\n\n\"use strict\";\nconst DATA_URI = /^\\s*data:(?:([\\w-]+)\\/([\\w+.-]+))?(?:;charset=([\\w-]+))?(?:;(base64))?,(.*)/i;\nconst VERSION = \"8.9.2\";\n\nexport { DATA_URI, VERSION };\n//# sourceMappingURL=const.mjs.map\n","import { ExtensionType } from '../../extensions/Extensions.mjs';\nimport { VERSION } from '../const.mjs';\n\n\"use strict\";\nclass ApplicationInitHook {\n  static init() {\n    globalThis.__PIXI_APP_INIT__?.(this, VERSION);\n  }\n  static destroy() {\n  }\n}\n/** @ignore */\nApplicationInitHook.extension = ExtensionType.Application;\nclass RendererInitHook {\n  constructor(renderer) {\n    this._renderer = renderer;\n  }\n  init() {\n    globalThis.__PIXI_RENDERER_INIT__?.(this._renderer, VERSION);\n  }\n  destroy() {\n    this._renderer = null;\n  }\n}\n/** @ignore */\nRendererInitHook.extension = {\n  type: [\n    ExtensionType.WebGLSystem,\n    ExtensionType.WebGPUSystem\n  ],\n  name: \"initHook\",\n  priority: -10\n};\n\nexport { ApplicationInitHook, RendererInitHook };\n//# sourceMappingURL=globalHooks.mjs.map\n","import { extensions, ExtensionType } from '../extensions/Extensions.mjs';\nimport { autoDetectRenderer } from '../rendering/renderers/autoDetectRenderer.mjs';\nimport { Container } from '../scene/container/Container.mjs';\nimport { ApplicationInitHook } from '../utils/global/globalHooks.mjs';\nimport { deprecation, v8_0_0 } from '../utils/logging/deprecation.mjs';\n\n\"use strict\";\nconst _Application = class _Application {\n  /** @ignore */\n  constructor(...args) {\n    /** The root display container that's rendered. */\n    this.stage = new Container();\n    if (args[0] !== void 0) {\n      deprecation(v8_0_0, \"Application constructor options are deprecated, please use Application.init() instead.\");\n    }\n  }\n  /**\n   * @param options - The optional application and renderer parameters.\n   */\n  async init(options) {\n    options = { ...options };\n    this.renderer = await autoDetectRenderer(options);\n    _Application._plugins.forEach((plugin) => {\n      plugin.init.call(this, options);\n    });\n  }\n  /** Render the current stage. */\n  render() {\n    this.renderer.render({ container: this.stage });\n  }\n  /**\n   * Reference to the renderer's canvas element.\n   * @readonly\n   * @member {HTMLCanvasElement}\n   */\n  get canvas() {\n    return this.renderer.canvas;\n  }\n  /**\n   * Reference to the renderer's canvas element.\n   * @member {HTMLCanvasElement}\n   * @deprecated since 8.0.0\n   */\n  get view() {\n    deprecation(v8_0_0, \"Application.view is deprecated, please use Application.canvas instead.\");\n    return this.renderer.canvas;\n  }\n  /**\n   * Reference to the renderer's screen rectangle. Its safe to use as `filterArea` or `hitArea` for the whole screen.\n   * @readonly\n   */\n  get screen() {\n    return this.renderer.screen;\n  }\n  /**\n   * Destroys the application and all of its resources.\n   * @param {object|boolean}[rendererDestroyOptions=false] - The options for destroying the renderer.\n   * @param {boolean}[rendererDestroyOptions.removeView=false] - Removes the Canvas element from the DOM.\n   * @param {object|boolean} [options=false] - The options for destroying the stage.\n   * @param {boolean} [options.children=false] - If set to true, all the children will have their destroy method\n   * called as well. `options` will be passed on to those calls.\n   * @param {boolean} [options.texture=false] - Only used for children with textures e.g. Sprites.\n   * If options.children is set to true,\n   * it should destroy the texture of the child sprite.\n   * @param {boolean} [options.textureSource=false] - Only used for children with textures e.g. Sprites.\n   *  If options.children is set to true,\n   * it should destroy the texture source of the child sprite.\n   * @param {boolean} [options.context=false] - Only used for children with graphicsContexts e.g. Graphics.\n   * If options.children is set to true,\n   * it should destroy the context of the child graphics.\n   */\n  destroy(rendererDestroyOptions = false, options = false) {\n    const plugins = _Application._plugins.slice(0);\n    plugins.reverse();\n    plugins.forEach((plugin) => {\n      plugin.destroy.call(this);\n    });\n    this.stage.destroy(options);\n    this.stage = null;\n    this.renderer.destroy(rendererDestroyOptions);\n    this.renderer = null;\n  }\n};\n/**\n * Collection of installed plugins.\n * @alias _plugins\n */\n_Application._plugins = [];\nlet Application = _Application;\nextensions.handleByList(ExtensionType.Application, Application._plugins);\nextensions.add(ApplicationInitHook);\n\nexport { Application };\n//# sourceMappingURL=Application.mjs.map\n","import EventEmitter from 'eventemitter3';\nimport { deprecation, v8_0_0 } from '../../utils/logging/deprecation.mjs';\n\n\"use strict\";\nclass AbstractBitmapFont extends EventEmitter {\n  constructor() {\n    super(...arguments);\n    /** The map of characters by character code. */\n    this.chars = /* @__PURE__ */ Object.create(null);\n    /**\n     * The line-height of the font face in pixels.\n     * @type {number}\n     */\n    this.lineHeight = 0;\n    /**\n     * The name of the font face\n     * @type {string}\n     */\n    this.fontFamily = \"\";\n    /** The metrics of the font face. */\n    this.fontMetrics = { fontSize: 0, ascent: 0, descent: 0 };\n    /**\n     * The offset of the font face from the baseline.\n     * @type {number}\n     */\n    this.baseLineOffset = 0;\n    /** The range and type of the distance field for this font. */\n    this.distanceField = { type: \"none\", range: 0 };\n    /** The map of base page textures (i.e., sheets of glyphs). */\n    this.pages = [];\n    /** should the fill for this font be applied as a tint to the text. */\n    this.applyFillAsTint = true;\n    /** The size of the font face in pixels. */\n    this.baseMeasurementFontSize = 100;\n    this.baseRenderedFontSize = 100;\n  }\n  /**\n   * The name of the font face.\n   * @deprecated since 8.0.0 Use `fontFamily` instead.\n   */\n  get font() {\n    deprecation(v8_0_0, \"BitmapFont.font is deprecated, please use BitmapFont.fontFamily instead.\");\n    return this.fontFamily;\n  }\n  /**\n   * The map of base page textures (i.e., sheets of glyphs).\n   * @deprecated since 8.0.0 Use `pages` instead.\n   */\n  get pageTextures() {\n    deprecation(v8_0_0, \"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead.\");\n    return this.pages;\n  }\n  /**\n   * The size of the font face in pixels.\n   * @deprecated since 8.0.0 Use `fontMetrics.fontSize` instead.\n   */\n  get size() {\n    deprecation(v8_0_0, \"BitmapFont.size is deprecated, please use BitmapFont.fontMetrics.fontSize instead.\");\n    return this.fontMetrics.fontSize;\n  }\n  /**\n   * The kind of distance field for this font or \"none\".\n   * @deprecated since 8.0.0 Use `distanceField.type` instead.\n   */\n  get distanceFieldRange() {\n    deprecation(v8_0_0, \"BitmapFont.distanceFieldRange is deprecated, please use BitmapFont.distanceField.range instead.\");\n    return this.distanceField.range;\n  }\n  /**\n   * The range of the distance field in pixels.\n   * @deprecated since 8.0.0 Use `distanceField.range` instead.\n   */\n  get distanceFieldType() {\n    deprecation(v8_0_0, \"BitmapFont.distanceFieldType is deprecated, please use BitmapFont.distanceField.type instead.\");\n    return this.distanceField.type;\n  }\n  destroy(destroyTextures = false) {\n    this.emit(\"destroy\", this);\n    this.removeAllListeners();\n    for (const i in this.chars) {\n      this.chars[i].texture?.destroy();\n    }\n    this.chars = null;\n    if (destroyTextures) {\n      this.pages.forEach((page) => page.texture.destroy(true));\n      this.pages = null;\n    }\n  }\n}\n\nexport { AbstractBitmapFont };\n//# sourceMappingURL=AbstractBitmapFont.mjs.map\n","import { Color } from '../../../../color/Color.mjs';\nimport { DOMAdapter } from '../../../../environment/adapter.mjs';\nimport { Matrix } from '../../../../maths/matrix/Matrix.mjs';\nimport { ImageSource } from '../../../../rendering/renderers/shared/texture/sources/ImageSource.mjs';\nimport { Texture } from '../../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { uid } from '../../../../utils/data/uid.mjs';\nimport { deprecation } from '../../../../utils/logging/deprecation.mjs';\nimport { definedProps } from '../../../container/utils/definedProps.mjs';\n\n\"use strict\";\nconst emptyColorStops = [{ offset: 0, color: \"white\" }, { offset: 1, color: \"black\" }];\nconst _FillGradient = class _FillGradient {\n  constructor(...args) {\n    /** Unique identifier for this gradient instance */\n    this.uid = uid(\"fillGradient\");\n    /** Type of gradient - currently only supports 'linear' */\n    this.type = \"linear\";\n    /** Array of color stops defining the gradient */\n    this.colorStops = [];\n    let options = ensureGradientOptions(args);\n    const defaults = options.type === \"radial\" ? _FillGradient.defaultRadialOptions : _FillGradient.defaultLinearOptions;\n    options = { ...defaults, ...definedProps(options) };\n    this._textureSize = options.textureSize;\n    this._wrapMode = options.wrapMode;\n    if (options.type === \"radial\") {\n      this.center = options.center;\n      this.outerCenter = options.outerCenter ?? this.center;\n      this.innerRadius = options.innerRadius;\n      this.outerRadius = options.outerRadius;\n      this.scale = options.scale;\n      this.rotation = options.rotation;\n    } else {\n      this.start = options.start;\n      this.end = options.end;\n    }\n    this.textureSpace = options.textureSpace;\n    this.type = options.type;\n    options.colorStops.forEach((stop) => {\n      this.addColorStop(stop.offset, stop.color);\n    });\n  }\n  /**\n   * Adds a color stop to the gradient\n   * @param offset - Position of the stop (0-1)\n   * @param color - Color of the stop\n   * @returns This gradient instance for chaining\n   */\n  addColorStop(offset, color) {\n    this.colorStops.push({ offset, color: Color.shared.setValue(color).toHexa() });\n    return this;\n  }\n  /**\n   * Builds the internal texture and transform for the gradient.\n   * Called automatically when the gradient is first used.\n   * @internal\n   */\n  buildLinearGradient() {\n    if (this.texture)\n      return;\n    let { x: x0, y: y0 } = this.start;\n    let { x: x1, y: y1 } = this.end;\n    let dx = x1 - x0;\n    let dy = y1 - y0;\n    const flip = dx < 0 || dy < 0;\n    if (this._wrapMode === \"clamp-to-edge\") {\n      if (dx < 0) {\n        const temp = x0;\n        x0 = x1;\n        x1 = temp;\n        dx *= -1;\n      }\n      if (dy < 0) {\n        const temp = y0;\n        y0 = y1;\n        y1 = temp;\n        dy *= -1;\n      }\n    }\n    const colorStops = this.colorStops.length ? this.colorStops : emptyColorStops;\n    const defaultSize = this._textureSize;\n    const { canvas, context } = getCanvas(defaultSize, 1);\n    const gradient = !flip ? context.createLinearGradient(0, 0, this._textureSize, 0) : context.createLinearGradient(this._textureSize, 0, 0, 0);\n    addColorStops(gradient, colorStops);\n    context.fillStyle = gradient;\n    context.fillRect(0, 0, defaultSize, 1);\n    this.texture = new Texture({\n      source: new ImageSource({\n        resource: canvas,\n        addressMode: this._wrapMode\n      })\n    });\n    const dist = Math.sqrt(dx * dx + dy * dy);\n    const angle = Math.atan2(dy, dx);\n    const m = new Matrix();\n    m.scale(dist / defaultSize, 1);\n    m.rotate(angle);\n    m.translate(x0, y0);\n    if (this.textureSpace === \"local\") {\n      m.scale(defaultSize, defaultSize);\n    }\n    this.transform = m;\n  }\n  buildGradient() {\n    if (this.type === \"linear\") {\n      this.buildLinearGradient();\n    } else {\n      this.buildRadialGradient();\n    }\n  }\n  buildRadialGradient() {\n    if (this.texture)\n      return;\n    const colorStops = this.colorStops.length ? this.colorStops : emptyColorStops;\n    const defaultSize = this._textureSize;\n    const { canvas, context } = getCanvas(defaultSize, defaultSize);\n    const { x: x0, y: y0 } = this.center;\n    const { x: x1, y: y1 } = this.outerCenter;\n    const r0 = this.innerRadius;\n    const r1 = this.outerRadius;\n    const ox = x1 - r1;\n    const oy = y1 - r1;\n    const scale = defaultSize / (r1 * 2);\n    const cx = (x0 - ox) * scale;\n    const cy = (y0 - oy) * scale;\n    const gradient = context.createRadialGradient(\n      cx,\n      cy,\n      r0 * scale,\n      (x1 - ox) * scale,\n      (y1 - oy) * scale,\n      r1 * scale\n    );\n    addColorStops(gradient, colorStops);\n    context.fillStyle = colorStops[colorStops.length - 1].color;\n    context.fillRect(0, 0, defaultSize, defaultSize);\n    context.fillStyle = gradient;\n    context.translate(cx, cy);\n    context.rotate(this.rotation);\n    context.scale(1, this.scale);\n    context.translate(-cx, -cy);\n    context.fillRect(0, 0, defaultSize, defaultSize);\n    this.texture = new Texture({\n      source: new ImageSource({\n        resource: canvas,\n        addressMode: this._wrapMode\n      })\n    });\n    const m = new Matrix();\n    m.scale(1 / scale, 1 / scale);\n    m.translate(ox, oy);\n    if (this.textureSpace === \"local\") {\n      m.scale(defaultSize, defaultSize);\n    }\n    this.transform = m;\n  }\n  /**\n   * Gets a unique key representing the current state of the gradient.\n   * Used internally for caching.\n   * @returns Unique string key\n   */\n  get styleKey() {\n    return this.uid;\n  }\n  destroy() {\n    this.texture?.destroy(true);\n    this.texture = null;\n  }\n};\n/**\n * Default options for creating a gradient fill\n * @property {PointData} start - Start point of the gradient (default: { x: 0, y: 0 })\n * @property {PointData} end - End point of the gradient (default: { x: 0, y: 1 })\n * @property {TextureSpace} textureSpace - Whether coordinates are 'global' or 'local' (default: 'local')\n * @property {number} textureSize - The size of the texture to use for the gradient (default: 256)\n * @property {Array<{offset: number, color: ColorSource}>} colorStops - Array of color stops (default: empty array)\n * @property {GradientType} type - Type of gradient (default: 'linear')\n * @property {WRAP_MODE} wrapMode - The wrap mode of the gradient (default: 'clamp-to-edge')\n */\n_FillGradient.defaultLinearOptions = {\n  start: { x: 0, y: 0 },\n  end: { x: 0, y: 1 },\n  colorStops: [],\n  textureSpace: \"local\",\n  type: \"linear\",\n  textureSize: 256,\n  wrapMode: \"clamp-to-edge\"\n};\n/**\n * Default options for creating a radial gradient fill\n * @property {PointData} innerCenter - Center of the inner circle (default: { x: 0.5, y: 0.5 })\n * @property {number} innerRadius - Radius of the inner circle (default: 0)\n * @property {PointData} outerCenter - Center of the outer circle (default: { x: 0.5, y: 0.5 })\n * @property {number} outerRadius - Radius of the outer circle (default: 0.5)\n * @property {TextureSpace} textureSpace - Whether coordinates are 'global' or 'local' (default: 'local')\n * @property {number} textureSize - The size of the texture to use for the gradient (default: 256)\n * @property {Array<{offset: number, color: ColorSource}>} colorStops - Array of color stops (default: empty array)\n * @property {GradientType} type - Type of gradient (default: 'radial')\n * @property {WRAP_MODE} wrapMode - The wrap mode of the gradient (default: 'clamp-to-edge')\n */\n_FillGradient.defaultRadialOptions = {\n  center: { x: 0.5, y: 0.5 },\n  innerRadius: 0,\n  outerRadius: 0.5,\n  colorStops: [],\n  scale: 1,\n  textureSpace: \"local\",\n  type: \"radial\",\n  textureSize: 256,\n  wrapMode: \"clamp-to-edge\"\n};\nlet FillGradient = _FillGradient;\nfunction addColorStops(gradient, colorStops) {\n  for (let i = 0; i < colorStops.length; i++) {\n    const stop = colorStops[i];\n    gradient.addColorStop(stop.offset, stop.color);\n  }\n}\nfunction getCanvas(width, height) {\n  const canvas = DOMAdapter.get().createCanvas(width, height);\n  const context = canvas.getContext(\"2d\");\n  return { canvas, context };\n}\nfunction ensureGradientOptions(args) {\n  let options = args[0] ?? {};\n  if (typeof options === \"number\" || args[1]) {\n    deprecation(\"8.5.2\", `use options object instead`);\n    options = {\n      type: \"linear\",\n      start: { x: args[0], y: args[1] },\n      end: { x: args[2], y: args[3] },\n      textureSpace: args[4],\n      textureSize: args[5] ?? FillGradient.defaultLinearOptions.textureSize\n    };\n  }\n  return options;\n}\n\nexport { FillGradient };\n//# sourceMappingURL=FillGradient.mjs.map\n","import { Matrix } from '../../../../maths/matrix/Matrix.mjs';\nimport { uid } from '../../../../utils/data/uid.mjs';\n\n\"use strict\";\nconst repetitionMap = {\n  repeat: {\n    addressModeU: \"repeat\",\n    addressModeV: \"repeat\"\n  },\n  \"repeat-x\": {\n    addressModeU: \"repeat\",\n    addressModeV: \"clamp-to-edge\"\n  },\n  \"repeat-y\": {\n    addressModeU: \"clamp-to-edge\",\n    addressModeV: \"repeat\"\n  },\n  \"no-repeat\": {\n    addressModeU: \"clamp-to-edge\",\n    addressModeV: \"clamp-to-edge\"\n  }\n};\nclass FillPattern {\n  constructor(texture, repetition) {\n    /** unique id for this fill pattern */\n    this.uid = uid(\"fillPattern\");\n    this.transform = new Matrix();\n    this._styleKey = null;\n    this.texture = texture;\n    this.transform.scale(\n      1 / texture.frame.width,\n      1 / texture.frame.height\n    );\n    if (repetition) {\n      texture.source.style.addressModeU = repetitionMap[repetition].addressModeU;\n      texture.source.style.addressModeV = repetitionMap[repetition].addressModeV;\n    }\n  }\n  setTransform(transform) {\n    const texture = this.texture;\n    this.transform.copyFrom(transform);\n    this.transform.invert();\n    this.transform.scale(\n      1 / texture.frame.width,\n      1 / texture.frame.height\n    );\n    this._styleKey = null;\n  }\n  get styleKey() {\n    if (this._styleKey)\n      return this._styleKey;\n    this._styleKey = `fill-pattern-${this.uid}-${this.texture.uid}-${this.transform.toArray().join(\"-\")}`;\n    return this._styleKey;\n  }\n}\n\nexport { FillPattern };\n//# sourceMappingURL=FillPattern.mjs.map\n","\nmodule.exports = parse\n\n/**\n * expected argument lengths\n * @type {Object}\n */\n\nvar length = {a: 7, c: 6, h: 1, l: 2, m: 2, q: 4, s: 4, t: 2, v: 1, z: 0}\n\n/**\n * segment pattern\n * @type {RegExp}\n */\n\nvar segment = /([astvzqmhlc])([^astvzqmhlc]*)/ig\n\n/**\n * parse an svg path data string. Generates an Array\n * of commands where each command is an Array of the\n * form `[command, arg1, arg2, ...]`\n *\n * @param {String} path\n * @return {Array}\n */\n\nfunction parse(path) {\n\tvar data = []\n\tpath.replace(segment, function(_, command, args){\n\t\tvar type = command.toLowerCase()\n\t\targs = parseValues(args)\n\n\t\t// overloaded moveTo\n\t\tif (type == 'm' && args.length > 2) {\n\t\t\tdata.push([command].concat(args.splice(0, 2)))\n\t\t\ttype = 'l'\n\t\t\tcommand = command == 'm' ? 'l' : 'L'\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (args.length == length[type]) {\n\t\t\t\targs.unshift(command)\n\t\t\t\treturn data.push(args)\n\t\t\t}\n\t\t\tif (args.length < length[type]) throw new Error('malformed path data')\n\t\t\tdata.push([command].concat(args.splice(0, length[type])))\n\t\t}\n\t})\n\treturn data\n}\n\nvar number = /-?[0-9]*\\.?[0-9]+(?:e[-+]?\\d+)?/ig\n\nfunction parseValues(args) {\n\tvar numbers = args.match(number)\n\treturn numbers ? numbers.map(Number) : []\n}\n","import parse from 'parse-svg-path';\nimport { warn } from '../../../../utils/logging/warn.mjs';\n\n\"use strict\";\nfunction parseSVGPath(svgPath, path) {\n  const commands = parse(svgPath);\n  const subpaths = [];\n  let currentSubPath = null;\n  let lastX = 0;\n  let lastY = 0;\n  for (let i = 0; i < commands.length; i++) {\n    const command = commands[i];\n    const type = command[0];\n    const data = command;\n    switch (type) {\n      case \"M\":\n        lastX = data[1];\n        lastY = data[2];\n        path.moveTo(lastX, lastY);\n        break;\n      case \"m\":\n        lastX += data[1];\n        lastY += data[2];\n        path.moveTo(lastX, lastY);\n        break;\n      case \"H\":\n        lastX = data[1];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"h\":\n        lastX += data[1];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"V\":\n        lastY = data[1];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"v\":\n        lastY += data[1];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"L\":\n        lastX = data[1];\n        lastY = data[2];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"l\":\n        lastX += data[1];\n        lastY += data[2];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"C\":\n        lastX = data[5];\n        lastY = data[6];\n        path.bezierCurveTo(\n          data[1],\n          data[2],\n          // First control point\n          data[3],\n          data[4],\n          // Second control point\n          lastX,\n          lastY\n          // End point\n        );\n        break;\n      case \"c\":\n        path.bezierCurveTo(\n          lastX + data[1],\n          lastY + data[2],\n          // First control point\n          lastX + data[3],\n          lastY + data[4],\n          // Second control point\n          lastX + data[5],\n          lastY + data[6]\n          // End point\n        );\n        lastX += data[5];\n        lastY += data[6];\n        break;\n      case \"S\":\n        lastX = data[3];\n        lastY = data[4];\n        path.bezierCurveToShort(\n          data[1],\n          data[2],\n          // Control point\n          lastX,\n          lastY\n          // End point\n        );\n        break;\n      case \"s\":\n        path.bezierCurveToShort(\n          lastX + data[1],\n          lastY + data[2],\n          // Control point\n          lastX + data[3],\n          lastY + data[4]\n          // End point\n        );\n        lastX += data[3];\n        lastY += data[4];\n        break;\n      case \"Q\":\n        lastX = data[3];\n        lastY = data[4];\n        path.quadraticCurveTo(\n          data[1],\n          data[2],\n          // Control point\n          lastX,\n          lastY\n          // End point\n        );\n        break;\n      case \"q\":\n        path.quadraticCurveTo(\n          lastX + data[1],\n          lastY + data[2],\n          // Control point\n          lastX + data[3],\n          lastY + data[4]\n          // End point\n        );\n        lastX += data[3];\n        lastY += data[4];\n        break;\n      case \"T\":\n        lastX = data[1];\n        lastY = data[2];\n        path.quadraticCurveToShort(\n          lastX,\n          lastY\n          // End point\n        );\n        break;\n      case \"t\":\n        lastX += data[1];\n        lastY += data[2];\n        path.quadraticCurveToShort(\n          lastX,\n          lastY\n          // End point\n        );\n        break;\n      case \"A\":\n        lastX = data[6];\n        lastY = data[7];\n        path.arcToSvg(\n          data[1],\n          // rx\n          data[2],\n          // ry\n          data[3],\n          // x-axis-rotation\n          data[4],\n          // large-arc-flag\n          data[5],\n          // sweep-flag\n          lastX,\n          lastY\n          // End point\n        );\n        break;\n      case \"a\":\n        lastX += data[6];\n        lastY += data[7];\n        path.arcToSvg(\n          data[1],\n          // rx\n          data[2],\n          // ry\n          data[3],\n          // x-axis-rotation\n          data[4],\n          // large-arc-flag\n          data[5],\n          // sweep-flag\n          lastX,\n          lastY\n          // End point\n        );\n        break;\n      case \"Z\":\n      case \"z\":\n        path.closePath();\n        if (subpaths.length > 0) {\n          currentSubPath = subpaths.pop();\n          if (currentSubPath) {\n            lastX = currentSubPath.startX;\n            lastY = currentSubPath.startY;\n          } else {\n            lastX = 0;\n            lastY = 0;\n          }\n        }\n        currentSubPath = null;\n        break;\n      default:\n        warn(`Unknown SVG path command: ${type}`);\n    }\n    if (type !== \"Z\" && type !== \"z\") {\n      if (currentSubPath === null) {\n        currentSubPath = { startX: lastX, startY: lastY };\n        subpaths.push(currentSubPath);\n      }\n    }\n  }\n  return path;\n}\n\nexport { parseSVGPath };\n//# sourceMappingURL=parseSVGPath.mjs.map\n","import { Rectangle } from './Rectangle.mjs';\n\n\"use strict\";\nclass Circle {\n  /**\n   * @param x - The X coordinate of the center of this circle\n   * @param y - The Y coordinate of the center of this circle\n   * @param radius - The radius of the circle\n   */\n  constructor(x = 0, y = 0, radius = 0) {\n    /**\n     * The type of the object, mainly used to avoid `instanceof` checks\n     * @default 'circle'\n     */\n    this.type = \"circle\";\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n  }\n  /**\n   * Creates a clone of this Circle instance\n   * @returns A copy of the Circle\n   */\n  clone() {\n    return new Circle(this.x, this.y, this.radius);\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this circle\n   * @param x - The X coordinate of the point to test\n   * @param y - The Y coordinate of the point to test\n   * @returns Whether the x/y coordinates are within this Circle\n   */\n  contains(x, y) {\n    if (this.radius <= 0)\n      return false;\n    const r2 = this.radius * this.radius;\n    let dx = this.x - x;\n    let dy = this.y - y;\n    dx *= dx;\n    dy *= dy;\n    return dx + dy <= r2;\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this circle including the stroke.\n   * @param x - The X coordinate of the point to test\n   * @param y - The Y coordinate of the point to test\n   * @param width - The width of the line to check\n   * @param alignment - The alignment of the stroke, 0.5 by default\n   * @returns Whether the x/y coordinates are within this Circle\n   */\n  strokeContains(x, y, width, alignment = 0.5) {\n    if (this.radius === 0)\n      return false;\n    const dx = this.x - x;\n    const dy = this.y - y;\n    const radius = this.radius;\n    const outerWidth = (1 - alignment) * width;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    return distance <= radius + outerWidth && distance > radius - (width - outerWidth);\n  }\n  /**\n   * Returns the framing rectangle of the circle as a Rectangle object\n   * @param out\n   * @returns The framing rectangle\n   */\n  getBounds(out) {\n    out || (out = new Rectangle());\n    out.x = this.x - this.radius;\n    out.y = this.y - this.radius;\n    out.width = this.radius * 2;\n    out.height = this.radius * 2;\n    return out;\n  }\n  /**\n   * Copies another circle to this one.\n   * @param circle - The circle to copy from.\n   * @returns Returns itself.\n   */\n  copyFrom(circle) {\n    this.x = circle.x;\n    this.y = circle.y;\n    this.radius = circle.radius;\n    return this;\n  }\n  /**\n   * Copies this circle to another one.\n   * @param circle - The circle to copy to.\n   * @returns Returns given parameter.\n   */\n  copyTo(circle) {\n    circle.copyFrom(this);\n    return circle;\n  }\n  toString() {\n    return `[pixi.js/math:Circle x=${this.x} y=${this.y} radius=${this.radius}]`;\n  }\n}\n\nexport { Circle };\n//# sourceMappingURL=Circle.mjs.map\n","import { Rectangle } from './Rectangle.mjs';\n\n\"use strict\";\nclass Ellipse {\n  /**\n   * @param x - The X coordinate of the center of this ellipse\n   * @param y - The Y coordinate of the center of this ellipse\n   * @param halfWidth - The half width of this ellipse\n   * @param halfHeight - The half height of this ellipse\n   */\n  constructor(x = 0, y = 0, halfWidth = 0, halfHeight = 0) {\n    /**\n     * The type of the object, mainly used to avoid `instanceof` checks\n     * @default 'ellipse'\n     */\n    this.type = \"ellipse\";\n    this.x = x;\n    this.y = y;\n    this.halfWidth = halfWidth;\n    this.halfHeight = halfHeight;\n  }\n  /**\n   * Creates a clone of this Ellipse instance\n   * @returns {Ellipse} A copy of the ellipse\n   */\n  clone() {\n    return new Ellipse(this.x, this.y, this.halfWidth, this.halfHeight);\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this ellipse\n   * @param x - The X coordinate of the point to test\n   * @param y - The Y coordinate of the point to test\n   * @returns Whether the x/y coords are within this ellipse\n   */\n  contains(x, y) {\n    if (this.halfWidth <= 0 || this.halfHeight <= 0) {\n      return false;\n    }\n    let normx = (x - this.x) / this.halfWidth;\n    let normy = (y - this.y) / this.halfHeight;\n    normx *= normx;\n    normy *= normy;\n    return normx + normy <= 1;\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this ellipse including stroke\n   * @param x - The X coordinate of the point to test\n   * @param y - The Y coordinate of the point to test\n   * @param strokeWidth - The width of the line to check\n   * @param alignment - The alignment of the stroke\n   * @returns Whether the x/y coords are within this ellipse\n   */\n  strokeContains(x, y, strokeWidth, alignment = 0.5) {\n    const { halfWidth, halfHeight } = this;\n    if (halfWidth <= 0 || halfHeight <= 0) {\n      return false;\n    }\n    const strokeOuterWidth = strokeWidth * (1 - alignment);\n    const strokeInnerWidth = strokeWidth - strokeOuterWidth;\n    const innerHorizontal = halfWidth - strokeInnerWidth;\n    const innerVertical = halfHeight - strokeInnerWidth;\n    const outerHorizontal = halfWidth + strokeOuterWidth;\n    const outerVertical = halfHeight + strokeOuterWidth;\n    const normalizedX = x - this.x;\n    const normalizedY = y - this.y;\n    const innerEllipse = normalizedX * normalizedX / (innerHorizontal * innerHorizontal) + normalizedY * normalizedY / (innerVertical * innerVertical);\n    const outerEllipse = normalizedX * normalizedX / (outerHorizontal * outerHorizontal) + normalizedY * normalizedY / (outerVertical * outerVertical);\n    return innerEllipse > 1 && outerEllipse <= 1;\n  }\n  /**\n   * Returns the framing rectangle of the ellipse as a Rectangle object\n   * @param out\n   * @returns The framing rectangle\n   */\n  getBounds(out) {\n    out || (out = new Rectangle());\n    out.x = this.x - this.halfWidth;\n    out.y = this.y - this.halfHeight;\n    out.width = this.halfWidth * 2;\n    out.height = this.halfHeight * 2;\n    return out;\n  }\n  /**\n   * Copies another ellipse to this one.\n   * @param ellipse - The ellipse to copy from.\n   * @returns Returns itself.\n   */\n  copyFrom(ellipse) {\n    this.x = ellipse.x;\n    this.y = ellipse.y;\n    this.halfWidth = ellipse.halfWidth;\n    this.halfHeight = ellipse.halfHeight;\n    return this;\n  }\n  /**\n   * Copies this ellipse to another one.\n   * @param ellipse - The ellipse to copy to.\n   * @returns Returns given parameter.\n   */\n  copyTo(ellipse) {\n    ellipse.copyFrom(this);\n    return ellipse;\n  }\n  toString() {\n    return `[pixi.js/math:Ellipse x=${this.x} y=${this.y} halfWidth=${this.halfWidth} halfHeight=${this.halfHeight}]`;\n  }\n}\n\nexport { Ellipse };\n//# sourceMappingURL=Ellipse.mjs.map\n","\"use strict\";\nfunction squaredDistanceToLineSegment(x, y, x1, y1, x2, y2) {\n  const a = x - x1;\n  const b = y - y1;\n  const c = x2 - x1;\n  const d = y2 - y1;\n  const dot = a * c + b * d;\n  const lenSq = c * c + d * d;\n  let param = -1;\n  if (lenSq !== 0) {\n    param = dot / lenSq;\n  }\n  let xx;\n  let yy;\n  if (param < 0) {\n    xx = x1;\n    yy = y1;\n  } else if (param > 1) {\n    xx = x2;\n    yy = y2;\n  } else {\n    xx = x1 + param * c;\n    yy = y1 + param * d;\n  }\n  const dx = x - xx;\n  const dy = y - yy;\n  return dx * dx + dy * dy;\n}\n\nexport { squaredDistanceToLineSegment };\n//# sourceMappingURL=squaredDistanceToLineSegment.mjs.map\n","import { squaredDistanceToLineSegment } from '../misc/squaredDistanceToLineSegment.mjs';\nimport { Rectangle } from './Rectangle.mjs';\n\n\"use strict\";\nlet tempRect;\nlet tempRect2;\nclass Polygon {\n  /**\n   * @param points - This can be an array of Points\n   *  that form the polygon, a flat array of numbers that will be interpreted as [x,y, x,y, ...], or\n   *  the arguments passed can be all the points of the polygon e.g.\n   *  `new Polygon(new Point(), new Point(), ...)`, or the arguments passed can be flat\n   *  x,y values e.g. `new Polygon(x,y, x,y, x,y, ...)` where `x` and `y` are Numbers.\n   */\n  constructor(...points) {\n    /**\n     * The type of the object, mainly used to avoid `instanceof` checks\n     * @default 'polygon'\n     */\n    this.type = \"polygon\";\n    let flat = Array.isArray(points[0]) ? points[0] : points;\n    if (typeof flat[0] !== \"number\") {\n      const p = [];\n      for (let i = 0, il = flat.length; i < il; i++) {\n        p.push(flat[i].x, flat[i].y);\n      }\n      flat = p;\n    }\n    this.points = flat;\n    this.closePath = true;\n  }\n  /**\n   * Determines whether the polygon's points are arranged in a clockwise direction.\n   * This is calculated using the \"shoelace formula\" (also known as surveyor's formula) to find the signed area.\n   * A positive area indicates clockwise winding, while negative indicates counter-clockwise.\n   *\n   * The formula sums up the cross products of adjacent vertices:\n   * For each pair of adjacent points (x1,y1) and (x2,y2), we calculate (x1*y2 - x2*y1)\n   * The final sum divided by 2 gives the signed area - positive for clockwise.\n   * @returns `true` if the polygon's points are arranged clockwise, `false` if counter-clockwise\n   */\n  isClockwise() {\n    let area = 0;\n    const points = this.points;\n    const length = points.length;\n    for (let i = 0; i < length; i += 2) {\n      const x1 = points[i];\n      const y1 = points[i + 1];\n      const x2 = points[(i + 2) % length];\n      const y2 = points[(i + 3) % length];\n      area += (x2 - x1) * (y2 + y1);\n    }\n    return area < 0;\n  }\n  /**\n   * Checks if this polygon completely contains another polygon.\n   *\n   * This is useful for detecting holes in shapes, like when parsing SVG paths.\n   * For example, if you have two polygons:\n   * ```ts\n   * const outerSquare = new Polygon([0,0, 100,0, 100,100, 0,100]); // A square\n   * const innerSquare = new Polygon([25,25, 75,25, 75,75, 25,75]); // A smaller square inside\n   *\n   * outerSquare.containsPolygon(innerSquare); // Returns true\n   * innerSquare.containsPolygon(outerSquare); // Returns false\n   * ```\n   * @param polygon - The polygon to test for containment\n   * @returns True if this polygon completely contains the other polygon\n   */\n  containsPolygon(polygon) {\n    const thisBounds = this.getBounds(tempRect);\n    const otherBounds = polygon.getBounds(tempRect2);\n    if (!thisBounds.containsRect(otherBounds)) {\n      return false;\n    }\n    const points = polygon.points;\n    for (let i = 0; i < points.length; i += 2) {\n      const x = points[i];\n      const y = points[i + 1];\n      if (!this.contains(x, y)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  /**\n   * Creates a clone of this polygon.\n   * @returns - A copy of the polygon.\n   */\n  clone() {\n    const points = this.points.slice();\n    const polygon = new Polygon(points);\n    polygon.closePath = this.closePath;\n    return polygon;\n  }\n  /**\n   * Checks whether the x and y coordinates passed to this function are contained within this polygon.\n   * @param x - The X coordinate of the point to test.\n   * @param y - The Y coordinate of the point to test.\n   * @returns - Whether the x/y coordinates are within this polygon.\n   */\n  contains(x, y) {\n    let inside = false;\n    const length = this.points.length / 2;\n    for (let i = 0, j = length - 1; i < length; j = i++) {\n      const xi = this.points[i * 2];\n      const yi = this.points[i * 2 + 1];\n      const xj = this.points[j * 2];\n      const yj = this.points[j * 2 + 1];\n      const intersect = yi > y !== yj > y && x < (xj - xi) * ((y - yi) / (yj - yi)) + xi;\n      if (intersect) {\n        inside = !inside;\n      }\n    }\n    return inside;\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this polygon including the stroke.\n   * @param x - The X coordinate of the point to test\n   * @param y - The Y coordinate of the point to test\n   * @param strokeWidth - The width of the line to check\n   * @param alignment - The alignment of the stroke, 0.5 by default\n   * @returns Whether the x/y coordinates are within this polygon\n   */\n  strokeContains(x, y, strokeWidth, alignment = 0.5) {\n    const strokeWidthSquared = strokeWidth * strokeWidth;\n    const rightWidthSquared = strokeWidthSquared * (1 - alignment);\n    const leftWidthSquared = strokeWidthSquared - rightWidthSquared;\n    const { points } = this;\n    const iterationLength = points.length - (this.closePath ? 0 : 2);\n    for (let i = 0; i < iterationLength; i += 2) {\n      const x1 = points[i];\n      const y1 = points[i + 1];\n      const x2 = points[(i + 2) % points.length];\n      const y2 = points[(i + 3) % points.length];\n      const distanceSquared = squaredDistanceToLineSegment(x, y, x1, y1, x2, y2);\n      const sign = Math.sign((x2 - x1) * (y - y1) - (y2 - y1) * (x - x1));\n      if (distanceSquared <= (sign < 0 ? leftWidthSquared : rightWidthSquared)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  /**\n   * Returns the framing rectangle of the polygon as a Rectangle object\n   * @param out - optional rectangle to store the result\n   * @returns The framing rectangle\n   */\n  getBounds(out) {\n    out || (out = new Rectangle());\n    const points = this.points;\n    let minX = Infinity;\n    let maxX = -Infinity;\n    let minY = Infinity;\n    let maxY = -Infinity;\n    for (let i = 0, n = points.length; i < n; i += 2) {\n      const x = points[i];\n      const y = points[i + 1];\n      minX = x < minX ? x : minX;\n      maxX = x > maxX ? x : maxX;\n      minY = y < minY ? y : minY;\n      maxY = y > maxY ? y : maxY;\n    }\n    out.x = minX;\n    out.width = maxX - minX;\n    out.y = minY;\n    out.height = maxY - minY;\n    return out;\n  }\n  /**\n   * Copies another polygon to this one.\n   * @param polygon - The polygon to copy from.\n   * @returns Returns itself.\n   */\n  copyFrom(polygon) {\n    this.points = polygon.points.slice();\n    this.closePath = polygon.closePath;\n    return this;\n  }\n  /**\n   * Copies this polygon to another one.\n   * @param polygon - The polygon to copy to.\n   * @returns Returns given parameter.\n   */\n  copyTo(polygon) {\n    polygon.copyFrom(this);\n    return polygon;\n  }\n  toString() {\n    return `[pixi.js/math:PolygoncloseStroke=${this.closePath}points=${this.points.reduce((pointsDesc, currentPoint) => `${pointsDesc}, ${currentPoint}`, \"\")}]`;\n  }\n  /**\n   * Get the last X coordinate of the polygon\n   * @readonly\n   */\n  get lastX() {\n    return this.points[this.points.length - 2];\n  }\n  /**\n   * Get the last Y coordinate of the polygon\n   * @readonly\n   */\n  get lastY() {\n    return this.points[this.points.length - 1];\n  }\n  /**\n   * Get the first X coordinate of the polygon\n   * @readonly\n   */\n  get x() {\n    return this.points[this.points.length - 2];\n  }\n  /**\n   * Get the first Y coordinate of the polygon\n   * @readonly\n   */\n  get y() {\n    return this.points[this.points.length - 1];\n  }\n}\n\nexport { Polygon };\n//# sourceMappingURL=Polygon.mjs.map\n","import { Rectangle } from './Rectangle.mjs';\n\n\"use strict\";\nconst isCornerWithinStroke = (pX, pY, cornerX, cornerY, radius, strokeWidthInner, strokeWidthOuter) => {\n  const dx = pX - cornerX;\n  const dy = pY - cornerY;\n  const distance = Math.sqrt(dx * dx + dy * dy);\n  return distance >= radius - strokeWidthInner && distance <= radius + strokeWidthOuter;\n};\nclass RoundedRectangle {\n  /**\n   * @param x - The X coordinate of the upper-left corner of the rounded rectangle\n   * @param y - The Y coordinate of the upper-left corner of the rounded rectangle\n   * @param width - The overall width of this rounded rectangle\n   * @param height - The overall height of this rounded rectangle\n   * @param radius - Controls the radius of the rounded corners\n   */\n  constructor(x = 0, y = 0, width = 0, height = 0, radius = 20) {\n    /**\n     * The type of the object, mainly used to avoid `instanceof` checks\n     * @default 'roundedRectangle'\n     */\n    this.type = \"roundedRectangle\";\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.radius = radius;\n  }\n  /**\n   * Returns the framing rectangle of the rounded rectangle as a Rectangle object\n   * @param out - optional rectangle to store the result\n   * @returns The framing rectangle\n   */\n  getBounds(out) {\n    out || (out = new Rectangle());\n    out.x = this.x;\n    out.y = this.y;\n    out.width = this.width;\n    out.height = this.height;\n    return out;\n  }\n  /**\n   * Creates a clone of this Rounded Rectangle.\n   * @returns - A copy of the rounded rectangle.\n   */\n  clone() {\n    return new RoundedRectangle(this.x, this.y, this.width, this.height, this.radius);\n  }\n  /**\n   * Copies another rectangle to this one.\n   * @param rectangle - The rectangle to copy from.\n   * @returns Returns itself.\n   */\n  copyFrom(rectangle) {\n    this.x = rectangle.x;\n    this.y = rectangle.y;\n    this.width = rectangle.width;\n    this.height = rectangle.height;\n    return this;\n  }\n  /**\n   * Copies this rectangle to another one.\n   * @param rectangle - The rectangle to copy to.\n   * @returns Returns given parameter.\n   */\n  copyTo(rectangle) {\n    rectangle.copyFrom(this);\n    return rectangle;\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this Rounded Rectangle\n   * @param x - The X coordinate of the point to test.\n   * @param y - The Y coordinate of the point to test.\n   * @returns - Whether the x/y coordinates are within this Rounded Rectangle.\n   */\n  contains(x, y) {\n    if (this.width <= 0 || this.height <= 0) {\n      return false;\n    }\n    if (x >= this.x && x <= this.x + this.width) {\n      if (y >= this.y && y <= this.y + this.height) {\n        const radius = Math.max(0, Math.min(this.radius, Math.min(this.width, this.height) / 2));\n        if (y >= this.y + radius && y <= this.y + this.height - radius || x >= this.x + radius && x <= this.x + this.width - radius) {\n          return true;\n        }\n        let dx = x - (this.x + radius);\n        let dy = y - (this.y + radius);\n        const radius2 = radius * radius;\n        if (dx * dx + dy * dy <= radius2) {\n          return true;\n        }\n        dx = x - (this.x + this.width - radius);\n        if (dx * dx + dy * dy <= radius2) {\n          return true;\n        }\n        dy = y - (this.y + this.height - radius);\n        if (dx * dx + dy * dy <= radius2) {\n          return true;\n        }\n        dx = x - (this.x + radius);\n        if (dx * dx + dy * dy <= radius2) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this rectangle including the stroke.\n   * @param pX - The X coordinate of the point to test\n   * @param pY - The Y coordinate of the point to test\n   * @param strokeWidth - The width of the line to check\n   * @param alignment - The alignment of the stroke, 0.5 by default\n   * @returns Whether the x/y coordinates are within this rectangle\n   */\n  strokeContains(pX, pY, strokeWidth, alignment = 0.5) {\n    const { x, y, width, height, radius } = this;\n    const strokeWidthOuter = strokeWidth * (1 - alignment);\n    const strokeWidthInner = strokeWidth - strokeWidthOuter;\n    const innerX = x + radius;\n    const innerY = y + radius;\n    const innerWidth = width - radius * 2;\n    const innerHeight = height - radius * 2;\n    const rightBound = x + width;\n    const bottomBound = y + height;\n    if ((pX >= x - strokeWidthOuter && pX <= x + strokeWidthInner || pX >= rightBound - strokeWidthInner && pX <= rightBound + strokeWidthOuter) && pY >= innerY && pY <= innerY + innerHeight) {\n      return true;\n    }\n    if ((pY >= y - strokeWidthOuter && pY <= y + strokeWidthInner || pY >= bottomBound - strokeWidthInner && pY <= bottomBound + strokeWidthOuter) && pX >= innerX && pX <= innerX + innerWidth) {\n      return true;\n    }\n    return (\n      // Top-left\n      pX < innerX && pY < innerY && isCornerWithinStroke(\n        pX,\n        pY,\n        innerX,\n        innerY,\n        radius,\n        strokeWidthInner,\n        strokeWidthOuter\n      ) || pX > rightBound - radius && pY < innerY && isCornerWithinStroke(\n        pX,\n        pY,\n        rightBound - radius,\n        innerY,\n        radius,\n        strokeWidthInner,\n        strokeWidthOuter\n      ) || pX > rightBound - radius && pY > bottomBound - radius && isCornerWithinStroke(\n        pX,\n        pY,\n        rightBound - radius,\n        bottomBound - radius,\n        radius,\n        strokeWidthInner,\n        strokeWidthOuter\n      ) || pX < innerX && pY > bottomBound - radius && isCornerWithinStroke(\n        pX,\n        pY,\n        innerX,\n        bottomBound - radius,\n        radius,\n        strokeWidthInner,\n        strokeWidthOuter\n      )\n    );\n  }\n  toString() {\n    return `[pixi.js/math:RoundedRectangle x=${this.x} y=${this.y}width=${this.width} height=${this.height} radius=${this.radius}]`;\n  }\n}\n\nexport { RoundedRectangle };\n//# sourceMappingURL=RoundedRectangle.mjs.map\n","\"use strict\";\nconst fragTemplate = [\n  \"precision mediump float;\",\n  \"void main(void){\",\n  \"float test = 0.1;\",\n  \"%forloop%\",\n  \"gl_FragColor = vec4(0.0);\",\n  \"}\"\n].join(\"\\n\");\nfunction generateIfTestSrc(maxIfs) {\n  let src = \"\";\n  for (let i = 0; i < maxIfs; ++i) {\n    if (i > 0) {\n      src += \"\\nelse \";\n    }\n    if (i < maxIfs - 1) {\n      src += `if(test == ${i}.0){}`;\n    }\n  }\n  return src;\n}\nfunction checkMaxIfStatementsInShader(maxIfs, gl) {\n  if (maxIfs === 0) {\n    throw new Error(\"Invalid value of `0` passed to `checkMaxIfStatementsInShader`\");\n  }\n  const shader = gl.createShader(gl.FRAGMENT_SHADER);\n  try {\n    while (true) {\n      const fragmentSrc = fragTemplate.replace(/%forloop%/gi, generateIfTestSrc(maxIfs));\n      gl.shaderSource(shader, fragmentSrc);\n      gl.compileShader(shader);\n      if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        maxIfs = maxIfs / 2 | 0;\n      } else {\n        break;\n      }\n    }\n  } finally {\n    gl.deleteShader(shader);\n  }\n  return maxIfs;\n}\n\nexport { checkMaxIfStatementsInShader };\n//# sourceMappingURL=checkMaxIfStatementsInShader.mjs.map\n","import { getTestContext } from '../../../renderers/gl/shader/program/getTestContext.mjs';\nimport { checkMaxIfStatementsInShader } from './checkMaxIfStatementsInShader.mjs';\n\n\"use strict\";\nlet maxTexturesPerBatchCache = null;\nfunction getMaxTexturesPerBatch() {\n  if (maxTexturesPerBatchCache)\n    return maxTexturesPerBatchCache;\n  const gl = getTestContext();\n  maxTexturesPerBatchCache = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n  maxTexturesPerBatchCache = checkMaxIfStatementsInShader(\n    maxTexturesPerBatchCache,\n    gl\n  );\n  gl.getExtension(\"WEBGL_lose_context\")?.loseContext();\n  return maxTexturesPerBatchCache;\n}\n\nexport { getMaxTexturesPerBatch };\n//# sourceMappingURL=maxRecommendedTextures.mjs.map\n","import { BindGroup } from '../../renderers/gpu/shader/BindGroup.mjs';\nimport { Texture } from '../../renderers/shared/texture/Texture.mjs';\nimport { getMaxTexturesPerBatch } from '../gl/utils/maxRecommendedTextures.mjs';\n\n\"use strict\";\nconst cachedGroups = {};\nfunction getTextureBatchBindGroup(textures, size) {\n  let uid = 2166136261;\n  for (let i = 0; i < size; i++) {\n    uid ^= textures[i].uid;\n    uid = Math.imul(uid, 16777619);\n    uid >>>= 0;\n  }\n  return cachedGroups[uid] || generateTextureBatchBindGroup(textures, size, uid);\n}\nlet maxTextures = 0;\nfunction generateTextureBatchBindGroup(textures, size, key) {\n  const bindGroupResources = {};\n  let bindIndex = 0;\n  if (!maxTextures)\n    maxTextures = getMaxTexturesPerBatch();\n  for (let i = 0; i < maxTextures; i++) {\n    const texture = i < size ? textures[i] : Texture.EMPTY.source;\n    bindGroupResources[bindIndex++] = texture.source;\n    bindGroupResources[bindIndex++] = texture.style;\n  }\n  const bindGroup = new BindGroup(bindGroupResources);\n  cachedGroups[key] = bindGroup;\n  return bindGroup;\n}\n\nexport { getTextureBatchBindGroup };\n//# sourceMappingURL=getTextureBatchBindGroup.mjs.map\n","\"use strict\";\nclass ViewableBuffer {\n  constructor(sizeOrBuffer) {\n    if (typeof sizeOrBuffer === \"number\") {\n      this.rawBinaryData = new ArrayBuffer(sizeOrBuffer);\n    } else if (sizeOrBuffer instanceof Uint8Array) {\n      this.rawBinaryData = sizeOrBuffer.buffer;\n    } else {\n      this.rawBinaryData = sizeOrBuffer;\n    }\n    this.uint32View = new Uint32Array(this.rawBinaryData);\n    this.float32View = new Float32Array(this.rawBinaryData);\n    this.size = this.rawBinaryData.byteLength;\n  }\n  /** View on the raw binary data as a `Int8Array`. */\n  get int8View() {\n    if (!this._int8View) {\n      this._int8View = new Int8Array(this.rawBinaryData);\n    }\n    return this._int8View;\n  }\n  /** View on the raw binary data as a `Uint8Array`. */\n  get uint8View() {\n    if (!this._uint8View) {\n      this._uint8View = new Uint8Array(this.rawBinaryData);\n    }\n    return this._uint8View;\n  }\n  /**  View on the raw binary data as a `Int16Array`. */\n  get int16View() {\n    if (!this._int16View) {\n      this._int16View = new Int16Array(this.rawBinaryData);\n    }\n    return this._int16View;\n  }\n  /** View on the raw binary data as a `Int32Array`. */\n  get int32View() {\n    if (!this._int32View) {\n      this._int32View = new Int32Array(this.rawBinaryData);\n    }\n    return this._int32View;\n  }\n  /** View on the raw binary data as a `Float64Array`. */\n  get float64View() {\n    if (!this._float64Array) {\n      this._float64Array = new Float64Array(this.rawBinaryData);\n    }\n    return this._float64Array;\n  }\n  /** View on the raw binary data as a `BigUint64Array`. */\n  get bigUint64View() {\n    if (!this._bigUint64Array) {\n      this._bigUint64Array = new BigUint64Array(this.rawBinaryData);\n    }\n    return this._bigUint64Array;\n  }\n  /**\n   * Returns the view of the given type.\n   * @param type - One of `int8`, `uint8`, `int16`,\n   *    `uint16`, `int32`, `uint32`, and `float32`.\n   * @returns - typed array of given type\n   */\n  view(type) {\n    return this[`${type}View`];\n  }\n  /** Destroys all buffer references. Do not use after calling this. */\n  destroy() {\n    this.rawBinaryData = null;\n    this._int8View = null;\n    this._uint8View = null;\n    this._int16View = null;\n    this.uint16View = null;\n    this._int32View = null;\n    this.uint32View = null;\n    this.float32View = null;\n  }\n  /**\n   * Returns the size of the given type in bytes.\n   * @param type - One of `int8`, `uint8`, `int16`,\n   *   `uint16`, `int32`, `uint32`, and `float32`.\n   * @returns - size of the type in bytes\n   */\n  static sizeOf(type) {\n    switch (type) {\n      case \"int8\":\n      case \"uint8\":\n        return 1;\n      case \"int16\":\n      case \"uint16\":\n        return 2;\n      case \"int32\":\n      case \"uint32\":\n      case \"float32\":\n        return 4;\n      default:\n        throw new Error(`${type} isn't a valid view type`);\n    }\n  }\n}\n\nexport { ViewableBuffer };\n//# sourceMappingURL=ViewableBuffer.mjs.map\n","\"use strict\";\nfunction fastCopy(sourceBuffer, destinationBuffer) {\n  const lengthDouble = sourceBuffer.byteLength / 8 | 0;\n  const sourceFloat64View = new Float64Array(sourceBuffer, 0, lengthDouble);\n  const destinationFloat64View = new Float64Array(destinationBuffer, 0, lengthDouble);\n  destinationFloat64View.set(sourceFloat64View);\n  const remainingBytes = sourceBuffer.byteLength - lengthDouble * 8;\n  if (remainingBytes > 0) {\n    const sourceUint8View = new Uint8Array(sourceBuffer, lengthDouble * 8, remainingBytes);\n    const destinationUint8View = new Uint8Array(destinationBuffer, lengthDouble * 8, remainingBytes);\n    destinationUint8View.set(sourceUint8View);\n  }\n}\n\nexport { fastCopy };\n//# sourceMappingURL=fastCopy.mjs.map\n","\"use strict\";\nconst BLEND_TO_NPM = {\n  normal: \"normal-npm\",\n  add: \"add-npm\",\n  screen: \"screen-npm\"\n};\nvar STENCIL_MODES = /* @__PURE__ */ ((STENCIL_MODES2) => {\n  STENCIL_MODES2[STENCIL_MODES2[\"DISABLED\"] = 0] = \"DISABLED\";\n  STENCIL_MODES2[STENCIL_MODES2[\"RENDERING_MASK_ADD\"] = 1] = \"RENDERING_MASK_ADD\";\n  STENCIL_MODES2[STENCIL_MODES2[\"MASK_ACTIVE\"] = 2] = \"MASK_ACTIVE\";\n  STENCIL_MODES2[STENCIL_MODES2[\"INVERSE_MASK_ACTIVE\"] = 3] = \"INVERSE_MASK_ACTIVE\";\n  STENCIL_MODES2[STENCIL_MODES2[\"RENDERING_MASK_REMOVE\"] = 4] = \"RENDERING_MASK_REMOVE\";\n  STENCIL_MODES2[STENCIL_MODES2[\"NONE\"] = 5] = \"NONE\";\n  return STENCIL_MODES2;\n})(STENCIL_MODES || {});\n\nexport { BLEND_TO_NPM, STENCIL_MODES };\n//# sourceMappingURL=const.mjs.map\n","import { BLEND_TO_NPM } from './const.mjs';\n\n\"use strict\";\nfunction getAdjustedBlendModeBlend(blendMode, textureSource) {\n  if (textureSource.alphaMode === \"no-premultiply-alpha\") {\n    return BLEND_TO_NPM[blendMode] || blendMode;\n  }\n  return blendMode;\n}\n\nexport { getAdjustedBlendModeBlend };\n//# sourceMappingURL=getAdjustedBlendModeBlend.mjs.map\n","\"use strict\";\nclass BatchTextureArray {\n  constructor() {\n    /** Respective locations for textures. */\n    this.ids = /* @__PURE__ */ Object.create(null);\n    this.textures = [];\n    this.count = 0;\n  }\n  /** Clear the textures and their locations. */\n  clear() {\n    for (let i = 0; i < this.count; i++) {\n      const t = this.textures[i];\n      this.textures[i] = null;\n      this.ids[t.uid] = null;\n    }\n    this.count = 0;\n  }\n}\n\nexport { BatchTextureArray };\n//# sourceMappingURL=BatchTextureArray.mjs.map\n","import { uid } from '../../../utils/data/uid.mjs';\nimport { ViewableBuffer } from '../../../utils/data/ViewableBuffer.mjs';\nimport { fastCopy } from '../../renderers/shared/buffer/utils/fastCopy.mjs';\nimport { getAdjustedBlendModeBlend } from '../../renderers/shared/state/getAdjustedBlendModeBlend.mjs';\nimport { getMaxTexturesPerBatch } from '../gl/utils/maxRecommendedTextures.mjs';\nimport { BatchTextureArray } from './BatchTextureArray.mjs';\n\n\"use strict\";\nclass Batch {\n  constructor() {\n    this.renderPipeId = \"batch\";\n    this.action = \"startBatch\";\n    // TODO - eventually this could be useful for flagging batches as dirty and then only rebuilding those ones\n    // public elementStart = 0;\n    // public elementSize = 0;\n    // for drawing..\n    this.start = 0;\n    this.size = 0;\n    this.textures = new BatchTextureArray();\n    this.blendMode = \"normal\";\n    this.topology = \"triangle-strip\";\n    this.canBundle = true;\n  }\n  destroy() {\n    this.textures = null;\n    this.gpuBindGroup = null;\n    this.bindGroup = null;\n    this.batcher = null;\n  }\n}\nconst batchPool = [];\nlet batchPoolIndex = 0;\nfunction getBatchFromPool() {\n  return batchPoolIndex > 0 ? batchPool[--batchPoolIndex] : new Batch();\n}\nfunction returnBatchToPool(batch) {\n  batchPool[batchPoolIndex++] = batch;\n}\nlet BATCH_TICK = 0;\nconst _Batcher = class _Batcher {\n  constructor(options = {}) {\n    /** unique id for this batcher */\n    this.uid = uid(\"batcher\");\n    /** Indicates whether the batch data has been modified and needs updating. */\n    this.dirty = true;\n    /** The current index of the batch being processed. */\n    this.batchIndex = 0;\n    /** An array of all batches created during the current rendering process. */\n    this.batches = [];\n    this._elements = [];\n    _Batcher.defaultOptions.maxTextures = _Batcher.defaultOptions.maxTextures ?? getMaxTexturesPerBatch();\n    options = { ..._Batcher.defaultOptions, ...options };\n    const { maxTextures, attributesInitialSize, indicesInitialSize } = options;\n    this.attributeBuffer = new ViewableBuffer(attributesInitialSize * 4);\n    this.indexBuffer = new Uint16Array(indicesInitialSize);\n    this.maxTextures = maxTextures;\n  }\n  begin() {\n    this.elementSize = 0;\n    this.elementStart = 0;\n    this.indexSize = 0;\n    this.attributeSize = 0;\n    for (let i = 0; i < this.batchIndex; i++) {\n      returnBatchToPool(this.batches[i]);\n    }\n    this.batchIndex = 0;\n    this._batchIndexStart = 0;\n    this._batchIndexSize = 0;\n    this.dirty = true;\n  }\n  add(batchableObject) {\n    this._elements[this.elementSize++] = batchableObject;\n    batchableObject._indexStart = this.indexSize;\n    batchableObject._attributeStart = this.attributeSize;\n    batchableObject._batcher = this;\n    this.indexSize += batchableObject.indexSize;\n    this.attributeSize += batchableObject.attributeSize * this.vertexSize;\n  }\n  checkAndUpdateTexture(batchableObject, texture) {\n    const textureId = batchableObject._batch.textures.ids[texture._source.uid];\n    if (!textureId && textureId !== 0)\n      return false;\n    batchableObject._textureId = textureId;\n    batchableObject.texture = texture;\n    return true;\n  }\n  updateElement(batchableObject) {\n    this.dirty = true;\n    const attributeBuffer = this.attributeBuffer;\n    if (batchableObject.packAsQuad) {\n      this.packQuadAttributes(\n        batchableObject,\n        attributeBuffer.float32View,\n        attributeBuffer.uint32View,\n        batchableObject._attributeStart,\n        batchableObject._textureId\n      );\n    } else {\n      this.packAttributes(\n        batchableObject,\n        attributeBuffer.float32View,\n        attributeBuffer.uint32View,\n        batchableObject._attributeStart,\n        batchableObject._textureId\n      );\n    }\n  }\n  /**\n   * breaks the batcher. This happens when a batch gets too big,\n   * or we need to switch to a different type of rendering (a filter for example)\n   * @param instructionSet\n   */\n  break(instructionSet) {\n    const elements = this._elements;\n    if (!elements[this.elementStart])\n      return;\n    let batch = getBatchFromPool();\n    let textureBatch = batch.textures;\n    textureBatch.clear();\n    const firstElement = elements[this.elementStart];\n    let blendMode = getAdjustedBlendModeBlend(firstElement.blendMode, firstElement.texture._source);\n    let topology = firstElement.topology;\n    if (this.attributeSize * 4 > this.attributeBuffer.size) {\n      this._resizeAttributeBuffer(this.attributeSize * 4);\n    }\n    if (this.indexSize > this.indexBuffer.length) {\n      this._resizeIndexBuffer(this.indexSize);\n    }\n    const f32 = this.attributeBuffer.float32View;\n    const u32 = this.attributeBuffer.uint32View;\n    const indexBuffer = this.indexBuffer;\n    let size = this._batchIndexSize;\n    let start = this._batchIndexStart;\n    let action = \"startBatch\";\n    const maxTextures = this.maxTextures;\n    for (let i = this.elementStart; i < this.elementSize; ++i) {\n      const element = elements[i];\n      elements[i] = null;\n      const texture = element.texture;\n      const source = texture._source;\n      const adjustedBlendMode = getAdjustedBlendModeBlend(element.blendMode, source);\n      const breakRequired = blendMode !== adjustedBlendMode || topology !== element.topology;\n      if (source._batchTick === BATCH_TICK && !breakRequired) {\n        element._textureId = source._textureBindLocation;\n        size += element.indexSize;\n        if (element.packAsQuad) {\n          this.packQuadAttributes(\n            element,\n            f32,\n            u32,\n            element._attributeStart,\n            element._textureId\n          );\n          this.packQuadIndex(\n            indexBuffer,\n            element._indexStart,\n            element._attributeStart / this.vertexSize\n          );\n        } else {\n          this.packAttributes(\n            element,\n            f32,\n            u32,\n            element._attributeStart,\n            element._textureId\n          );\n          this.packIndex(\n            element,\n            indexBuffer,\n            element._indexStart,\n            element._attributeStart / this.vertexSize\n          );\n        }\n        element._batch = batch;\n        continue;\n      }\n      source._batchTick = BATCH_TICK;\n      if (textureBatch.count >= maxTextures || breakRequired) {\n        this._finishBatch(\n          batch,\n          start,\n          size - start,\n          textureBatch,\n          blendMode,\n          topology,\n          instructionSet,\n          action\n        );\n        action = \"renderBatch\";\n        start = size;\n        blendMode = adjustedBlendMode;\n        topology = element.topology;\n        batch = getBatchFromPool();\n        textureBatch = batch.textures;\n        textureBatch.clear();\n        ++BATCH_TICK;\n      }\n      element._textureId = source._textureBindLocation = textureBatch.count;\n      textureBatch.ids[source.uid] = textureBatch.count;\n      textureBatch.textures[textureBatch.count++] = source;\n      element._batch = batch;\n      size += element.indexSize;\n      if (element.packAsQuad) {\n        this.packQuadAttributes(\n          element,\n          f32,\n          u32,\n          element._attributeStart,\n          element._textureId\n        );\n        this.packQuadIndex(\n          indexBuffer,\n          element._indexStart,\n          element._attributeStart / this.vertexSize\n        );\n      } else {\n        this.packAttributes(\n          element,\n          f32,\n          u32,\n          element._attributeStart,\n          element._textureId\n        );\n        this.packIndex(\n          element,\n          indexBuffer,\n          element._indexStart,\n          element._attributeStart / this.vertexSize\n        );\n      }\n    }\n    if (textureBatch.count > 0) {\n      this._finishBatch(\n        batch,\n        start,\n        size - start,\n        textureBatch,\n        blendMode,\n        topology,\n        instructionSet,\n        action\n      );\n      start = size;\n      ++BATCH_TICK;\n    }\n    this.elementStart = this.elementSize;\n    this._batchIndexStart = start;\n    this._batchIndexSize = size;\n  }\n  _finishBatch(batch, indexStart, indexSize, textureBatch, blendMode, topology, instructionSet, action) {\n    batch.gpuBindGroup = null;\n    batch.bindGroup = null;\n    batch.action = action;\n    batch.batcher = this;\n    batch.textures = textureBatch;\n    batch.blendMode = blendMode;\n    batch.topology = topology;\n    batch.start = indexStart;\n    batch.size = indexSize;\n    ++BATCH_TICK;\n    this.batches[this.batchIndex++] = batch;\n    instructionSet.add(batch);\n  }\n  finish(instructionSet) {\n    this.break(instructionSet);\n  }\n  /**\n   * Resizes the attribute buffer to the given size (1 = 1 float32)\n   * @param size - the size in vertices to ensure (not bytes!)\n   */\n  ensureAttributeBuffer(size) {\n    if (size * 4 <= this.attributeBuffer.size)\n      return;\n    this._resizeAttributeBuffer(size * 4);\n  }\n  /**\n   * Resizes the index buffer to the given size (1 = 1 float32)\n   * @param size - the size in vertices to ensure (not bytes!)\n   */\n  ensureIndexBuffer(size) {\n    if (size <= this.indexBuffer.length)\n      return;\n    this._resizeIndexBuffer(size);\n  }\n  _resizeAttributeBuffer(size) {\n    const newSize = Math.max(size, this.attributeBuffer.size * 2);\n    const newArrayBuffer = new ViewableBuffer(newSize);\n    fastCopy(this.attributeBuffer.rawBinaryData, newArrayBuffer.rawBinaryData);\n    this.attributeBuffer = newArrayBuffer;\n  }\n  _resizeIndexBuffer(size) {\n    const indexBuffer = this.indexBuffer;\n    let newSize = Math.max(size, indexBuffer.length * 1.5);\n    newSize += newSize % 2;\n    const newIndexBuffer = newSize > 65535 ? new Uint32Array(newSize) : new Uint16Array(newSize);\n    if (newIndexBuffer.BYTES_PER_ELEMENT !== indexBuffer.BYTES_PER_ELEMENT) {\n      for (let i = 0; i < indexBuffer.length; i++) {\n        newIndexBuffer[i] = indexBuffer[i];\n      }\n    } else {\n      fastCopy(indexBuffer.buffer, newIndexBuffer.buffer);\n    }\n    this.indexBuffer = newIndexBuffer;\n  }\n  packQuadIndex(indexBuffer, index, indicesOffset) {\n    indexBuffer[index] = indicesOffset + 0;\n    indexBuffer[index + 1] = indicesOffset + 1;\n    indexBuffer[index + 2] = indicesOffset + 2;\n    indexBuffer[index + 3] = indicesOffset + 0;\n    indexBuffer[index + 4] = indicesOffset + 2;\n    indexBuffer[index + 5] = indicesOffset + 3;\n  }\n  packIndex(element, indexBuffer, index, indicesOffset) {\n    const indices = element.indices;\n    const size = element.indexSize;\n    const indexOffset = element.indexOffset;\n    const attributeOffset = element.attributeOffset;\n    for (let i = 0; i < size; i++) {\n      indexBuffer[index++] = indicesOffset + indices[i + indexOffset] - attributeOffset;\n    }\n  }\n  destroy() {\n    for (let i = 0; i < this.batches.length; i++) {\n      returnBatchToPool(this.batches[i]);\n    }\n    this.batches = null;\n    for (let i = 0; i < this._elements.length; i++) {\n      this._elements[i]._batch = null;\n    }\n    this._elements = null;\n    this.indexBuffer = null;\n    this.attributeBuffer.destroy();\n    this.attributeBuffer = null;\n  }\n};\n_Batcher.defaultOptions = {\n  maxTextures: null,\n  attributesInitialSize: 4,\n  indicesInitialSize: 6\n};\nlet Batcher = _Batcher;\n\nexport { Batch, Batcher };\n//# sourceMappingURL=Batcher.mjs.map\n","\"use strict\";\nvar BufferUsage = /* @__PURE__ */ ((BufferUsage2) => {\n  BufferUsage2[BufferUsage2[\"MAP_READ\"] = 1] = \"MAP_READ\";\n  BufferUsage2[BufferUsage2[\"MAP_WRITE\"] = 2] = \"MAP_WRITE\";\n  BufferUsage2[BufferUsage2[\"COPY_SRC\"] = 4] = \"COPY_SRC\";\n  BufferUsage2[BufferUsage2[\"COPY_DST\"] = 8] = \"COPY_DST\";\n  BufferUsage2[BufferUsage2[\"INDEX\"] = 16] = \"INDEX\";\n  BufferUsage2[BufferUsage2[\"VERTEX\"] = 32] = \"VERTEX\";\n  BufferUsage2[BufferUsage2[\"UNIFORM\"] = 64] = \"UNIFORM\";\n  BufferUsage2[BufferUsage2[\"STORAGE\"] = 128] = \"STORAGE\";\n  BufferUsage2[BufferUsage2[\"INDIRECT\"] = 256] = \"INDIRECT\";\n  BufferUsage2[BufferUsage2[\"QUERY_RESOLVE\"] = 512] = \"QUERY_RESOLVE\";\n  BufferUsage2[BufferUsage2[\"STATIC\"] = 1024] = \"STATIC\";\n  return BufferUsage2;\n})(BufferUsage || {});\n\nexport { BufferUsage };\n//# sourceMappingURL=const.mjs.map\n","import EventEmitter from 'eventemitter3';\nimport { uid } from '../../../../utils/data/uid.mjs';\nimport { BufferUsage } from './const.mjs';\n\n\"use strict\";\nclass Buffer extends EventEmitter {\n  /**\n   * Creates a new Buffer with the given options\n   * @param options - the options for the buffer\n   */\n  constructor(options) {\n    let { data, size } = options;\n    const { usage, label, shrinkToFit } = options;\n    super();\n    /**\n     * emits when the underlying buffer has changed shape (i.e. resized)\n     * letting the renderer know that it needs to discard the old buffer on the GPU and create a new one\n     * @event change\n     */\n    /**\n     * emits when the underlying buffer data has been updated. letting the renderer know\n     * that it needs to update the buffer on the GPU\n     * @event update\n     */\n    /**\n     * emits when the buffer is destroyed. letting the renderer know that it needs to destroy the buffer on the GPU\n     * @event destroy\n     */\n    /** a unique id for this uniform group used through the renderer */\n    this.uid = uid(\"buffer\");\n    /**\n     * a resource type, used to identify how to handle it when its in a bind group / shader resource\n     * @internal\n     * @ignore\n     */\n    this._resourceType = \"buffer\";\n    /**\n     * the resource id used internally by the renderer to build bind group keys\n     * @internal\n     * @ignore\n     */\n    this._resourceId = uid(\"resource\");\n    /**\n     * used internally to know if a uniform group was used in the last render pass\n     * @internal\n     * @ignore\n     */\n    this._touched = 0;\n    /**\n     * @internal\n     * @ignore\n     */\n    this._updateID = 1;\n    this._dataInt32 = null;\n    /**\n     * should the GPU buffer be shrunk when the data becomes smaller?\n     * changing this will cause the buffer to be destroyed and a new one created on the GPU\n     * this can be expensive, especially if the buffer is already big enough!\n     * setting this to false will prevent the buffer from being shrunk. This will yield better performance\n     * if you are constantly setting data that is changing size often.\n     * @default true\n     */\n    this.shrinkToFit = true;\n    /**\n     * Has the buffer been destroyed?\n     * @readonly\n     */\n    this.destroyed = false;\n    if (data instanceof Array) {\n      data = new Float32Array(data);\n    }\n    this._data = data;\n    size ?? (size = data?.byteLength);\n    const mappedAtCreation = !!data;\n    this.descriptor = {\n      size,\n      usage,\n      mappedAtCreation,\n      label\n    };\n    this.shrinkToFit = shrinkToFit ?? true;\n  }\n  /** the data in the buffer */\n  get data() {\n    return this._data;\n  }\n  set data(value) {\n    this.setDataWithSize(value, value.length, true);\n  }\n  get dataInt32() {\n    if (!this._dataInt32) {\n      this._dataInt32 = new Int32Array(this.data.buffer);\n    }\n    return this._dataInt32;\n  }\n  /** whether the buffer is static or not */\n  get static() {\n    return !!(this.descriptor.usage & BufferUsage.STATIC);\n  }\n  set static(value) {\n    if (value) {\n      this.descriptor.usage |= BufferUsage.STATIC;\n    } else {\n      this.descriptor.usage &= ~BufferUsage.STATIC;\n    }\n  }\n  /**\n   * Sets the data in the buffer to the given value. This will immediately update the buffer on the GPU.\n   * If you only want to update a subset of the buffer, you can pass in the size of the data.\n   * @param value - the data to set\n   * @param size - the size of the data in bytes\n   * @param syncGPU - should the buffer be updated on the GPU immediately?\n   */\n  setDataWithSize(value, size, syncGPU) {\n    this._updateID++;\n    this._updateSize = size * value.BYTES_PER_ELEMENT;\n    if (this._data === value) {\n      if (syncGPU)\n        this.emit(\"update\", this);\n      return;\n    }\n    const oldData = this._data;\n    this._data = value;\n    this._dataInt32 = null;\n    if (!oldData || oldData.length !== value.length) {\n      if (!this.shrinkToFit && oldData && value.byteLength < oldData.byteLength) {\n        if (syncGPU)\n          this.emit(\"update\", this);\n      } else {\n        this.descriptor.size = value.byteLength;\n        this._resourceId = uid(\"resource\");\n        this.emit(\"change\", this);\n      }\n      return;\n    }\n    if (syncGPU)\n      this.emit(\"update\", this);\n  }\n  /**\n   * updates the buffer on the GPU to reflect the data in the buffer.\n   * By default it will update the entire buffer. If you only want to update a subset of the buffer,\n   * you can pass in the size of the buffer to update.\n   * @param sizeInBytes - the new size of the buffer in bytes\n   */\n  update(sizeInBytes) {\n    this._updateSize = sizeInBytes ?? this._updateSize;\n    this._updateID++;\n    this.emit(\"update\", this);\n  }\n  /** Destroys the buffer */\n  destroy() {\n    this.destroyed = true;\n    this.emit(\"destroy\", this);\n    this.emit(\"change\", this);\n    this._data = null;\n    this.descriptor = null;\n    this.removeAllListeners();\n  }\n}\n\nexport { Buffer };\n//# sourceMappingURL=Buffer.mjs.map\n","import { Buffer } from '../../buffer/Buffer.mjs';\nimport { BufferUsage } from '../../buffer/const.mjs';\n\n\"use strict\";\nfunction ensureIsBuffer(buffer, index) {\n  if (!(buffer instanceof Buffer)) {\n    let usage = index ? BufferUsage.INDEX : BufferUsage.VERTEX;\n    if (buffer instanceof Array) {\n      if (index) {\n        buffer = new Uint32Array(buffer);\n        usage = BufferUsage.INDEX | BufferUsage.COPY_DST;\n      } else {\n        buffer = new Float32Array(buffer);\n        usage = BufferUsage.VERTEX | BufferUsage.COPY_DST;\n      }\n    }\n    buffer = new Buffer({\n      data: buffer,\n      label: index ? \"index-mesh-buffer\" : \"vertex-mesh-buffer\",\n      usage\n    });\n  }\n  return buffer;\n}\n\nexport { ensureIsBuffer };\n//# sourceMappingURL=ensureIsBuffer.mjs.map\n","\"use strict\";\nfunction getGeometryBounds(geometry, attributeId, bounds) {\n  const attribute = geometry.getAttribute(attributeId);\n  if (!attribute) {\n    bounds.minX = 0;\n    bounds.minY = 0;\n    bounds.maxX = 0;\n    bounds.maxY = 0;\n    return bounds;\n  }\n  const data = attribute.buffer.data;\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  const byteSize = data.BYTES_PER_ELEMENT;\n  const offset = (attribute.offset || 0) / byteSize;\n  const stride = (attribute.stride || 2 * 4) / byteSize;\n  for (let i = offset; i < data.length; i += stride) {\n    const x = data[i];\n    const y = data[i + 1];\n    if (x > maxX)\n      maxX = x;\n    if (y > maxY)\n      maxY = y;\n    if (x < minX)\n      minX = x;\n    if (y < minY)\n      minY = y;\n  }\n  bounds.minX = minX;\n  bounds.minY = minY;\n  bounds.maxX = maxX;\n  bounds.maxY = maxY;\n  return bounds;\n}\n\nexport { getGeometryBounds };\n//# sourceMappingURL=getGeometryBounds.mjs.map\n","import EventEmitter from 'eventemitter3';\nimport { Bounds } from '../../../../scene/container/bounds/Bounds.mjs';\nimport { uid } from '../../../../utils/data/uid.mjs';\nimport { Buffer } from '../buffer/Buffer.mjs';\nimport { ensureIsBuffer } from './utils/ensureIsBuffer.mjs';\nimport { getGeometryBounds } from './utils/getGeometryBounds.mjs';\n\n\"use strict\";\nfunction ensureIsAttribute(attribute) {\n  if (attribute instanceof Buffer || Array.isArray(attribute) || attribute.BYTES_PER_ELEMENT) {\n    attribute = {\n      buffer: attribute\n    };\n  }\n  attribute.buffer = ensureIsBuffer(attribute.buffer, false);\n  return attribute;\n}\nclass Geometry extends EventEmitter {\n  /**\n   * Create a new instance of a geometry\n   * @param options - The options for the geometry.\n   */\n  constructor(options = {}) {\n    super();\n    /** The unique id of the geometry. */\n    this.uid = uid(\"geometry\");\n    /**\n     * the layout key will be generated by WebGPU all geometries that have the same structure\n     * will have the same layout key. This is used to cache the pipeline layout\n     * @internal\n     * @ignore\n     */\n    this._layoutKey = 0;\n    /** the instance count of the geometry to draw */\n    this.instanceCount = 1;\n    this._bounds = new Bounds();\n    this._boundsDirty = true;\n    const { attributes, indexBuffer, topology } = options;\n    this.buffers = [];\n    this.attributes = {};\n    if (attributes) {\n      for (const i in attributes) {\n        this.addAttribute(i, attributes[i]);\n      }\n    }\n    this.instanceCount = options.instanceCount ?? 1;\n    if (indexBuffer) {\n      this.addIndex(indexBuffer);\n    }\n    this.topology = topology || \"triangle-list\";\n  }\n  onBufferUpdate() {\n    this._boundsDirty = true;\n    this.emit(\"update\", this);\n  }\n  /**\n   * Returns the requested attribute.\n   * @param id - The name of the attribute required\n   * @returns - The attribute requested.\n   */\n  getAttribute(id) {\n    return this.attributes[id];\n  }\n  /**\n   * Returns the index buffer\n   * @returns - The index buffer.\n   */\n  getIndex() {\n    return this.indexBuffer;\n  }\n  /**\n   * Returns the requested buffer.\n   * @param id - The name of the buffer required.\n   * @returns - The buffer requested.\n   */\n  getBuffer(id) {\n    return this.getAttribute(id).buffer;\n  }\n  /**\n   * Used to figure out how many vertices there are in this geometry\n   * @returns the number of vertices in the geometry\n   */\n  getSize() {\n    for (const i in this.attributes) {\n      const attribute = this.attributes[i];\n      const buffer = attribute.buffer;\n      return buffer.data.length / (attribute.stride / 4 || attribute.size);\n    }\n    return 0;\n  }\n  /**\n   * Adds an attribute to the geometry.\n   * @param name - The name of the attribute to add.\n   * @param attributeOption - The attribute option to add.\n   */\n  addAttribute(name, attributeOption) {\n    const attribute = ensureIsAttribute(attributeOption);\n    const bufferIndex = this.buffers.indexOf(attribute.buffer);\n    if (bufferIndex === -1) {\n      this.buffers.push(attribute.buffer);\n      attribute.buffer.on(\"update\", this.onBufferUpdate, this);\n      attribute.buffer.on(\"change\", this.onBufferUpdate, this);\n    }\n    this.attributes[name] = attribute;\n  }\n  /**\n   * Adds an index buffer to the geometry.\n   * @param indexBuffer - The index buffer to add. Can be a Buffer, TypedArray, or an array of numbers.\n   */\n  addIndex(indexBuffer) {\n    this.indexBuffer = ensureIsBuffer(indexBuffer, true);\n    this.buffers.push(this.indexBuffer);\n  }\n  /** Returns the bounds of the geometry. */\n  get bounds() {\n    if (!this._boundsDirty)\n      return this._bounds;\n    this._boundsDirty = false;\n    return getGeometryBounds(this, \"aPosition\", this._bounds);\n  }\n  /**\n   * destroys the geometry.\n   * @param destroyBuffers - destroy the buffers associated with this geometry\n   */\n  destroy(destroyBuffers = false) {\n    this.emit(\"destroy\", this);\n    this.removeAllListeners();\n    if (destroyBuffers) {\n      this.buffers.forEach((buffer) => buffer.destroy());\n    }\n    this.attributes = null;\n    this.buffers = null;\n    this.indexBuffer = null;\n    this._bounds = null;\n  }\n}\n\nexport { Geometry };\n//# sourceMappingURL=Geometry.mjs.map\n","import { Buffer } from '../../renderers/shared/buffer/Buffer.mjs';\nimport { BufferUsage } from '../../renderers/shared/buffer/const.mjs';\nimport { Geometry } from '../../renderers/shared/geometry/Geometry.mjs';\n\n\"use strict\";\nconst placeHolderBufferData = new Float32Array(1);\nconst placeHolderIndexData = new Uint32Array(1);\nclass BatchGeometry extends Geometry {\n  constructor() {\n    const vertexSize = 6;\n    const attributeBuffer = new Buffer({\n      data: placeHolderBufferData,\n      label: \"attribute-batch-buffer\",\n      usage: BufferUsage.VERTEX | BufferUsage.COPY_DST,\n      shrinkToFit: false\n    });\n    const indexBuffer = new Buffer({\n      data: placeHolderIndexData,\n      label: \"index-batch-buffer\",\n      usage: BufferUsage.INDEX | BufferUsage.COPY_DST,\n      // | BufferUsage.STATIC,\n      shrinkToFit: false\n    });\n    const stride = vertexSize * 4;\n    super({\n      attributes: {\n        aPosition: {\n          buffer: attributeBuffer,\n          format: \"float32x2\",\n          stride,\n          offset: 0\n        },\n        aUV: {\n          buffer: attributeBuffer,\n          format: \"float32x2\",\n          stride,\n          offset: 2 * 4\n        },\n        aColor: {\n          buffer: attributeBuffer,\n          format: \"unorm8x4\",\n          stride,\n          offset: 4 * 4\n        },\n        aTextureIdAndRound: {\n          buffer: attributeBuffer,\n          format: \"uint16x2\",\n          stride,\n          offset: 5 * 4\n        }\n      },\n      indexBuffer\n    });\n  }\n}\n\nexport { BatchGeometry };\n//# sourceMappingURL=BatchGeometry.mjs.map\n","import { warn } from '../../../../utils/logging/warn.mjs';\n\n\"use strict\";\nfunction addBits(srcParts, parts, name) {\n  if (srcParts) {\n    for (const i in srcParts) {\n      const id = i.toLocaleLowerCase();\n      const part = parts[id];\n      if (part) {\n        let sanitisedPart = srcParts[i];\n        if (i === \"header\") {\n          sanitisedPart = sanitisedPart.replace(/@in\\s+[^;]+;\\s*/g, \"\").replace(/@out\\s+[^;]+;\\s*/g, \"\");\n        }\n        if (name) {\n          part.push(`//----${name}----//`);\n        }\n        part.push(sanitisedPart);\n      } else {\n        warn(`${i} placement hook does not exist in shader`);\n      }\n    }\n  }\n}\n\nexport { addBits };\n//# sourceMappingURL=addBits.mjs.map\n","\"use strict\";\nconst findHooksRx = /\\{\\{(.*?)\\}\\}/g;\nfunction compileHooks(programSrc) {\n  const parts = {};\n  const partMatches = programSrc.match(findHooksRx)?.map((hook) => hook.replace(/[{()}]/g, \"\")) ?? [];\n  partMatches.forEach((hook) => {\n    parts[hook] = [];\n  });\n  return parts;\n}\n\nexport { compileHooks, findHooksRx };\n//# sourceMappingURL=compileHooks.mjs.map\n","\"use strict\";\nfunction extractInputs(fragmentSource, out) {\n  let match;\n  const regex = /@in\\s+([^;]+);/g;\n  while ((match = regex.exec(fragmentSource)) !== null) {\n    out.push(match[1]);\n  }\n}\nfunction compileInputs(fragments, template, sort = false) {\n  const results = [];\n  extractInputs(template, results);\n  fragments.forEach((fragment) => {\n    if (fragment.header) {\n      extractInputs(fragment.header, results);\n    }\n  });\n  const mainInput = results;\n  if (sort) {\n    mainInput.sort();\n  }\n  const finalString = mainInput.map((inValue, i) => `       @location(${i}) ${inValue},`).join(\"\\n\");\n  let cleanedString = template.replace(/@in\\s+[^;]+;\\s*/g, \"\");\n  cleanedString = cleanedString.replace(\"{{in}}\", `\n${finalString}\n`);\n  return cleanedString;\n}\n\nexport { compileInputs };\n//# sourceMappingURL=compileInputs.mjs.map\n","\"use strict\";\nfunction extractOutputs(fragmentSource, out) {\n  let match;\n  const regex = /@out\\s+([^;]+);/g;\n  while ((match = regex.exec(fragmentSource)) !== null) {\n    out.push(match[1]);\n  }\n}\nfunction extractVariableName(value) {\n  const regex = /\\b(\\w+)\\s*:/g;\n  const match = regex.exec(value);\n  return match ? match[1] : \"\";\n}\nfunction stripVariable(value) {\n  const regex = /@.*?\\s+/g;\n  return value.replace(regex, \"\");\n}\nfunction compileOutputs(fragments, template) {\n  const results = [];\n  extractOutputs(template, results);\n  fragments.forEach((fragment) => {\n    if (fragment.header) {\n      extractOutputs(fragment.header, results);\n    }\n  });\n  let index = 0;\n  const mainStruct = results.sort().map((inValue) => {\n    if (inValue.indexOf(\"builtin\") > -1) {\n      return inValue;\n    }\n    return `@location(${index++}) ${inValue}`;\n  }).join(\",\\n\");\n  const mainStart = results.sort().map((inValue) => `       var ${stripVariable(inValue)};`).join(\"\\n\");\n  const mainEnd = `return VSOutput(\n            ${results.sort().map((inValue) => ` ${extractVariableName(inValue)}`).join(\",\\n\")});`;\n  let compiledCode = template.replace(/@out\\s+[^;]+;\\s*/g, \"\");\n  compiledCode = compiledCode.replace(\"{{struct}}\", `\n${mainStruct}\n`);\n  compiledCode = compiledCode.replace(\"{{start}}\", `\n${mainStart}\n`);\n  compiledCode = compiledCode.replace(\"{{return}}\", `\n${mainEnd}\n`);\n  return compiledCode;\n}\n\nexport { compileOutputs };\n//# sourceMappingURL=compileOutputs.mjs.map\n","\"use strict\";\nfunction injectBits(templateSrc, fragmentParts) {\n  let out = templateSrc;\n  for (const i in fragmentParts) {\n    const parts = fragmentParts[i];\n    const toInject = parts.join(\"\\n\");\n    if (toInject.length) {\n      out = out.replace(`{{${i}}}`, `//-----${i} START-----//\n${parts.join(\"\\n\")}\n//----${i} FINISH----//`);\n    } else {\n      out = out.replace(`{{${i}}}`, \"\");\n    }\n  }\n  return out;\n}\n\nexport { injectBits };\n//# sourceMappingURL=injectBits.mjs.map\n","import { addBits } from './utils/addBits.mjs';\nimport { compileHooks } from './utils/compileHooks.mjs';\nimport { compileInputs } from './utils/compileInputs.mjs';\nimport { compileOutputs } from './utils/compileOutputs.mjs';\nimport { injectBits } from './utils/injectBits.mjs';\n\n\"use strict\";\nconst cacheMap = /* @__PURE__ */ Object.create(null);\nconst bitCacheMap = /* @__PURE__ */ new Map();\nlet CACHE_UID = 0;\nfunction compileHighShader({\n  template,\n  bits\n}) {\n  const cacheId = generateCacheId(template, bits);\n  if (cacheMap[cacheId])\n    return cacheMap[cacheId];\n  const { vertex, fragment } = compileInputsAndOutputs(template, bits);\n  cacheMap[cacheId] = compileBits(vertex, fragment, bits);\n  return cacheMap[cacheId];\n}\nfunction compileHighShaderGl({\n  template,\n  bits\n}) {\n  const cacheId = generateCacheId(template, bits);\n  if (cacheMap[cacheId])\n    return cacheMap[cacheId];\n  cacheMap[cacheId] = compileBits(template.vertex, template.fragment, bits);\n  return cacheMap[cacheId];\n}\nfunction compileInputsAndOutputs(template, bits) {\n  const vertexFragments = bits.map((shaderBit) => shaderBit.vertex).filter((v) => !!v);\n  const fragmentFragments = bits.map((shaderBit) => shaderBit.fragment).filter((v) => !!v);\n  let compiledVertex = compileInputs(vertexFragments, template.vertex, true);\n  compiledVertex = compileOutputs(vertexFragments, compiledVertex);\n  const compiledFragment = compileInputs(fragmentFragments, template.fragment, true);\n  return {\n    vertex: compiledVertex,\n    fragment: compiledFragment\n  };\n}\nfunction generateCacheId(template, bits) {\n  return bits.map((highFragment) => {\n    if (!bitCacheMap.has(highFragment)) {\n      bitCacheMap.set(highFragment, CACHE_UID++);\n    }\n    return bitCacheMap.get(highFragment);\n  }).sort((a, b) => a - b).join(\"-\") + template.vertex + template.fragment;\n}\nfunction compileBits(vertex, fragment, bits) {\n  const vertexParts = compileHooks(vertex);\n  const fragmentParts = compileHooks(fragment);\n  bits.forEach((shaderBit) => {\n    addBits(shaderBit.vertex, vertexParts, shaderBit.name);\n    addBits(shaderBit.fragment, fragmentParts, shaderBit.name);\n  });\n  return {\n    vertex: injectBits(vertex, vertexParts),\n    fragment: injectBits(fragment, fragmentParts)\n  };\n}\n\nexport { compileHighShader, compileHighShaderGl };\n//# sourceMappingURL=compileHighShader.mjs.map\n","\"use strict\";\nconst vertexGPUTemplate = (\n  /* wgsl */\n  `\n    @in aPosition: vec2<f32>;\n    @in aUV: vec2<f32>;\n\n    @out @builtin(position) vPosition: vec4<f32>;\n    @out vUV : vec2<f32>;\n    @out vColor : vec4<f32>;\n\n    {{header}}\n\n    struct VSOutput {\n        {{struct}}\n    };\n\n    @vertex\n    fn main( {{in}} ) -> VSOutput {\n\n        var worldTransformMatrix = globalUniforms.uWorldTransformMatrix;\n        var modelMatrix = mat3x3<f32>(\n            1.0, 0.0, 0.0,\n            0.0, 1.0, 0.0,\n            0.0, 0.0, 1.0\n          );\n        var position = aPosition;\n        var uv = aUV;\n\n        {{start}}\n        \n        vColor = vec4<f32>(1., 1., 1., 1.);\n\n        {{main}}\n\n        vUV = uv;\n\n        var modelViewProjectionMatrix = globalUniforms.uProjectionMatrix * worldTransformMatrix * modelMatrix;\n\n        vPosition =  vec4<f32>((modelViewProjectionMatrix *  vec3<f32>(position, 1.0)).xy, 0.0, 1.0);\n       \n        vColor *= globalUniforms.uWorldColorAlpha;\n\n        {{end}}\n\n        {{return}}\n    };\n`\n);\nconst fragmentGPUTemplate = (\n  /* wgsl */\n  `\n    @in vUV : vec2<f32>;\n    @in vColor : vec4<f32>;\n   \n    {{header}}\n\n    @fragment\n    fn main(\n        {{in}}\n      ) -> @location(0) vec4<f32> {\n        \n        {{start}}\n\n        var outColor:vec4<f32>;\n      \n        {{main}}\n        \n        var finalColor:vec4<f32> = outColor * vColor;\n\n        {{end}}\n\n        return finalColor;\n      };\n`\n);\nconst vertexGlTemplate = (\n  /* glsl */\n  `\n    in vec2 aPosition;\n    in vec2 aUV;\n\n    out vec4 vColor;\n    out vec2 vUV;\n\n    {{header}}\n\n    void main(void){\n\n        mat3 worldTransformMatrix = uWorldTransformMatrix;\n        mat3 modelMatrix = mat3(\n            1.0, 0.0, 0.0,\n            0.0, 1.0, 0.0,\n            0.0, 0.0, 1.0\n          );\n        vec2 position = aPosition;\n        vec2 uv = aUV;\n        \n        {{start}}\n        \n        vColor = vec4(1.);\n        \n        {{main}}\n        \n        vUV = uv;\n        \n        mat3 modelViewProjectionMatrix = uProjectionMatrix * worldTransformMatrix * modelMatrix;\n\n        gl_Position = vec4((modelViewProjectionMatrix * vec3(position, 1.0)).xy, 0.0, 1.0);\n\n        vColor *= uWorldColorAlpha;\n\n        {{end}}\n    }\n`\n);\nconst fragmentGlTemplate = (\n  /* glsl */\n  `\n   \n    in vec4 vColor;\n    in vec2 vUV;\n\n    out vec4 finalColor;\n\n    {{header}}\n\n    void main(void) {\n        \n        {{start}}\n\n        vec4 outColor;\n      \n        {{main}}\n        \n        finalColor = outColor * vColor;\n        \n        {{end}}\n    }\n`\n);\n\nexport { fragmentGPUTemplate, fragmentGlTemplate, vertexGPUTemplate, vertexGlTemplate };\n//# sourceMappingURL=defaultProgramTemplate.mjs.map\n","\"use strict\";\nconst globalUniformsBit = {\n  name: \"global-uniforms-bit\",\n  vertex: {\n    header: (\n      /* wgsl */\n      `\n        struct GlobalUniforms {\n            uProjectionMatrix:mat3x3<f32>,\n            uWorldTransformMatrix:mat3x3<f32>,\n            uWorldColorAlpha: vec4<f32>,\n            uResolution: vec2<f32>,\n        }\n\n        @group(0) @binding(0) var<uniform> globalUniforms : GlobalUniforms;\n        `\n    )\n  }\n};\nconst globalUniformsUBOBitGl = {\n  name: \"global-uniforms-ubo-bit\",\n  vertex: {\n    header: (\n      /* glsl */\n      `\n          uniform globalUniforms {\n            mat3 uProjectionMatrix;\n            mat3 uWorldTransformMatrix;\n            vec4 uWorldColorAlpha;\n            vec2 uResolution;\n          };\n        `\n    )\n  }\n};\nconst globalUniformsBitGl = {\n  name: \"global-uniforms-bit\",\n  vertex: {\n    header: (\n      /* glsl */\n      `\n          uniform mat3 uProjectionMatrix;\n          uniform mat3 uWorldTransformMatrix;\n          uniform vec4 uWorldColorAlpha;\n          uniform vec2 uResolution;\n        `\n    )\n  }\n};\n\nexport { globalUniformsBit, globalUniformsBitGl, globalUniformsUBOBitGl };\n//# sourceMappingURL=globalUniformsBit.mjs.map\n","import { GlProgram } from '../renderers/gl/shader/GlProgram.mjs';\nimport { GpuProgram } from '../renderers/gpu/shader/GpuProgram.mjs';\nimport { compileHighShader, compileHighShaderGl } from './compiler/compileHighShader.mjs';\nimport { fragmentGPUTemplate, vertexGPUTemplate, vertexGlTemplate, fragmentGlTemplate } from './defaultProgramTemplate.mjs';\nimport { globalUniformsBit, globalUniformsBitGl } from './shader-bits/globalUniformsBit.mjs';\n\n\"use strict\";\nfunction compileHighShaderGpuProgram({ bits, name }) {\n  const source = compileHighShader({\n    template: {\n      fragment: fragmentGPUTemplate,\n      vertex: vertexGPUTemplate\n    },\n    bits: [\n      globalUniformsBit,\n      ...bits\n    ]\n  });\n  return GpuProgram.from({\n    name,\n    vertex: {\n      source: source.vertex,\n      entryPoint: \"main\"\n    },\n    fragment: {\n      source: source.fragment,\n      entryPoint: \"main\"\n    }\n  });\n}\nfunction compileHighShaderGlProgram({ bits, name }) {\n  return new GlProgram({\n    name,\n    ...compileHighShaderGl({\n      template: {\n        vertex: vertexGlTemplate,\n        fragment: fragmentGlTemplate\n      },\n      bits: [\n        globalUniformsBitGl,\n        ...bits\n      ]\n    })\n  });\n}\n\nexport { compileHighShaderGlProgram, compileHighShaderGpuProgram };\n//# sourceMappingURL=compileHighShaderToProgram.mjs.map\n","\"use strict\";\nconst colorBit = {\n  name: \"color-bit\",\n  vertex: {\n    header: (\n      /* wgsl */\n      `\n            @in aColor: vec4<f32>;\n        `\n    ),\n    main: (\n      /* wgsl */\n      `\n            vColor *= vec4<f32>(aColor.rgb * aColor.a, aColor.a);\n        `\n    )\n  }\n};\nconst colorBitGl = {\n  name: \"color-bit\",\n  vertex: {\n    header: (\n      /* glsl */\n      `\n            in vec4 aColor;\n        `\n    ),\n    main: (\n      /* glsl */\n      `\n            vColor *= vec4(aColor.rgb * aColor.a, aColor.a);\n        `\n    )\n  }\n};\n\nexport { colorBit, colorBitGl };\n//# sourceMappingURL=colorBit.mjs.map\n","\"use strict\";\nconst textureBatchBitGpuCache = {};\nfunction generateBindingSrc(maxTextures) {\n  const src = [];\n  if (maxTextures === 1) {\n    src.push(\"@group(1) @binding(0) var textureSource1: texture_2d<f32>;\");\n    src.push(\"@group(1) @binding(1) var textureSampler1: sampler;\");\n  } else {\n    let bindingIndex = 0;\n    for (let i = 0; i < maxTextures; i++) {\n      src.push(`@group(1) @binding(${bindingIndex++}) var textureSource${i + 1}: texture_2d<f32>;`);\n      src.push(`@group(1) @binding(${bindingIndex++}) var textureSampler${i + 1}: sampler;`);\n    }\n  }\n  return src.join(\"\\n\");\n}\nfunction generateSampleSrc(maxTextures) {\n  const src = [];\n  if (maxTextures === 1) {\n    src.push(\"outColor = textureSampleGrad(textureSource1, textureSampler1, vUV, uvDx, uvDy);\");\n  } else {\n    src.push(\"switch vTextureId {\");\n    for (let i = 0; i < maxTextures; i++) {\n      if (i === maxTextures - 1) {\n        src.push(`  default:{`);\n      } else {\n        src.push(`  case ${i}:{`);\n      }\n      src.push(`      outColor = textureSampleGrad(textureSource${i + 1}, textureSampler${i + 1}, vUV, uvDx, uvDy);`);\n      src.push(`      break;}`);\n    }\n    src.push(`}`);\n  }\n  return src.join(\"\\n\");\n}\nfunction generateTextureBatchBit(maxTextures) {\n  if (!textureBatchBitGpuCache[maxTextures]) {\n    textureBatchBitGpuCache[maxTextures] = {\n      name: \"texture-batch-bit\",\n      vertex: {\n        header: `\n                @in aTextureIdAndRound: vec2<u32>;\n                @out @interpolate(flat) vTextureId : u32;\n            `,\n        main: `\n                vTextureId = aTextureIdAndRound.y;\n            `,\n        end: `\n                if(aTextureIdAndRound.x == 1)\n                {\n                    vPosition = vec4<f32>(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);\n                }\n            `\n      },\n      fragment: {\n        header: `\n                @in @interpolate(flat) vTextureId: u32;\n\n                ${generateBindingSrc(maxTextures)}\n            `,\n        main: `\n                var uvDx = dpdx(vUV);\n                var uvDy = dpdy(vUV);\n\n                ${generateSampleSrc(maxTextures)}\n            `\n      }\n    };\n  }\n  return textureBatchBitGpuCache[maxTextures];\n}\nconst textureBatchBitGlCache = {};\nfunction generateSampleGlSrc(maxTextures) {\n  const src = [];\n  for (let i = 0; i < maxTextures; i++) {\n    if (i > 0) {\n      src.push(\"else\");\n    }\n    if (i < maxTextures - 1) {\n      src.push(`if(vTextureId < ${i}.5)`);\n    }\n    src.push(\"{\");\n    src.push(`\toutColor = texture(uTextures[${i}], vUV);`);\n    src.push(\"}\");\n  }\n  return src.join(\"\\n\");\n}\nfunction generateTextureBatchBitGl(maxTextures) {\n  if (!textureBatchBitGlCache[maxTextures]) {\n    textureBatchBitGlCache[maxTextures] = {\n      name: \"texture-batch-bit\",\n      vertex: {\n        header: `\n                in vec2 aTextureIdAndRound;\n                out float vTextureId;\n\n            `,\n        main: `\n                vTextureId = aTextureIdAndRound.y;\n            `,\n        end: `\n                if(aTextureIdAndRound.x == 1.)\n                {\n                    gl_Position.xy = roundPixels(gl_Position.xy, uResolution);\n                }\n            `\n      },\n      fragment: {\n        header: `\n                in float vTextureId;\n\n                uniform sampler2D uTextures[${maxTextures}];\n\n            `,\n        main: `\n\n                ${generateSampleGlSrc(maxTextures)}\n            `\n      }\n    };\n  }\n  return textureBatchBitGlCache[maxTextures];\n}\n\nexport { generateTextureBatchBit, generateTextureBatchBitGl };\n//# sourceMappingURL=generateTextureBatchBit.mjs.map\n","\"use strict\";\nconst roundPixelsBit = {\n  name: \"round-pixels-bit\",\n  vertex: {\n    header: (\n      /* wgsl */\n      `\n            fn roundPixels(position: vec2<f32>, targetSize: vec2<f32>) -> vec2<f32> \n            {\n                return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;\n            }\n        `\n    )\n  }\n};\nconst roundPixelsBitGl = {\n  name: \"round-pixels-bit\",\n  vertex: {\n    header: (\n      /* glsl */\n      `   \n            vec2 roundPixels(vec2 position, vec2 targetSize)\n            {       \n                return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;\n            }\n        `\n    )\n  }\n};\n\nexport { roundPixelsBit, roundPixelsBitGl };\n//# sourceMappingURL=roundPixelsBit.mjs.map\n","import { UniformGroup } from '../../shared/shader/UniformGroup.mjs';\n\n\"use strict\";\nconst batchSamplersUniformGroupHash = {};\nfunction getBatchSamplersUniformGroup(maxTextures) {\n  let batchSamplersUniformGroup = batchSamplersUniformGroupHash[maxTextures];\n  if (batchSamplersUniformGroup)\n    return batchSamplersUniformGroup;\n  const sampleValues = new Int32Array(maxTextures);\n  for (let i = 0; i < maxTextures; i++) {\n    sampleValues[i] = i;\n  }\n  batchSamplersUniformGroup = batchSamplersUniformGroupHash[maxTextures] = new UniformGroup({\n    uTextures: { value: sampleValues, type: `i32`, size: maxTextures }\n  }, { isStatic: true });\n  return batchSamplersUniformGroup;\n}\n\nexport { getBatchSamplersUniformGroup };\n//# sourceMappingURL=getBatchSamplersUniformGroup.mjs.map\n","import { compileHighShaderGlProgram, compileHighShaderGpuProgram } from '../../high-shader/compileHighShaderToProgram.mjs';\nimport { colorBitGl, colorBit } from '../../high-shader/shader-bits/colorBit.mjs';\nimport { generateTextureBatchBitGl, generateTextureBatchBit } from '../../high-shader/shader-bits/generateTextureBatchBit.mjs';\nimport { roundPixelsBitGl, roundPixelsBit } from '../../high-shader/shader-bits/roundPixelsBit.mjs';\nimport { getBatchSamplersUniformGroup } from '../../renderers/gl/shader/getBatchSamplersUniformGroup.mjs';\nimport { Shader } from '../../renderers/shared/shader/Shader.mjs';\n\n\"use strict\";\nclass DefaultShader extends Shader {\n  constructor(maxTextures) {\n    const glProgram = compileHighShaderGlProgram({\n      name: \"batch\",\n      bits: [\n        colorBitGl,\n        generateTextureBatchBitGl(maxTextures),\n        roundPixelsBitGl\n      ]\n    });\n    const gpuProgram = compileHighShaderGpuProgram({\n      name: \"batch\",\n      bits: [\n        colorBit,\n        generateTextureBatchBit(maxTextures),\n        roundPixelsBit\n      ]\n    });\n    super({\n      glProgram,\n      gpuProgram,\n      resources: {\n        batchSamplers: getBatchSamplersUniformGroup(maxTextures)\n      }\n    });\n  }\n}\n\nexport { DefaultShader };\n//# sourceMappingURL=DefaultShader.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { Batcher } from './Batcher.mjs';\nimport { BatchGeometry } from './BatchGeometry.mjs';\nimport { DefaultShader } from './DefaultShader.mjs';\n\n\"use strict\";\nlet defaultShader = null;\nconst _DefaultBatcher = class _DefaultBatcher extends Batcher {\n  constructor() {\n    super(...arguments);\n    this.geometry = new BatchGeometry();\n    this.shader = defaultShader || (defaultShader = new DefaultShader(this.maxTextures));\n    this.name = _DefaultBatcher.extension.name;\n    /** The size of one attribute. 1 = 32 bit. x, y, u, v, color, textureIdAndRound -> total = 6 */\n    this.vertexSize = 6;\n  }\n  /**\n   * Packs the attributes of a DefaultBatchableMeshElement into the provided views.\n   * @param element - The DefaultBatchableMeshElement to pack.\n   * @param float32View - The Float32Array view to pack into.\n   * @param uint32View - The Uint32Array view to pack into.\n   * @param index - The starting index in the views.\n   * @param textureId - The texture ID to use.\n   */\n  packAttributes(element, float32View, uint32View, index, textureId) {\n    const textureIdAndRound = textureId << 16 | element.roundPixels & 65535;\n    const wt = element.transform;\n    const a = wt.a;\n    const b = wt.b;\n    const c = wt.c;\n    const d = wt.d;\n    const tx = wt.tx;\n    const ty = wt.ty;\n    const { positions, uvs } = element;\n    const argb = element.color;\n    const offset = element.attributeOffset;\n    const end = offset + element.attributeSize;\n    for (let i = offset; i < end; i++) {\n      const i2 = i * 2;\n      const x = positions[i2];\n      const y = positions[i2 + 1];\n      float32View[index++] = a * x + c * y + tx;\n      float32View[index++] = d * y + b * x + ty;\n      float32View[index++] = uvs[i2];\n      float32View[index++] = uvs[i2 + 1];\n      uint32View[index++] = argb;\n      uint32View[index++] = textureIdAndRound;\n    }\n  }\n  /**\n   * Packs the attributes of a DefaultBatchableQuadElement into the provided views.\n   * @param element - The DefaultBatchableQuadElement to pack.\n   * @param float32View - The Float32Array view to pack into.\n   * @param uint32View - The Uint32Array view to pack into.\n   * @param index - The starting index in the views.\n   * @param textureId - The texture ID to use.\n   */\n  packQuadAttributes(element, float32View, uint32View, index, textureId) {\n    const texture = element.texture;\n    const wt = element.transform;\n    const a = wt.a;\n    const b = wt.b;\n    const c = wt.c;\n    const d = wt.d;\n    const tx = wt.tx;\n    const ty = wt.ty;\n    const bounds = element.bounds;\n    const w0 = bounds.maxX;\n    const w1 = bounds.minX;\n    const h0 = bounds.maxY;\n    const h1 = bounds.minY;\n    const uvs = texture.uvs;\n    const argb = element.color;\n    const textureIdAndRound = textureId << 16 | element.roundPixels & 65535;\n    float32View[index + 0] = a * w1 + c * h1 + tx;\n    float32View[index + 1] = d * h1 + b * w1 + ty;\n    float32View[index + 2] = uvs.x0;\n    float32View[index + 3] = uvs.y0;\n    uint32View[index + 4] = argb;\n    uint32View[index + 5] = textureIdAndRound;\n    float32View[index + 6] = a * w0 + c * h1 + tx;\n    float32View[index + 7] = d * h1 + b * w0 + ty;\n    float32View[index + 8] = uvs.x1;\n    float32View[index + 9] = uvs.y1;\n    uint32View[index + 10] = argb;\n    uint32View[index + 11] = textureIdAndRound;\n    float32View[index + 12] = a * w0 + c * h0 + tx;\n    float32View[index + 13] = d * h0 + b * w0 + ty;\n    float32View[index + 14] = uvs.x2;\n    float32View[index + 15] = uvs.y2;\n    uint32View[index + 16] = argb;\n    uint32View[index + 17] = textureIdAndRound;\n    float32View[index + 18] = a * w1 + c * h0 + tx;\n    float32View[index + 19] = d * h0 + b * w1 + ty;\n    float32View[index + 20] = uvs.x3;\n    float32View[index + 21] = uvs.y3;\n    uint32View[index + 22] = argb;\n    uint32View[index + 23] = textureIdAndRound;\n  }\n};\n/** @ignore */\n_DefaultBatcher.extension = {\n  type: [\n    ExtensionType.Batcher\n  ],\n  name: \"default\"\n};\nlet DefaultBatcher = _DefaultBatcher;\n\nexport { DefaultBatcher };\n//# sourceMappingURL=DefaultBatcher.mjs.map\n","\"use strict\";\nfunction buildUvs(vertices, verticesStride, verticesOffset, uvs, uvsOffset, uvsStride, size, matrix = null) {\n  let index = 0;\n  verticesOffset *= verticesStride;\n  uvsOffset *= uvsStride;\n  const a = matrix.a;\n  const b = matrix.b;\n  const c = matrix.c;\n  const d = matrix.d;\n  const tx = matrix.tx;\n  const ty = matrix.ty;\n  while (index < size) {\n    const x = vertices[verticesOffset];\n    const y = vertices[verticesOffset + 1];\n    uvs[uvsOffset] = a * x + c * y + tx;\n    uvs[uvsOffset + 1] = b * x + d * y + ty;\n    uvsOffset += uvsStride;\n    verticesOffset += verticesStride;\n    index++;\n  }\n}\nfunction buildSimpleUvs(uvs, uvsOffset, uvsStride, size) {\n  let index = 0;\n  uvsOffset *= uvsStride;\n  while (index < size) {\n    uvs[uvsOffset] = 0;\n    uvs[uvsOffset + 1] = 0;\n    uvsOffset += uvsStride;\n    index++;\n  }\n}\n\nexport { buildSimpleUvs, buildUvs };\n//# sourceMappingURL=buildUvs.mjs.map\n","\"use strict\";\nfunction transformVertices(vertices, m, offset, stride, size) {\n  const a = m.a;\n  const b = m.b;\n  const c = m.c;\n  const d = m.d;\n  const tx = m.tx;\n  const ty = m.ty;\n  offset || (offset = 0);\n  stride || (stride = 2);\n  size || (size = vertices.length / stride - offset);\n  let index = offset * stride;\n  for (let i = 0; i < size; i++) {\n    const x = vertices[index];\n    const y = vertices[index + 1];\n    vertices[index] = a * x + c * y + tx;\n    vertices[index + 1] = b * x + d * y + ty;\n    index += stride;\n  }\n}\n\nexport { transformVertices };\n//# sourceMappingURL=transformVertices.mjs.map\n","import { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { multiplyHexColors } from '../../container/utils/multiplyHexColors.mjs';\n\n\"use strict\";\nconst identityMatrix = new Matrix();\nclass BatchableGraphics {\n  constructor() {\n    this.packAsQuad = false;\n    this.batcherName = \"default\";\n    this.topology = \"triangle-list\";\n    this.applyTransform = true;\n    this.roundPixels = 0;\n    this._batcher = null;\n    this._batch = null;\n  }\n  get uvs() {\n    return this.geometryData.uvs;\n  }\n  get positions() {\n    return this.geometryData.vertices;\n  }\n  get indices() {\n    return this.geometryData.indices;\n  }\n  get blendMode() {\n    if (this.applyTransform) {\n      return this.renderable.groupBlendMode;\n    }\n    return \"normal\";\n  }\n  get color() {\n    const rgb = this.baseColor;\n    const bgr = rgb >> 16 | rgb & 65280 | (rgb & 255) << 16;\n    const renderable = this.renderable;\n    if (renderable) {\n      return multiplyHexColors(bgr, renderable.groupColor) + (this.alpha * renderable.groupAlpha * 255 << 24);\n    }\n    return bgr + (this.alpha * 255 << 24);\n  }\n  get transform() {\n    return this.renderable?.groupTransform || identityMatrix;\n  }\n  copyTo(gpuBuffer) {\n    gpuBuffer.indexOffset = this.indexOffset;\n    gpuBuffer.indexSize = this.indexSize;\n    gpuBuffer.attributeOffset = this.attributeOffset;\n    gpuBuffer.attributeSize = this.attributeSize;\n    gpuBuffer.baseColor = this.baseColor;\n    gpuBuffer.alpha = this.alpha;\n    gpuBuffer.texture = this.texture;\n    gpuBuffer.geometryData = this.geometryData;\n    gpuBuffer.topology = this.topology;\n  }\n  reset() {\n    this.applyTransform = true;\n    this.renderable = null;\n    this.topology = \"triangle-list\";\n  }\n}\n\nexport { BatchableGraphics };\n//# sourceMappingURL=BatchableGraphics.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\n\n\"use strict\";\nconst buildCircle = {\n  extension: {\n    type: ExtensionType.ShapeBuilder,\n    name: \"circle\"\n  },\n  build(shape, points) {\n    let x;\n    let y;\n    let dx;\n    let dy;\n    let rx;\n    let ry;\n    if (shape.type === \"circle\") {\n      const circle = shape;\n      x = circle.x;\n      y = circle.y;\n      rx = ry = circle.radius;\n      dx = dy = 0;\n    } else if (shape.type === \"ellipse\") {\n      const ellipse = shape;\n      x = ellipse.x;\n      y = ellipse.y;\n      rx = ellipse.halfWidth;\n      ry = ellipse.halfHeight;\n      dx = dy = 0;\n    } else {\n      const roundedRect = shape;\n      const halfWidth = roundedRect.width / 2;\n      const halfHeight = roundedRect.height / 2;\n      x = roundedRect.x + halfWidth;\n      y = roundedRect.y + halfHeight;\n      rx = ry = Math.max(0, Math.min(roundedRect.radius, Math.min(halfWidth, halfHeight)));\n      dx = halfWidth - rx;\n      dy = halfHeight - ry;\n    }\n    if (!(rx >= 0 && ry >= 0 && dx >= 0 && dy >= 0)) {\n      return points;\n    }\n    const n = Math.ceil(2.3 * Math.sqrt(rx + ry));\n    const m = n * 8 + (dx ? 4 : 0) + (dy ? 4 : 0);\n    if (m === 0) {\n      return points;\n    }\n    if (n === 0) {\n      points[0] = points[6] = x + dx;\n      points[1] = points[3] = y + dy;\n      points[2] = points[4] = x - dx;\n      points[5] = points[7] = y - dy;\n      return points;\n    }\n    let j1 = 0;\n    let j2 = n * 4 + (dx ? 2 : 0) + 2;\n    let j3 = j2;\n    let j4 = m;\n    let x0 = dx + rx;\n    let y0 = dy;\n    let x1 = x + x0;\n    let x2 = x - x0;\n    let y1 = y + y0;\n    points[j1++] = x1;\n    points[j1++] = y1;\n    points[--j2] = y1;\n    points[--j2] = x2;\n    if (dy) {\n      const y22 = y - y0;\n      points[j3++] = x2;\n      points[j3++] = y22;\n      points[--j4] = y22;\n      points[--j4] = x1;\n    }\n    for (let i = 1; i < n; i++) {\n      const a = Math.PI / 2 * (i / n);\n      const x02 = dx + Math.cos(a) * rx;\n      const y02 = dy + Math.sin(a) * ry;\n      const x12 = x + x02;\n      const x22 = x - x02;\n      const y12 = y + y02;\n      const y22 = y - y02;\n      points[j1++] = x12;\n      points[j1++] = y12;\n      points[--j2] = y12;\n      points[--j2] = x22;\n      points[j3++] = x22;\n      points[j3++] = y22;\n      points[--j4] = y22;\n      points[--j4] = x12;\n    }\n    x0 = dx;\n    y0 = dy + ry;\n    x1 = x + x0;\n    x2 = x - x0;\n    y1 = y + y0;\n    const y2 = y - y0;\n    points[j1++] = x1;\n    points[j1++] = y1;\n    points[--j4] = y2;\n    points[--j4] = x1;\n    if (dx) {\n      points[j1++] = x2;\n      points[j1++] = y1;\n      points[--j4] = y2;\n      points[--j4] = x2;\n    }\n    return points;\n  },\n  triangulate(points, vertices, verticesStride, verticesOffset, indices, indicesOffset) {\n    if (points.length === 0) {\n      return;\n    }\n    let centerX = 0;\n    let centerY = 0;\n    for (let i = 0; i < points.length; i += 2) {\n      centerX += points[i];\n      centerY += points[i + 1];\n    }\n    centerX /= points.length / 2;\n    centerY /= points.length / 2;\n    let count = verticesOffset;\n    vertices[count * verticesStride] = centerX;\n    vertices[count * verticesStride + 1] = centerY;\n    const centerIndex = count++;\n    for (let i = 0; i < points.length; i += 2) {\n      vertices[count * verticesStride] = points[i];\n      vertices[count * verticesStride + 1] = points[i + 1];\n      if (i > 0) {\n        indices[indicesOffset++] = count;\n        indices[indicesOffset++] = centerIndex;\n        indices[indicesOffset++] = count - 1;\n      }\n      count++;\n    }\n    indices[indicesOffset++] = centerIndex + 1;\n    indices[indicesOffset++] = centerIndex;\n    indices[indicesOffset++] = count - 1;\n  }\n};\nconst buildEllipse = { ...buildCircle, extension: { ...buildCircle.extension, name: \"ellipse\" } };\nconst buildRoundedRectangle = { ...buildCircle, extension: { ...buildCircle.extension, name: \"roundedRectangle\" } };\n\nexport { buildCircle, buildEllipse, buildRoundedRectangle };\n//# sourceMappingURL=buildCircle.mjs.map\n","\"use strict\";\nconst closePointEps = 1e-4;\nconst curveEps = 1e-4;\n\nexport { closePointEps, curveEps };\n//# sourceMappingURL=const.mjs.map\n","\"use strict\";\nfunction getOrientationOfPoints(points) {\n  const m = points.length;\n  if (m < 6) {\n    return 1;\n  }\n  let area = 0;\n  for (let i = 0, x1 = points[m - 2], y1 = points[m - 1]; i < m; i += 2) {\n    const x2 = points[i];\n    const y2 = points[i + 1];\n    area += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  if (area < 0) {\n    return -1;\n  }\n  return 1;\n}\n\nexport { getOrientationOfPoints };\n//# sourceMappingURL=getOrientationOfPoints.mjs.map\n","import { Point } from '../../../../maths/point/Point.mjs';\nimport { closePointEps, curveEps } from '../const.mjs';\nimport { getOrientationOfPoints } from '../utils/getOrientationOfPoints.mjs';\n\n\"use strict\";\nfunction square(x, y, nx, ny, innerWeight, outerWeight, clockwise, verts) {\n  const ix = x - nx * innerWeight;\n  const iy = y - ny * innerWeight;\n  const ox = x + nx * outerWeight;\n  const oy = y + ny * outerWeight;\n  let exx;\n  let eyy;\n  if (clockwise) {\n    exx = ny;\n    eyy = -nx;\n  } else {\n    exx = -ny;\n    eyy = nx;\n  }\n  const eix = ix + exx;\n  const eiy = iy + eyy;\n  const eox = ox + exx;\n  const eoy = oy + eyy;\n  verts.push(eix, eiy);\n  verts.push(eox, eoy);\n  return 2;\n}\nfunction round(cx, cy, sx, sy, ex, ey, verts, clockwise) {\n  const cx2p0x = sx - cx;\n  const cy2p0y = sy - cy;\n  let angle0 = Math.atan2(cx2p0x, cy2p0y);\n  let angle1 = Math.atan2(ex - cx, ey - cy);\n  if (clockwise && angle0 < angle1) {\n    angle0 += Math.PI * 2;\n  } else if (!clockwise && angle0 > angle1) {\n    angle1 += Math.PI * 2;\n  }\n  let startAngle = angle0;\n  const angleDiff = angle1 - angle0;\n  const absAngleDiff = Math.abs(angleDiff);\n  const radius = Math.sqrt(cx2p0x * cx2p0x + cy2p0y * cy2p0y);\n  const segCount = (15 * absAngleDiff * Math.sqrt(radius) / Math.PI >> 0) + 1;\n  const angleInc = angleDiff / segCount;\n  startAngle += angleInc;\n  if (clockwise) {\n    verts.push(cx, cy);\n    verts.push(sx, sy);\n    for (let i = 1, angle = startAngle; i < segCount; i++, angle += angleInc) {\n      verts.push(cx, cy);\n      verts.push(\n        cx + Math.sin(angle) * radius,\n        cy + Math.cos(angle) * radius\n      );\n    }\n    verts.push(cx, cy);\n    verts.push(ex, ey);\n  } else {\n    verts.push(sx, sy);\n    verts.push(cx, cy);\n    for (let i = 1, angle = startAngle; i < segCount; i++, angle += angleInc) {\n      verts.push(\n        cx + Math.sin(angle) * radius,\n        cy + Math.cos(angle) * radius\n      );\n      verts.push(cx, cy);\n    }\n    verts.push(ex, ey);\n    verts.push(cx, cy);\n  }\n  return segCount * 2;\n}\nfunction buildLine(points, lineStyle, flipAlignment, closed, vertices, indices) {\n  const eps = closePointEps;\n  if (points.length === 0) {\n    return;\n  }\n  const style = lineStyle;\n  let alignment = style.alignment;\n  if (lineStyle.alignment !== 0.5) {\n    let orientation = getOrientationOfPoints(points);\n    if (flipAlignment)\n      orientation *= -1;\n    alignment = (alignment - 0.5) * orientation + 0.5;\n  }\n  const firstPoint = new Point(points[0], points[1]);\n  const lastPoint = new Point(points[points.length - 2], points[points.length - 1]);\n  const closedShape = closed;\n  const closedPath = Math.abs(firstPoint.x - lastPoint.x) < eps && Math.abs(firstPoint.y - lastPoint.y) < eps;\n  if (closedShape) {\n    points = points.slice();\n    if (closedPath) {\n      points.pop();\n      points.pop();\n      lastPoint.set(points[points.length - 2], points[points.length - 1]);\n    }\n    const midPointX = (firstPoint.x + lastPoint.x) * 0.5;\n    const midPointY = (lastPoint.y + firstPoint.y) * 0.5;\n    points.unshift(midPointX, midPointY);\n    points.push(midPointX, midPointY);\n  }\n  const verts = vertices;\n  const length = points.length / 2;\n  let indexCount = points.length;\n  const indexStart = verts.length / 2;\n  const width = style.width / 2;\n  const widthSquared = width * width;\n  const miterLimitSquared = style.miterLimit * style.miterLimit;\n  let x0 = points[0];\n  let y0 = points[1];\n  let x1 = points[2];\n  let y1 = points[3];\n  let x2 = 0;\n  let y2 = 0;\n  let perpX = -(y0 - y1);\n  let perpY = x0 - x1;\n  let perp1x = 0;\n  let perp1y = 0;\n  let dist = Math.sqrt(perpX * perpX + perpY * perpY);\n  perpX /= dist;\n  perpY /= dist;\n  perpX *= width;\n  perpY *= width;\n  const ratio = alignment;\n  const innerWeight = (1 - ratio) * 2;\n  const outerWeight = ratio * 2;\n  if (!closedShape) {\n    if (style.cap === \"round\") {\n      indexCount += round(\n        x0 - perpX * (innerWeight - outerWeight) * 0.5,\n        y0 - perpY * (innerWeight - outerWeight) * 0.5,\n        x0 - perpX * innerWeight,\n        y0 - perpY * innerWeight,\n        x0 + perpX * outerWeight,\n        y0 + perpY * outerWeight,\n        verts,\n        true\n      ) + 2;\n    } else if (style.cap === \"square\") {\n      indexCount += square(x0, y0, perpX, perpY, innerWeight, outerWeight, true, verts);\n    }\n  }\n  verts.push(\n    x0 - perpX * innerWeight,\n    y0 - perpY * innerWeight\n  );\n  verts.push(\n    x0 + perpX * outerWeight,\n    y0 + perpY * outerWeight\n  );\n  for (let i = 1; i < length - 1; ++i) {\n    x0 = points[(i - 1) * 2];\n    y0 = points[(i - 1) * 2 + 1];\n    x1 = points[i * 2];\n    y1 = points[i * 2 + 1];\n    x2 = points[(i + 1) * 2];\n    y2 = points[(i + 1) * 2 + 1];\n    perpX = -(y0 - y1);\n    perpY = x0 - x1;\n    dist = Math.sqrt(perpX * perpX + perpY * perpY);\n    perpX /= dist;\n    perpY /= dist;\n    perpX *= width;\n    perpY *= width;\n    perp1x = -(y1 - y2);\n    perp1y = x1 - x2;\n    dist = Math.sqrt(perp1x * perp1x + perp1y * perp1y);\n    perp1x /= dist;\n    perp1y /= dist;\n    perp1x *= width;\n    perp1y *= width;\n    const dx0 = x1 - x0;\n    const dy0 = y0 - y1;\n    const dx1 = x1 - x2;\n    const dy1 = y2 - y1;\n    const dot = dx0 * dx1 + dy0 * dy1;\n    const cross = dy0 * dx1 - dy1 * dx0;\n    const clockwise = cross < 0;\n    if (Math.abs(cross) < 1e-3 * Math.abs(dot)) {\n      verts.push(\n        x1 - perpX * innerWeight,\n        y1 - perpY * innerWeight\n      );\n      verts.push(\n        x1 + perpX * outerWeight,\n        y1 + perpY * outerWeight\n      );\n      if (dot >= 0) {\n        if (style.join === \"round\") {\n          indexCount += round(\n            x1,\n            y1,\n            x1 - perpX * innerWeight,\n            y1 - perpY * innerWeight,\n            x1 - perp1x * innerWeight,\n            y1 - perp1y * innerWeight,\n            verts,\n            false\n          ) + 4;\n        } else {\n          indexCount += 2;\n        }\n        verts.push(\n          x1 - perp1x * outerWeight,\n          y1 - perp1y * outerWeight\n        );\n        verts.push(\n          x1 + perp1x * innerWeight,\n          y1 + perp1y * innerWeight\n        );\n      }\n      continue;\n    }\n    const c1 = (-perpX + x0) * (-perpY + y1) - (-perpX + x1) * (-perpY + y0);\n    const c2 = (-perp1x + x2) * (-perp1y + y1) - (-perp1x + x1) * (-perp1y + y2);\n    const px = (dx0 * c2 - dx1 * c1) / cross;\n    const py = (dy1 * c1 - dy0 * c2) / cross;\n    const pDist = (px - x1) * (px - x1) + (py - y1) * (py - y1);\n    const imx = x1 + (px - x1) * innerWeight;\n    const imy = y1 + (py - y1) * innerWeight;\n    const omx = x1 - (px - x1) * outerWeight;\n    const omy = y1 - (py - y1) * outerWeight;\n    const smallerInsideSegmentSq = Math.min(dx0 * dx0 + dy0 * dy0, dx1 * dx1 + dy1 * dy1);\n    const insideWeight = clockwise ? innerWeight : outerWeight;\n    const smallerInsideDiagonalSq = smallerInsideSegmentSq + insideWeight * insideWeight * widthSquared;\n    const insideMiterOk = pDist <= smallerInsideDiagonalSq;\n    if (insideMiterOk) {\n      if (style.join === \"bevel\" || pDist / widthSquared > miterLimitSquared) {\n        if (clockwise) {\n          verts.push(imx, imy);\n          verts.push(x1 + perpX * outerWeight, y1 + perpY * outerWeight);\n          verts.push(imx, imy);\n          verts.push(x1 + perp1x * outerWeight, y1 + perp1y * outerWeight);\n        } else {\n          verts.push(x1 - perpX * innerWeight, y1 - perpY * innerWeight);\n          verts.push(omx, omy);\n          verts.push(x1 - perp1x * innerWeight, y1 - perp1y * innerWeight);\n          verts.push(omx, omy);\n        }\n        indexCount += 2;\n      } else if (style.join === \"round\") {\n        if (clockwise) {\n          verts.push(imx, imy);\n          verts.push(x1 + perpX * outerWeight, y1 + perpY * outerWeight);\n          indexCount += round(\n            x1,\n            y1,\n            x1 + perpX * outerWeight,\n            y1 + perpY * outerWeight,\n            x1 + perp1x * outerWeight,\n            y1 + perp1y * outerWeight,\n            verts,\n            true\n          ) + 4;\n          verts.push(imx, imy);\n          verts.push(x1 + perp1x * outerWeight, y1 + perp1y * outerWeight);\n        } else {\n          verts.push(x1 - perpX * innerWeight, y1 - perpY * innerWeight);\n          verts.push(omx, omy);\n          indexCount += round(\n            x1,\n            y1,\n            x1 - perpX * innerWeight,\n            y1 - perpY * innerWeight,\n            x1 - perp1x * innerWeight,\n            y1 - perp1y * innerWeight,\n            verts,\n            false\n          ) + 4;\n          verts.push(x1 - perp1x * innerWeight, y1 - perp1y * innerWeight);\n          verts.push(omx, omy);\n        }\n      } else {\n        verts.push(imx, imy);\n        verts.push(omx, omy);\n      }\n    } else {\n      verts.push(x1 - perpX * innerWeight, y1 - perpY * innerWeight);\n      verts.push(x1 + perpX * outerWeight, y1 + perpY * outerWeight);\n      if (style.join === \"round\") {\n        if (clockwise) {\n          indexCount += round(\n            x1,\n            y1,\n            x1 + perpX * outerWeight,\n            y1 + perpY * outerWeight,\n            x1 + perp1x * outerWeight,\n            y1 + perp1y * outerWeight,\n            verts,\n            true\n          ) + 2;\n        } else {\n          indexCount += round(\n            x1,\n            y1,\n            x1 - perpX * innerWeight,\n            y1 - perpY * innerWeight,\n            x1 - perp1x * innerWeight,\n            y1 - perp1y * innerWeight,\n            verts,\n            false\n          ) + 2;\n        }\n      } else if (style.join === \"miter\" && pDist / widthSquared <= miterLimitSquared) {\n        if (clockwise) {\n          verts.push(omx, omy);\n          verts.push(omx, omy);\n        } else {\n          verts.push(imx, imy);\n          verts.push(imx, imy);\n        }\n        indexCount += 2;\n      }\n      verts.push(x1 - perp1x * innerWeight, y1 - perp1y * innerWeight);\n      verts.push(x1 + perp1x * outerWeight, y1 + perp1y * outerWeight);\n      indexCount += 2;\n    }\n  }\n  x0 = points[(length - 2) * 2];\n  y0 = points[(length - 2) * 2 + 1];\n  x1 = points[(length - 1) * 2];\n  y1 = points[(length - 1) * 2 + 1];\n  perpX = -(y0 - y1);\n  perpY = x0 - x1;\n  dist = Math.sqrt(perpX * perpX + perpY * perpY);\n  perpX /= dist;\n  perpY /= dist;\n  perpX *= width;\n  perpY *= width;\n  verts.push(x1 - perpX * innerWeight, y1 - perpY * innerWeight);\n  verts.push(x1 + perpX * outerWeight, y1 + perpY * outerWeight);\n  if (!closedShape) {\n    if (style.cap === \"round\") {\n      indexCount += round(\n        x1 - perpX * (innerWeight - outerWeight) * 0.5,\n        y1 - perpY * (innerWeight - outerWeight) * 0.5,\n        x1 - perpX * innerWeight,\n        y1 - perpY * innerWeight,\n        x1 + perpX * outerWeight,\n        y1 + perpY * outerWeight,\n        verts,\n        false\n      ) + 2;\n    } else if (style.cap === \"square\") {\n      indexCount += square(x1, y1, perpX, perpY, innerWeight, outerWeight, false, verts);\n    }\n  }\n  const eps2 = curveEps * curveEps;\n  for (let i = indexStart; i < indexCount + indexStart - 2; ++i) {\n    x0 = verts[i * 2];\n    y0 = verts[i * 2 + 1];\n    x1 = verts[(i + 1) * 2];\n    y1 = verts[(i + 1) * 2 + 1];\n    x2 = verts[(i + 2) * 2];\n    y2 = verts[(i + 2) * 2 + 1];\n    if (Math.abs(x0 * (y1 - y2) + x1 * (y2 - y0) + x2 * (y0 - y1)) < eps2) {\n      continue;\n    }\n    indices.push(i, i + 1, i + 2);\n  }\n}\n\nexport { buildLine };\n//# sourceMappingURL=buildLine.mjs.map\n","import { closePointEps } from '../const.mjs';\n\n\"use strict\";\nfunction buildPixelLine(points, closed, vertices, indices) {\n  const eps = closePointEps;\n  if (points.length === 0) {\n    return;\n  }\n  const fx = points[0];\n  const fy = points[1];\n  const lx = points[points.length - 2];\n  const ly = points[points.length - 1];\n  const closePath = closed || Math.abs(fx - lx) < eps && Math.abs(fy - ly) < eps;\n  const verts = vertices;\n  const length = points.length / 2;\n  const indexStart = verts.length / 2;\n  for (let i = 0; i < length; i++) {\n    verts.push(points[i * 2]);\n    verts.push(points[i * 2 + 1]);\n  }\n  for (let i = 0; i < length - 1; i++) {\n    indices.push(indexStart + i, indexStart + i + 1);\n  }\n  if (closePath) {\n    indices.push(indexStart + length - 1, indexStart);\n  }\n}\n\nexport { buildPixelLine };\n//# sourceMappingURL=buildPixelLine.mjs.map\n","import earcut from 'earcut';\n\n\"use strict\";\nfunction triangulateWithHoles(points, holes, vertices, verticesStride, verticesOffset, indices, indicesOffset) {\n  const triangles = earcut(points, holes, 2);\n  if (!triangles) {\n    return;\n  }\n  for (let i = 0; i < triangles.length; i += 3) {\n    indices[indicesOffset++] = triangles[i] + verticesOffset;\n    indices[indicesOffset++] = triangles[i + 1] + verticesOffset;\n    indices[indicesOffset++] = triangles[i + 2] + verticesOffset;\n  }\n  let index = verticesOffset * verticesStride;\n  for (let i = 0; i < points.length; i += 2) {\n    vertices[index] = points[i];\n    vertices[index + 1] = points[i + 1];\n    index += verticesStride;\n  }\n}\n\nexport { triangulateWithHoles };\n//# sourceMappingURL=triangulateWithHoles.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { triangulateWithHoles } from '../utils/triangulateWithHoles.mjs';\n\n\"use strict\";\nconst emptyArray = [];\nconst buildPolygon = {\n  extension: {\n    type: ExtensionType.ShapeBuilder,\n    name: \"polygon\"\n  },\n  build(shape, points) {\n    for (let i = 0; i < shape.points.length; i++) {\n      points[i] = shape.points[i];\n    }\n    return points;\n  },\n  triangulate(points, vertices, verticesStride, verticesOffset, indices, indicesOffset) {\n    triangulateWithHoles(points, emptyArray, vertices, verticesStride, verticesOffset, indices, indicesOffset);\n  }\n};\n\nexport { buildPolygon };\n//# sourceMappingURL=buildPolygon.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\n\n\"use strict\";\nconst buildRectangle = {\n  extension: {\n    type: ExtensionType.ShapeBuilder,\n    name: \"rectangle\"\n  },\n  build(shape, points) {\n    const rectData = shape;\n    const x = rectData.x;\n    const y = rectData.y;\n    const width = rectData.width;\n    const height = rectData.height;\n    if (!(width >= 0 && height >= 0)) {\n      return points;\n    }\n    points[0] = x;\n    points[1] = y;\n    points[2] = x + width;\n    points[3] = y;\n    points[4] = x + width;\n    points[5] = y + height;\n    points[6] = x;\n    points[7] = y + height;\n    return points;\n  },\n  triangulate(points, vertices, verticesStride, verticesOffset, indices, indicesOffset) {\n    let count = 0;\n    verticesOffset *= verticesStride;\n    vertices[verticesOffset + count] = points[0];\n    vertices[verticesOffset + count + 1] = points[1];\n    count += verticesStride;\n    vertices[verticesOffset + count] = points[2];\n    vertices[verticesOffset + count + 1] = points[3];\n    count += verticesStride;\n    vertices[verticesOffset + count] = points[6];\n    vertices[verticesOffset + count + 1] = points[7];\n    count += verticesStride;\n    vertices[verticesOffset + count] = points[4];\n    vertices[verticesOffset + count + 1] = points[5];\n    count += verticesStride;\n    const verticesIndex = verticesOffset / verticesStride;\n    indices[indicesOffset++] = verticesIndex;\n    indices[indicesOffset++] = verticesIndex + 1;\n    indices[indicesOffset++] = verticesIndex + 2;\n    indices[indicesOffset++] = verticesIndex + 1;\n    indices[indicesOffset++] = verticesIndex + 3;\n    indices[indicesOffset++] = verticesIndex + 2;\n  }\n};\n\nexport { buildRectangle };\n//# sourceMappingURL=buildRectangle.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\n\n\"use strict\";\nconst buildTriangle = {\n  extension: {\n    type: ExtensionType.ShapeBuilder,\n    name: \"triangle\"\n  },\n  build(shape, points) {\n    points[0] = shape.x;\n    points[1] = shape.y;\n    points[2] = shape.x2;\n    points[3] = shape.y2;\n    points[4] = shape.x3;\n    points[5] = shape.y3;\n    return points;\n  },\n  triangulate(points, vertices, verticesStride, verticesOffset, indices, indicesOffset) {\n    let count = 0;\n    verticesOffset *= verticesStride;\n    vertices[verticesOffset + count] = points[0];\n    vertices[verticesOffset + count + 1] = points[1];\n    count += verticesStride;\n    vertices[verticesOffset + count] = points[2];\n    vertices[verticesOffset + count + 1] = points[3];\n    count += verticesStride;\n    vertices[verticesOffset + count] = points[4];\n    vertices[verticesOffset + count + 1] = points[5];\n    const verticesIndex = verticesOffset / verticesStride;\n    indices[indicesOffset++] = verticesIndex;\n    indices[indicesOffset++] = verticesIndex + 1;\n    indices[indicesOffset++] = verticesIndex + 2;\n  }\n};\n\nexport { buildTriangle };\n//# sourceMappingURL=buildTriangle.mjs.map\n","import { Matrix } from '../../../../maths/matrix/Matrix.mjs';\nimport { Rectangle } from '../../../../maths/shapes/Rectangle.mjs';\nimport { FillGradient } from '../fill/FillGradient.mjs';\n\n\"use strict\";\nconst tempTextureMatrix = new Matrix();\nconst tempRect = new Rectangle();\nfunction generateTextureMatrix(out, style, shape, matrix) {\n  const textureMatrix = style.matrix ? out.copyFrom(style.matrix).invert() : out.identity();\n  if (style.textureSpace === \"local\") {\n    const bounds = shape.getBounds(tempRect);\n    if (style.width) {\n      bounds.pad(style.width);\n    }\n    const { x: tx, y: ty } = bounds;\n    const sx = 1 / bounds.width;\n    const sy = 1 / bounds.height;\n    const mTx = -tx * sx;\n    const mTy = -ty * sy;\n    const a1 = textureMatrix.a;\n    const b1 = textureMatrix.b;\n    const c1 = textureMatrix.c;\n    const d1 = textureMatrix.d;\n    textureMatrix.a *= sx;\n    textureMatrix.b *= sx;\n    textureMatrix.c *= sy;\n    textureMatrix.d *= sy;\n    textureMatrix.tx = mTx * a1 + mTy * c1 + textureMatrix.tx;\n    textureMatrix.ty = mTx * b1 + mTy * d1 + textureMatrix.ty;\n  } else {\n    textureMatrix.translate(style.texture.frame.x, style.texture.frame.y);\n    textureMatrix.scale(1 / style.texture.source.width, 1 / style.texture.source.height);\n  }\n  const sourceStyle = style.texture.source.style;\n  if (!(style.fill instanceof FillGradient) && sourceStyle.addressMode === \"clamp-to-edge\") {\n    sourceStyle.addressMode = \"repeat\";\n    sourceStyle.update();\n  }\n  if (matrix) {\n    textureMatrix.append(tempTextureMatrix.copyFrom(matrix).invert());\n  }\n  return textureMatrix;\n}\n\nexport { generateTextureMatrix };\n//# sourceMappingURL=generateTextureFillMatrix.mjs.map\n","import { extensions, ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { Matrix } from '../../../../maths/matrix/Matrix.mjs';\nimport { Rectangle } from '../../../../maths/shapes/Rectangle.mjs';\nimport { buildUvs, buildSimpleUvs } from '../../../../rendering/renderers/shared/geometry/utils/buildUvs.mjs';\nimport { transformVertices } from '../../../../rendering/renderers/shared/geometry/utils/transformVertices.mjs';\nimport { Texture } from '../../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { BigPool } from '../../../../utils/pool/PoolGroup.mjs';\nimport { BatchableGraphics } from '../BatchableGraphics.mjs';\nimport { buildCircle, buildEllipse, buildRoundedRectangle } from '../buildCommands/buildCircle.mjs';\nimport { buildLine } from '../buildCommands/buildLine.mjs';\nimport { buildPixelLine } from '../buildCommands/buildPixelLine.mjs';\nimport { buildPolygon } from '../buildCommands/buildPolygon.mjs';\nimport { buildRectangle } from '../buildCommands/buildRectangle.mjs';\nimport { buildTriangle } from '../buildCommands/buildTriangle.mjs';\nimport { generateTextureMatrix } from './generateTextureFillMatrix.mjs';\nimport { triangulateWithHoles } from './triangulateWithHoles.mjs';\n\n\"use strict\";\nconst shapeBuilders = {};\nextensions.handleByMap(ExtensionType.ShapeBuilder, shapeBuilders);\nextensions.add(buildRectangle, buildPolygon, buildTriangle, buildCircle, buildEllipse, buildRoundedRectangle);\nconst tempRect = new Rectangle();\nconst tempTextureMatrix = new Matrix();\nfunction buildContextBatches(context, gpuContext) {\n  const { geometryData, batches } = gpuContext;\n  batches.length = 0;\n  geometryData.indices.length = 0;\n  geometryData.vertices.length = 0;\n  geometryData.uvs.length = 0;\n  for (let i = 0; i < context.instructions.length; i++) {\n    const instruction = context.instructions[i];\n    if (instruction.action === \"texture\") {\n      addTextureToGeometryData(instruction.data, batches, geometryData);\n    } else if (instruction.action === \"fill\" || instruction.action === \"stroke\") {\n      const isStroke = instruction.action === \"stroke\";\n      const shapePath = instruction.data.path.shapePath;\n      const style = instruction.data.style;\n      const hole = instruction.data.hole;\n      if (isStroke && hole) {\n        addShapePathToGeometryData(hole.shapePath, style, true, batches, geometryData);\n      }\n      if (hole) {\n        shapePath.shapePrimitives[shapePath.shapePrimitives.length - 1].holes = hole.shapePath.shapePrimitives;\n      }\n      addShapePathToGeometryData(shapePath, style, isStroke, batches, geometryData);\n    }\n  }\n}\nfunction addTextureToGeometryData(data, batches, geometryData) {\n  const { vertices, uvs, indices } = geometryData;\n  const indexOffset = indices.length;\n  const vertOffset = vertices.length / 2;\n  const points = [];\n  const build = shapeBuilders.rectangle;\n  const rect = tempRect;\n  const texture = data.image;\n  rect.x = data.dx;\n  rect.y = data.dy;\n  rect.width = data.dw;\n  rect.height = data.dh;\n  const matrix = data.transform;\n  build.build(rect, points);\n  if (matrix) {\n    transformVertices(points, matrix);\n  }\n  build.triangulate(points, vertices, 2, vertOffset, indices, indexOffset);\n  const textureUvs = texture.uvs;\n  uvs.push(\n    textureUvs.x0,\n    textureUvs.y0,\n    textureUvs.x1,\n    textureUvs.y1,\n    textureUvs.x3,\n    textureUvs.y3,\n    textureUvs.x2,\n    textureUvs.y2\n  );\n  const graphicsBatch = BigPool.get(BatchableGraphics);\n  graphicsBatch.indexOffset = indexOffset;\n  graphicsBatch.indexSize = indices.length - indexOffset;\n  graphicsBatch.attributeOffset = vertOffset;\n  graphicsBatch.attributeSize = vertices.length / 2 - vertOffset;\n  graphicsBatch.baseColor = data.style;\n  graphicsBatch.alpha = data.alpha;\n  graphicsBatch.texture = texture;\n  graphicsBatch.geometryData = geometryData;\n  batches.push(graphicsBatch);\n}\nfunction addShapePathToGeometryData(shapePath, style, isStroke, batches, geometryData) {\n  const { vertices, uvs, indices } = geometryData;\n  shapePath.shapePrimitives.forEach(({ shape, transform: matrix, holes }) => {\n    const indexOffset = indices.length;\n    const vertOffset = vertices.length / 2;\n    const points = [];\n    const build = shapeBuilders[shape.type];\n    let topology = \"triangle-list\";\n    build.build(shape, points);\n    if (matrix) {\n      transformVertices(points, matrix);\n    }\n    if (!isStroke) {\n      if (holes) {\n        const holeIndices = [];\n        const otherPoints = points.slice();\n        const holeArrays = getHoleArrays(holes);\n        holeArrays.forEach((holePoints) => {\n          holeIndices.push(otherPoints.length / 2);\n          otherPoints.push(...holePoints);\n        });\n        triangulateWithHoles(otherPoints, holeIndices, vertices, 2, vertOffset, indices, indexOffset);\n      } else {\n        build.triangulate(points, vertices, 2, vertOffset, indices, indexOffset);\n      }\n    } else {\n      const close = shape.closePath ?? true;\n      const lineStyle = style;\n      if (!lineStyle.pixelLine) {\n        buildLine(points, lineStyle, false, close, vertices, indices);\n      } else {\n        buildPixelLine(points, close, vertices, indices);\n        topology = \"line-list\";\n      }\n    }\n    const uvsOffset = uvs.length / 2;\n    const texture = style.texture;\n    if (texture !== Texture.WHITE) {\n      const textureMatrix = generateTextureMatrix(tempTextureMatrix, style, shape, matrix);\n      buildUvs(vertices, 2, vertOffset, uvs, uvsOffset, 2, vertices.length / 2 - vertOffset, textureMatrix);\n    } else {\n      buildSimpleUvs(uvs, uvsOffset, 2, vertices.length / 2 - vertOffset);\n    }\n    const graphicsBatch = BigPool.get(BatchableGraphics);\n    graphicsBatch.indexOffset = indexOffset;\n    graphicsBatch.indexSize = indices.length - indexOffset;\n    graphicsBatch.attributeOffset = vertOffset;\n    graphicsBatch.attributeSize = vertices.length / 2 - vertOffset;\n    graphicsBatch.baseColor = style.color;\n    graphicsBatch.alpha = style.alpha;\n    graphicsBatch.texture = texture;\n    graphicsBatch.geometryData = geometryData;\n    graphicsBatch.topology = topology;\n    batches.push(graphicsBatch);\n  });\n}\nfunction getHoleArrays(holePrimitives) {\n  const holeArrays = [];\n  for (let k = 0; k < holePrimitives.length; k++) {\n    const holePrimitive = holePrimitives[k].shape;\n    const holePoints = [];\n    const holeBuilder = shapeBuilders[holePrimitive.type];\n    holeBuilder.build(holePrimitive, holePoints);\n    holeArrays.push(holePoints);\n  }\n  return holeArrays;\n}\n\nexport { buildContextBatches, shapeBuilders };\n//# sourceMappingURL=buildContextBatches.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { getTextureBatchBindGroup } from '../../../rendering/batcher/gpu/getTextureBatchBindGroup.mjs';\nimport { DefaultBatcher } from '../../../rendering/batcher/shared/DefaultBatcher.mjs';\nimport { InstructionSet } from '../../../rendering/renderers/shared/instructions/InstructionSet.mjs';\nimport { deprecation, v8_3_4 } from '../../../utils/logging/deprecation.mjs';\nimport { BigPool } from '../../../utils/pool/PoolGroup.mjs';\nimport { buildContextBatches } from './utils/buildContextBatches.mjs';\n\n\"use strict\";\nclass GpuGraphicsContext {\n  constructor() {\n    this.batches = [];\n    this.geometryData = {\n      vertices: [],\n      uvs: [],\n      indices: []\n    };\n  }\n}\nclass GraphicsContextRenderData {\n  constructor() {\n    this.batcher = new DefaultBatcher();\n    this.instructions = new InstructionSet();\n  }\n  init() {\n    this.instructions.reset();\n  }\n  /**\n   * @deprecated since version 8.0.0\n   * Use `batcher.geometry` instead.\n   * @see {Batcher#geometry}\n   */\n  get geometry() {\n    deprecation(v8_3_4, \"GraphicsContextRenderData#geometry is deprecated, please use batcher.geometry instead.\");\n    return this.batcher.geometry;\n  }\n}\nconst _GraphicsContextSystem = class _GraphicsContextSystem {\n  constructor(renderer) {\n    // the root context batches, used to either make a batch or geometry\n    // all graphics use this as a base\n    this._gpuContextHash = {};\n    // used for non-batchable graphics\n    this._graphicsDataContextHash = /* @__PURE__ */ Object.create(null);\n    renderer.renderableGC.addManagedHash(this, \"_gpuContextHash\");\n    renderer.renderableGC.addManagedHash(this, \"_graphicsDataContextHash\");\n  }\n  /**\n   * Runner init called, update the default options\n   * @ignore\n   */\n  init(options) {\n    _GraphicsContextSystem.defaultOptions.bezierSmoothness = options?.bezierSmoothness ?? _GraphicsContextSystem.defaultOptions.bezierSmoothness;\n  }\n  getContextRenderData(context) {\n    return this._graphicsDataContextHash[context.uid] || this._initContextRenderData(context);\n  }\n  // Context management functions\n  updateGpuContext(context) {\n    let gpuContext = this._gpuContextHash[context.uid] || this._initContext(context);\n    if (context.dirty) {\n      if (gpuContext) {\n        this._cleanGraphicsContextData(context);\n      } else {\n        gpuContext = this._initContext(context);\n      }\n      buildContextBatches(context, gpuContext);\n      const batchMode = context.batchMode;\n      if (context.customShader || batchMode === \"no-batch\") {\n        gpuContext.isBatchable = false;\n      } else if (batchMode === \"auto\") {\n        gpuContext.isBatchable = gpuContext.geometryData.vertices.length < 400;\n      }\n      context.dirty = false;\n    }\n    return gpuContext;\n  }\n  getGpuContext(context) {\n    return this._gpuContextHash[context.uid] || this._initContext(context);\n  }\n  _initContextRenderData(context) {\n    const graphicsData = BigPool.get(GraphicsContextRenderData);\n    const { batches, geometryData } = this._gpuContextHash[context.uid];\n    const vertexSize = geometryData.vertices.length;\n    const indexSize = geometryData.indices.length;\n    for (let i = 0; i < batches.length; i++) {\n      batches[i].applyTransform = false;\n    }\n    const batcher = graphicsData.batcher;\n    batcher.ensureAttributeBuffer(vertexSize);\n    batcher.ensureIndexBuffer(indexSize);\n    batcher.begin();\n    for (let i = 0; i < batches.length; i++) {\n      const batch = batches[i];\n      batcher.add(batch);\n    }\n    batcher.finish(graphicsData.instructions);\n    const geometry = batcher.geometry;\n    geometry.indexBuffer.setDataWithSize(batcher.indexBuffer, batcher.indexSize, true);\n    geometry.buffers[0].setDataWithSize(batcher.attributeBuffer.float32View, batcher.attributeSize, true);\n    const drawBatches = batcher.batches;\n    for (let i = 0; i < drawBatches.length; i++) {\n      const batch = drawBatches[i];\n      batch.bindGroup = getTextureBatchBindGroup(batch.textures.textures, batch.textures.count);\n    }\n    this._graphicsDataContextHash[context.uid] = graphicsData;\n    return graphicsData;\n  }\n  _initContext(context) {\n    const gpuContext = new GpuGraphicsContext();\n    gpuContext.context = context;\n    this._gpuContextHash[context.uid] = gpuContext;\n    context.on(\"destroy\", this.onGraphicsContextDestroy, this);\n    return this._gpuContextHash[context.uid];\n  }\n  onGraphicsContextDestroy(context) {\n    this._cleanGraphicsContextData(context);\n    context.off(\"destroy\", this.onGraphicsContextDestroy, this);\n    this._gpuContextHash[context.uid] = null;\n  }\n  _cleanGraphicsContextData(context) {\n    const gpuContext = this._gpuContextHash[context.uid];\n    if (!gpuContext.isBatchable) {\n      if (this._graphicsDataContextHash[context.uid]) {\n        BigPool.return(this.getContextRenderData(context));\n        this._graphicsDataContextHash[context.uid] = null;\n      }\n    }\n    if (gpuContext.batches) {\n      gpuContext.batches.forEach((batch) => {\n        BigPool.return(batch);\n      });\n    }\n  }\n  destroy() {\n    for (const i in this._gpuContextHash) {\n      if (this._gpuContextHash[i]) {\n        this.onGraphicsContextDestroy(this._gpuContextHash[i].context);\n      }\n    }\n  }\n};\n/** @ignore */\n_GraphicsContextSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem,\n    ExtensionType.WebGPUSystem,\n    ExtensionType.CanvasSystem\n  ],\n  name: \"graphicsContext\"\n};\n/** The default options for the GraphicsContextSystem. */\n_GraphicsContextSystem.defaultOptions = {\n  /**\n   * A value from 0 to 1 that controls the smoothness of bezier curves (the higher the smoother)\n   * @default 0.5\n   */\n  bezierSmoothness: 0.5\n};\nlet GraphicsContextSystem = _GraphicsContextSystem;\n\nexport { GpuGraphicsContext, GraphicsContextRenderData, GraphicsContextSystem };\n//# sourceMappingURL=GraphicsContextSystem.mjs.map\n","import { GraphicsContextSystem } from '../GraphicsContextSystem.mjs';\n\n\"use strict\";\nconst RECURSION_LIMIT = 8;\nconst FLT_EPSILON = 11920929e-14;\nconst PATH_DISTANCE_EPSILON = 1;\nconst curveAngleToleranceEpsilon = 0.01;\nconst mAngleTolerance = 0;\nconst mCuspLimit = 0;\nfunction buildAdaptiveBezier(points, sX, sY, cp1x, cp1y, cp2x, cp2y, eX, eY, smoothness) {\n  const scale = 1;\n  const smoothing = Math.min(\n    0.99,\n    // a value of 1.0 actually inverts smoothing, so we cap it at 0.99\n    Math.max(0, smoothness ?? GraphicsContextSystem.defaultOptions.bezierSmoothness)\n  );\n  let distanceTolerance = (PATH_DISTANCE_EPSILON - smoothing) / scale;\n  distanceTolerance *= distanceTolerance;\n  begin(sX, sY, cp1x, cp1y, cp2x, cp2y, eX, eY, points, distanceTolerance);\n  return points;\n}\nfunction begin(sX, sY, cp1x, cp1y, cp2x, cp2y, eX, eY, points, distanceTolerance) {\n  recursive(sX, sY, cp1x, cp1y, cp2x, cp2y, eX, eY, points, distanceTolerance, 0);\n  points.push(eX, eY);\n}\nfunction recursive(x1, y1, x2, y2, x3, y3, x4, y4, points, distanceTolerance, level) {\n  if (level > RECURSION_LIMIT) {\n    return;\n  }\n  const pi = Math.PI;\n  const x12 = (x1 + x2) / 2;\n  const y12 = (y1 + y2) / 2;\n  const x23 = (x2 + x3) / 2;\n  const y23 = (y2 + y3) / 2;\n  const x34 = (x3 + x4) / 2;\n  const y34 = (y3 + y4) / 2;\n  const x123 = (x12 + x23) / 2;\n  const y123 = (y12 + y23) / 2;\n  const x234 = (x23 + x34) / 2;\n  const y234 = (y23 + y34) / 2;\n  const x1234 = (x123 + x234) / 2;\n  const y1234 = (y123 + y234) / 2;\n  if (level > 0) {\n    let dx = x4 - x1;\n    let dy = y4 - y1;\n    const d2 = Math.abs((x2 - x4) * dy - (y2 - y4) * dx);\n    const d3 = Math.abs((x3 - x4) * dy - (y3 - y4) * dx);\n    let da1;\n    let da2;\n    if (d2 > FLT_EPSILON && d3 > FLT_EPSILON) {\n      if ((d2 + d3) * (d2 + d3) <= distanceTolerance * (dx * dx + dy * dy)) {\n        if (mAngleTolerance < curveAngleToleranceEpsilon) {\n          points.push(x1234, y1234);\n          return;\n        }\n        const a23 = Math.atan2(y3 - y2, x3 - x2);\n        da1 = Math.abs(a23 - Math.atan2(y2 - y1, x2 - x1));\n        da2 = Math.abs(Math.atan2(y4 - y3, x4 - x3) - a23);\n        if (da1 >= pi)\n          da1 = 2 * pi - da1;\n        if (da2 >= pi)\n          da2 = 2 * pi - da2;\n        if (da1 + da2 < mAngleTolerance) {\n          points.push(x1234, y1234);\n          return;\n        }\n        if (mCuspLimit !== 0) {\n          if (da1 > mCuspLimit) {\n            points.push(x2, y2);\n            return;\n          }\n          if (da2 > mCuspLimit) {\n            points.push(x3, y3);\n            return;\n          }\n        }\n      }\n    } else if (d2 > FLT_EPSILON) {\n      if (d2 * d2 <= distanceTolerance * (dx * dx + dy * dy)) {\n        if (mAngleTolerance < curveAngleToleranceEpsilon) {\n          points.push(x1234, y1234);\n          return;\n        }\n        da1 = Math.abs(Math.atan2(y3 - y2, x3 - x2) - Math.atan2(y2 - y1, x2 - x1));\n        if (da1 >= pi)\n          da1 = 2 * pi - da1;\n        if (da1 < mAngleTolerance) {\n          points.push(x2, y2);\n          points.push(x3, y3);\n          return;\n        }\n        if (mCuspLimit !== 0) {\n          if (da1 > mCuspLimit) {\n            points.push(x2, y2);\n            return;\n          }\n        }\n      }\n    } else if (d3 > FLT_EPSILON) {\n      if (d3 * d3 <= distanceTolerance * (dx * dx + dy * dy)) {\n        if (mAngleTolerance < curveAngleToleranceEpsilon) {\n          points.push(x1234, y1234);\n          return;\n        }\n        da1 = Math.abs(Math.atan2(y4 - y3, x4 - x3) - Math.atan2(y3 - y2, x3 - x2));\n        if (da1 >= pi)\n          da1 = 2 * pi - da1;\n        if (da1 < mAngleTolerance) {\n          points.push(x2, y2);\n          points.push(x3, y3);\n          return;\n        }\n        if (mCuspLimit !== 0) {\n          if (da1 > mCuspLimit) {\n            points.push(x3, y3);\n            return;\n          }\n        }\n      }\n    } else {\n      dx = x1234 - (x1 + x4) / 2;\n      dy = y1234 - (y1 + y4) / 2;\n      if (dx * dx + dy * dy <= distanceTolerance) {\n        points.push(x1234, y1234);\n        return;\n      }\n    }\n  }\n  recursive(x1, y1, x12, y12, x123, y123, x1234, y1234, points, distanceTolerance, level + 1);\n  recursive(x1234, y1234, x234, y234, x34, y34, x4, y4, points, distanceTolerance, level + 1);\n}\n\nexport { buildAdaptiveBezier };\n//# sourceMappingURL=buildAdaptiveBezier.mjs.map\n","import { GraphicsContextSystem } from '../GraphicsContextSystem.mjs';\n\n\"use strict\";\nconst RECURSION_LIMIT = 8;\nconst FLT_EPSILON = 11920929e-14;\nconst PATH_DISTANCE_EPSILON = 1;\nconst curveAngleToleranceEpsilon = 0.01;\nconst mAngleTolerance = 0;\nfunction buildAdaptiveQuadratic(points, sX, sY, cp1x, cp1y, eX, eY, smoothness) {\n  const scale = 1;\n  const smoothing = Math.min(\n    0.99,\n    // a value of 1.0 actually inverts smoothing, so we cap it at 0.99\n    Math.max(0, smoothness ?? GraphicsContextSystem.defaultOptions.bezierSmoothness)\n  );\n  let distanceTolerance = (PATH_DISTANCE_EPSILON - smoothing) / scale;\n  distanceTolerance *= distanceTolerance;\n  begin(sX, sY, cp1x, cp1y, eX, eY, points, distanceTolerance);\n  return points;\n}\nfunction begin(sX, sY, cp1x, cp1y, eX, eY, points, distanceTolerance) {\n  recursive(points, sX, sY, cp1x, cp1y, eX, eY, distanceTolerance, 0);\n  points.push(eX, eY);\n}\nfunction recursive(points, x1, y1, x2, y2, x3, y3, distanceTolerance, level) {\n  if (level > RECURSION_LIMIT) {\n    return;\n  }\n  const pi = Math.PI;\n  const x12 = (x1 + x2) / 2;\n  const y12 = (y1 + y2) / 2;\n  const x23 = (x2 + x3) / 2;\n  const y23 = (y2 + y3) / 2;\n  const x123 = (x12 + x23) / 2;\n  const y123 = (y12 + y23) / 2;\n  let dx = x3 - x1;\n  let dy = y3 - y1;\n  const d = Math.abs((x2 - x3) * dy - (y2 - y3) * dx);\n  if (d > FLT_EPSILON) {\n    if (d * d <= distanceTolerance * (dx * dx + dy * dy)) {\n      if (mAngleTolerance < curveAngleToleranceEpsilon) {\n        points.push(x123, y123);\n        return;\n      }\n      let da = Math.abs(Math.atan2(y3 - y2, x3 - x2) - Math.atan2(y2 - y1, x2 - x1));\n      if (da >= pi)\n        da = 2 * pi - da;\n      if (da < mAngleTolerance) {\n        points.push(x123, y123);\n        return;\n      }\n    }\n  } else {\n    dx = x123 - (x1 + x3) / 2;\n    dy = y123 - (y1 + y3) / 2;\n    if (dx * dx + dy * dy <= distanceTolerance) {\n      points.push(x123, y123);\n      return;\n    }\n  }\n  recursive(points, x1, y1, x12, y12, x123, y123, distanceTolerance, level + 1);\n  recursive(points, x123, y123, x23, y23, x3, y3, distanceTolerance, level + 1);\n}\n\nexport { buildAdaptiveQuadratic };\n//# sourceMappingURL=buildAdaptiveQuadratic.mjs.map\n","\"use strict\";\nfunction buildArc(points, x, y, radius, start, end, clockwise, steps) {\n  let dist = Math.abs(start - end);\n  if (!clockwise && start > end) {\n    dist = 2 * Math.PI - dist;\n  } else if (clockwise && end > start) {\n    dist = 2 * Math.PI - dist;\n  }\n  steps || (steps = Math.max(6, Math.floor(6 * Math.pow(radius, 1 / 3) * (dist / Math.PI))));\n  steps = Math.max(steps, 3);\n  let f = dist / steps;\n  let t = start;\n  f *= clockwise ? -1 : 1;\n  for (let i = 0; i < steps + 1; i++) {\n    const cs = Math.cos(t);\n    const sn = Math.sin(t);\n    const nx = x + cs * radius;\n    const ny = y + sn * radius;\n    points.push(nx, ny);\n    t += f;\n  }\n}\n\nexport { buildArc };\n//# sourceMappingURL=buildArc.mjs.map\n","import { buildArc } from './buildArc.mjs';\n\n\"use strict\";\nfunction buildArcTo(points, x1, y1, x2, y2, radius) {\n  const fromX = points[points.length - 2];\n  const fromY = points[points.length - 1];\n  const a1 = fromY - y1;\n  const b1 = fromX - x1;\n  const a2 = y2 - y1;\n  const b2 = x2 - x1;\n  const mm = Math.abs(a1 * b2 - b1 * a2);\n  if (mm < 1e-8 || radius === 0) {\n    if (points[points.length - 2] !== x1 || points[points.length - 1] !== y1) {\n      points.push(x1, y1);\n    }\n    return;\n  }\n  const dd = a1 * a1 + b1 * b1;\n  const cc = a2 * a2 + b2 * b2;\n  const tt = a1 * a2 + b1 * b2;\n  const k1 = radius * Math.sqrt(dd) / mm;\n  const k2 = radius * Math.sqrt(cc) / mm;\n  const j1 = k1 * tt / dd;\n  const j2 = k2 * tt / cc;\n  const cx = k1 * b2 + k2 * b1;\n  const cy = k1 * a2 + k2 * a1;\n  const px = b1 * (k2 + j1);\n  const py = a1 * (k2 + j1);\n  const qx = b2 * (k1 + j2);\n  const qy = a2 * (k1 + j2);\n  const startAngle = Math.atan2(py - cy, px - cx);\n  const endAngle = Math.atan2(qy - cy, qx - cx);\n  buildArc(\n    points,\n    cx + x1,\n    cy + y1,\n    radius,\n    startAngle,\n    endAngle,\n    b1 * a2 > b2 * a1\n  );\n}\n\nexport { buildArcTo };\n//# sourceMappingURL=buildArcTo.mjs.map\n","import { buildAdaptiveBezier } from './buildAdaptiveBezier.mjs';\n\n\"use strict\";\nconst TAU = Math.PI * 2;\nconst out = {\n  centerX: 0,\n  centerY: 0,\n  ang1: 0,\n  ang2: 0\n};\nconst mapToEllipse = ({ x, y }, rx, ry, cosPhi, sinPhi, centerX, centerY, out2) => {\n  x *= rx;\n  y *= ry;\n  const xp = cosPhi * x - sinPhi * y;\n  const yp = sinPhi * x + cosPhi * y;\n  out2.x = xp + centerX;\n  out2.y = yp + centerY;\n  return out2;\n};\nfunction approxUnitArc(ang1, ang2) {\n  const a1 = ang2 === -1.5707963267948966 ? -0.551915024494 : 4 / 3 * Math.tan(ang2 / 4);\n  const a = ang2 === 1.5707963267948966 ? 0.551915024494 : a1;\n  const x1 = Math.cos(ang1);\n  const y1 = Math.sin(ang1);\n  const x2 = Math.cos(ang1 + ang2);\n  const y2 = Math.sin(ang1 + ang2);\n  return [\n    {\n      x: x1 - y1 * a,\n      y: y1 + x1 * a\n    },\n    {\n      x: x2 + y2 * a,\n      y: y2 - x2 * a\n    },\n    {\n      x: x2,\n      y: y2\n    }\n  ];\n}\nconst vectorAngle = (ux, uy, vx, vy) => {\n  const sign = ux * vy - uy * vx < 0 ? -1 : 1;\n  let dot = ux * vx + uy * vy;\n  if (dot > 1) {\n    dot = 1;\n  }\n  if (dot < -1) {\n    dot = -1;\n  }\n  return sign * Math.acos(dot);\n};\nconst getArcCenter = (px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinPhi, cosPhi, pxp, pyp, out2) => {\n  const rxSq = Math.pow(rx, 2);\n  const rySq = Math.pow(ry, 2);\n  const pxpSq = Math.pow(pxp, 2);\n  const pypSq = Math.pow(pyp, 2);\n  let radicant = rxSq * rySq - rxSq * pypSq - rySq * pxpSq;\n  if (radicant < 0) {\n    radicant = 0;\n  }\n  radicant /= rxSq * pypSq + rySq * pxpSq;\n  radicant = Math.sqrt(radicant) * (largeArcFlag === sweepFlag ? -1 : 1);\n  const centerXp = radicant * rx / ry * pyp;\n  const centerYp = radicant * -ry / rx * pxp;\n  const centerX = cosPhi * centerXp - sinPhi * centerYp + (px + cx) / 2;\n  const centerY = sinPhi * centerXp + cosPhi * centerYp + (py + cy) / 2;\n  const vx1 = (pxp - centerXp) / rx;\n  const vy1 = (pyp - centerYp) / ry;\n  const vx2 = (-pxp - centerXp) / rx;\n  const vy2 = (-pyp - centerYp) / ry;\n  const ang1 = vectorAngle(1, 0, vx1, vy1);\n  let ang2 = vectorAngle(vx1, vy1, vx2, vy2);\n  if (sweepFlag === 0 && ang2 > 0) {\n    ang2 -= TAU;\n  }\n  if (sweepFlag === 1 && ang2 < 0) {\n    ang2 += TAU;\n  }\n  out2.centerX = centerX;\n  out2.centerY = centerY;\n  out2.ang1 = ang1;\n  out2.ang2 = ang2;\n};\nfunction buildArcToSvg(points, px, py, cx, cy, rx, ry, xAxisRotation = 0, largeArcFlag = 0, sweepFlag = 0) {\n  if (rx === 0 || ry === 0) {\n    return;\n  }\n  const sinPhi = Math.sin(xAxisRotation * TAU / 360);\n  const cosPhi = Math.cos(xAxisRotation * TAU / 360);\n  const pxp = cosPhi * (px - cx) / 2 + sinPhi * (py - cy) / 2;\n  const pyp = -sinPhi * (px - cx) / 2 + cosPhi * (py - cy) / 2;\n  if (pxp === 0 && pyp === 0) {\n    return;\n  }\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n  const lambda = Math.pow(pxp, 2) / Math.pow(rx, 2) + Math.pow(pyp, 2) / Math.pow(ry, 2);\n  if (lambda > 1) {\n    rx *= Math.sqrt(lambda);\n    ry *= Math.sqrt(lambda);\n  }\n  getArcCenter(\n    px,\n    py,\n    cx,\n    cy,\n    rx,\n    ry,\n    largeArcFlag,\n    sweepFlag,\n    sinPhi,\n    cosPhi,\n    pxp,\n    pyp,\n    out\n  );\n  let { ang1, ang2 } = out;\n  const { centerX, centerY } = out;\n  let ratio = Math.abs(ang2) / (TAU / 4);\n  if (Math.abs(1 - ratio) < 1e-7) {\n    ratio = 1;\n  }\n  const segments = Math.max(Math.ceil(ratio), 1);\n  ang2 /= segments;\n  let lastX = points[points.length - 2];\n  let lastY = points[points.length - 1];\n  const outCurvePoint = { x: 0, y: 0 };\n  for (let i = 0; i < segments; i++) {\n    const curve = approxUnitArc(ang1, ang2);\n    const { x: x1, y: y1 } = mapToEllipse(curve[0], rx, ry, cosPhi, sinPhi, centerX, centerY, outCurvePoint);\n    const { x: x2, y: y2 } = mapToEllipse(curve[1], rx, ry, cosPhi, sinPhi, centerX, centerY, outCurvePoint);\n    const { x, y } = mapToEllipse(curve[2], rx, ry, cosPhi, sinPhi, centerX, centerY, outCurvePoint);\n    buildAdaptiveBezier(\n      points,\n      lastX,\n      lastY,\n      x1,\n      y1,\n      x2,\n      y2,\n      x,\n      y\n    );\n    lastX = x;\n    lastY = y;\n    ang1 += ang2;\n  }\n}\n\nexport { buildArcToSvg };\n//# sourceMappingURL=buildArcToSvg.mjs.map\n","\"use strict\";\nfunction roundedShapeArc(g, points, radius) {\n  const vecFrom = (p, pp) => {\n    const x = pp.x - p.x;\n    const y = pp.y - p.y;\n    const len = Math.sqrt(x * x + y * y);\n    const nx = x / len;\n    const ny = y / len;\n    return { len, nx, ny };\n  };\n  const sharpCorner = (i, p) => {\n    if (i === 0) {\n      g.moveTo(p.x, p.y);\n    } else {\n      g.lineTo(p.x, p.y);\n    }\n  };\n  let p1 = points[points.length - 1];\n  for (let i = 0; i < points.length; i++) {\n    const p2 = points[i % points.length];\n    const pRadius = p2.radius ?? radius;\n    if (pRadius <= 0) {\n      sharpCorner(i, p2);\n      p1 = p2;\n      continue;\n    }\n    const p3 = points[(i + 1) % points.length];\n    const v1 = vecFrom(p2, p1);\n    const v2 = vecFrom(p2, p3);\n    if (v1.len < 1e-4 || v2.len < 1e-4) {\n      sharpCorner(i, p2);\n      p1 = p2;\n      continue;\n    }\n    let angle = Math.asin(v1.nx * v2.ny - v1.ny * v2.nx);\n    let radDirection = 1;\n    let drawDirection = false;\n    if (v1.nx * v2.nx - v1.ny * -v2.ny < 0) {\n      if (angle < 0) {\n        angle = Math.PI + angle;\n      } else {\n        angle = Math.PI - angle;\n        radDirection = -1;\n        drawDirection = true;\n      }\n    } else if (angle > 0) {\n      radDirection = -1;\n      drawDirection = true;\n    }\n    const halfAngle = angle / 2;\n    let cRadius;\n    let lenOut = Math.abs(\n      Math.cos(halfAngle) * pRadius / Math.sin(halfAngle)\n    );\n    if (lenOut > Math.min(v1.len / 2, v2.len / 2)) {\n      lenOut = Math.min(v1.len / 2, v2.len / 2);\n      cRadius = Math.abs(lenOut * Math.sin(halfAngle) / Math.cos(halfAngle));\n    } else {\n      cRadius = pRadius;\n    }\n    const cX = p2.x + v2.nx * lenOut + -v2.ny * cRadius * radDirection;\n    const cY = p2.y + v2.ny * lenOut + v2.nx * cRadius * radDirection;\n    const startAngle = Math.atan2(v1.ny, v1.nx) + Math.PI / 2 * radDirection;\n    const endAngle = Math.atan2(v2.ny, v2.nx) - Math.PI / 2 * radDirection;\n    if (i === 0) {\n      g.moveTo(\n        cX + Math.cos(startAngle) * cRadius,\n        cY + Math.sin(startAngle) * cRadius\n      );\n    }\n    g.arc(cX, cY, cRadius, startAngle, endAngle, drawDirection);\n    p1 = p2;\n  }\n}\nfunction roundedShapeQuadraticCurve(g, points, radius, smoothness) {\n  const distance = (p1, p2) => Math.sqrt((p1.x - p2.x) ** 2 + (p1.y - p2.y) ** 2);\n  const pointLerp = (p1, p2, t) => ({\n    x: p1.x + (p2.x - p1.x) * t,\n    y: p1.y + (p2.y - p1.y) * t\n  });\n  const numPoints = points.length;\n  for (let i = 0; i < numPoints; i++) {\n    const thisPoint = points[(i + 1) % numPoints];\n    const pRadius = thisPoint.radius ?? radius;\n    if (pRadius <= 0) {\n      if (i === 0) {\n        g.moveTo(thisPoint.x, thisPoint.y);\n      } else {\n        g.lineTo(thisPoint.x, thisPoint.y);\n      }\n      continue;\n    }\n    const lastPoint = points[i];\n    const nextPoint = points[(i + 2) % numPoints];\n    const lastEdgeLength = distance(lastPoint, thisPoint);\n    let start;\n    if (lastEdgeLength < 1e-4) {\n      start = thisPoint;\n    } else {\n      const lastOffsetDistance = Math.min(lastEdgeLength / 2, pRadius);\n      start = pointLerp(\n        thisPoint,\n        lastPoint,\n        lastOffsetDistance / lastEdgeLength\n      );\n    }\n    const nextEdgeLength = distance(nextPoint, thisPoint);\n    let end;\n    if (nextEdgeLength < 1e-4) {\n      end = thisPoint;\n    } else {\n      const nextOffsetDistance = Math.min(nextEdgeLength / 2, pRadius);\n      end = pointLerp(\n        thisPoint,\n        nextPoint,\n        nextOffsetDistance / nextEdgeLength\n      );\n    }\n    if (i === 0) {\n      g.moveTo(start.x, start.y);\n    } else {\n      g.lineTo(start.x, start.y);\n    }\n    g.quadraticCurveTo(thisPoint.x, thisPoint.y, end.x, end.y, smoothness);\n  }\n}\n\nexport { roundedShapeArc, roundedShapeQuadraticCurve };\n//# sourceMappingURL=roundShape.mjs.map\n","import { Circle } from '../../../../maths/shapes/Circle.mjs';\nimport { Ellipse } from '../../../../maths/shapes/Ellipse.mjs';\nimport { Polygon } from '../../../../maths/shapes/Polygon.mjs';\nimport { Rectangle } from '../../../../maths/shapes/Rectangle.mjs';\nimport { RoundedRectangle } from '../../../../maths/shapes/RoundedRectangle.mjs';\nimport { Bounds } from '../../../container/bounds/Bounds.mjs';\nimport { buildAdaptiveBezier } from '../buildCommands/buildAdaptiveBezier.mjs';\nimport { buildAdaptiveQuadratic } from '../buildCommands/buildAdaptiveQuadratic.mjs';\nimport { buildArc } from '../buildCommands/buildArc.mjs';\nimport { buildArcTo } from '../buildCommands/buildArcTo.mjs';\nimport { buildArcToSvg } from '../buildCommands/buildArcToSvg.mjs';\nimport { roundedShapeQuadraticCurve, roundedShapeArc } from './roundShape.mjs';\n\n\"use strict\";\nconst tempRectangle = new Rectangle();\nclass ShapePath {\n  constructor(graphicsPath2D) {\n    /** The list of shape primitives that make up the path. */\n    this.shapePrimitives = [];\n    this._currentPoly = null;\n    this._bounds = new Bounds();\n    this._graphicsPath2D = graphicsPath2D;\n    this.signed = graphicsPath2D.checkForHoles;\n  }\n  /**\n   * Sets the starting point for a new sub-path. Any subsequent drawing commands are considered part of this path.\n   * @param x - The x-coordinate for the starting point.\n   * @param y - The y-coordinate for the starting point.\n   * @returns The instance of the current object for chaining.\n   */\n  moveTo(x, y) {\n    this.startPoly(x, y);\n    return this;\n  }\n  /**\n   * Connects the current point to a new point with a straight line. This method updates the current path.\n   * @param x - The x-coordinate of the new point to connect to.\n   * @param y - The y-coordinate of the new point to connect to.\n   * @returns The instance of the current object for chaining.\n   */\n  lineTo(x, y) {\n    this._ensurePoly();\n    const points = this._currentPoly.points;\n    const fromX = points[points.length - 2];\n    const fromY = points[points.length - 1];\n    if (fromX !== x || fromY !== y) {\n      points.push(x, y);\n    }\n    return this;\n  }\n  /**\n   * Adds an arc to the path. The arc is centered at (x, y)\n   *  position with radius `radius` starting at `startAngle` and ending at `endAngle`.\n   * @param x - The x-coordinate of the arc's center.\n   * @param y - The y-coordinate of the arc's center.\n   * @param radius - The radius of the arc.\n   * @param startAngle - The starting angle of the arc, in radians.\n   * @param endAngle - The ending angle of the arc, in radians.\n   * @param counterclockwise - Specifies whether the arc should be drawn in the anticlockwise direction. False by default.\n   * @returns The instance of the current object for chaining.\n   */\n  arc(x, y, radius, startAngle, endAngle, counterclockwise) {\n    this._ensurePoly(false);\n    const points = this._currentPoly.points;\n    buildArc(points, x, y, radius, startAngle, endAngle, counterclockwise);\n    return this;\n  }\n  /**\n   * Adds an arc to the path with the arc tangent to the line joining two specified points.\n   * The arc radius is specified by `radius`.\n   * @param x1 - The x-coordinate of the first point.\n   * @param y1 - The y-coordinate of the first point.\n   * @param x2 - The x-coordinate of the second point.\n   * @param y2 - The y-coordinate of the second point.\n   * @param radius - The radius of the arc.\n   * @returns The instance of the current object for chaining.\n   */\n  arcTo(x1, y1, x2, y2, radius) {\n    this._ensurePoly();\n    const points = this._currentPoly.points;\n    buildArcTo(points, x1, y1, x2, y2, radius);\n    return this;\n  }\n  /**\n   * Adds an SVG-style arc to the path, allowing for elliptical arcs based on the SVG spec.\n   * @param rx - The x-radius of the ellipse.\n   * @param ry - The y-radius of the ellipse.\n   * @param xAxisRotation - The rotation of the ellipse's x-axis relative\n   * to the x-axis of the coordinate system, in degrees.\n   * @param largeArcFlag - Determines if the arc should be greater than or less than 180 degrees.\n   * @param sweepFlag - Determines if the arc should be swept in a positive angle direction.\n   * @param x - The x-coordinate of the arc's end point.\n   * @param y - The y-coordinate of the arc's end point.\n   * @returns The instance of the current object for chaining.\n   */\n  arcToSvg(rx, ry, xAxisRotation, largeArcFlag, sweepFlag, x, y) {\n    const points = this._currentPoly.points;\n    buildArcToSvg(\n      points,\n      this._currentPoly.lastX,\n      this._currentPoly.lastY,\n      x,\n      y,\n      rx,\n      ry,\n      xAxisRotation,\n      largeArcFlag,\n      sweepFlag\n    );\n    return this;\n  }\n  /**\n   * Adds a cubic Bezier curve to the path.\n   * It requires three points: the first two are control points and the third one is the end point.\n   * The starting point is the last point in the current path.\n   * @param cp1x - The x-coordinate of the first control point.\n   * @param cp1y - The y-coordinate of the first control point.\n   * @param cp2x - The x-coordinate of the second control point.\n   * @param cp2y - The y-coordinate of the second control point.\n   * @param x - The x-coordinate of the end point.\n   * @param y - The y-coordinate of the end point.\n   * @param smoothness - Optional parameter to adjust the smoothness of the curve.\n   * @returns The instance of the current object for chaining.\n   */\n  bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y, smoothness) {\n    this._ensurePoly();\n    const currentPoly = this._currentPoly;\n    buildAdaptiveBezier(\n      this._currentPoly.points,\n      currentPoly.lastX,\n      currentPoly.lastY,\n      cp1x,\n      cp1y,\n      cp2x,\n      cp2y,\n      x,\n      y,\n      smoothness\n    );\n    return this;\n  }\n  /**\n   * Adds a quadratic curve to the path. It requires two points: the control point and the end point.\n   * The starting point is the last point in the current path.\n   * @param cp1x - The x-coordinate of the control point.\n   * @param cp1y - The y-coordinate of the control point.\n   * @param x - The x-coordinate of the end point.\n   * @param y - The y-coordinate of the end point.\n   * @param smoothing - Optional parameter to adjust the smoothness of the curve.\n   * @returns The instance of the current object for chaining.\n   */\n  quadraticCurveTo(cp1x, cp1y, x, y, smoothing) {\n    this._ensurePoly();\n    const currentPoly = this._currentPoly;\n    buildAdaptiveQuadratic(\n      this._currentPoly.points,\n      currentPoly.lastX,\n      currentPoly.lastY,\n      cp1x,\n      cp1y,\n      x,\n      y,\n      smoothing\n    );\n    return this;\n  }\n  /**\n   * Closes the current path by drawing a straight line back to the start.\n   * If the shape is already closed or there are no points in the path, this method does nothing.\n   * @returns The instance of the current object for chaining.\n   */\n  closePath() {\n    this.endPoly(true);\n    return this;\n  }\n  /**\n   * Adds another path to the current path. This method allows for the combination of multiple paths into one.\n   * @param path - The `GraphicsPath` object representing the path to add.\n   * @param transform - An optional `Matrix` object to apply a transformation to the path before adding it.\n   * @returns The instance of the current object for chaining.\n   */\n  addPath(path, transform) {\n    this.endPoly();\n    if (transform && !transform.isIdentity()) {\n      path = path.clone(true);\n      path.transform(transform);\n    }\n    const shapePrimitives = this.shapePrimitives;\n    const start = shapePrimitives.length;\n    for (let i = 0; i < path.instructions.length; i++) {\n      const instruction = path.instructions[i];\n      this[instruction.action](...instruction.data);\n    }\n    if (path.checkForHoles && shapePrimitives.length - start > 1) {\n      let mainShape = null;\n      for (let i = start; i < shapePrimitives.length; i++) {\n        const shapePrimitive = shapePrimitives[i];\n        if (shapePrimitive.shape.type === \"polygon\") {\n          const polygon = shapePrimitive.shape;\n          const mainPolygon = mainShape?.shape;\n          if (mainPolygon && mainPolygon.containsPolygon(polygon)) {\n            mainShape.holes || (mainShape.holes = []);\n            mainShape.holes.push(shapePrimitive);\n            shapePrimitives.copyWithin(i, i + 1);\n            shapePrimitives.length--;\n            i--;\n          } else {\n            mainShape = shapePrimitive;\n          }\n        }\n      }\n    }\n    return this;\n  }\n  /**\n   * Finalizes the drawing of the current path. Optionally, it can close the path.\n   * @param closePath - A boolean indicating whether to close the path after finishing. False by default.\n   */\n  finish(closePath = false) {\n    this.endPoly(closePath);\n  }\n  /**\n   * Draws a rectangle shape. This method adds a new rectangle path to the current drawing.\n   * @param x - The x-coordinate of the top-left corner of the rectangle.\n   * @param y - The y-coordinate of the top-left corner of the rectangle.\n   * @param w - The width of the rectangle.\n   * @param h - The height of the rectangle.\n   * @param transform - An optional `Matrix` object to apply a transformation to the rectangle.\n   * @returns The instance of the current object for chaining.\n   */\n  rect(x, y, w, h, transform) {\n    this.drawShape(new Rectangle(x, y, w, h), transform);\n    return this;\n  }\n  /**\n   * Draws a circle shape. This method adds a new circle path to the current drawing.\n   * @param x - The x-coordinate of the center of the circle.\n   * @param y - The y-coordinate of the center of the circle.\n   * @param radius - The radius of the circle.\n   * @param transform - An optional `Matrix` object to apply a transformation to the circle.\n   * @returns The instance of the current object for chaining.\n   */\n  circle(x, y, radius, transform) {\n    this.drawShape(new Circle(x, y, radius), transform);\n    return this;\n  }\n  /**\n   * Draws a polygon shape. This method allows for the creation of complex polygons by specifying a sequence of points.\n   * @param points - An array of numbers, or or an array of PointData objects eg [{x,y}, {x,y}, {x,y}]\n   * representing the x and y coordinates of the polygon's vertices, in sequence.\n   * @param close - A boolean indicating whether to close the polygon path. True by default.\n   * @param transform - An optional `Matrix` object to apply a transformation to the polygon.\n   * @returns The instance of the current object for chaining.\n   */\n  poly(points, close, transform) {\n    const polygon = new Polygon(points);\n    polygon.closePath = close;\n    this.drawShape(polygon, transform);\n    return this;\n  }\n  /**\n   * Draws a regular polygon with a specified number of sides. All sides and angles are equal.\n   * @param x - The x-coordinate of the center of the polygon.\n   * @param y - The y-coordinate of the center of the polygon.\n   * @param radius - The radius of the circumscribed circle of the polygon.\n   * @param sides - The number of sides of the polygon. Must be 3 or more.\n   * @param rotation - The rotation angle of the polygon, in radians. Zero by default.\n   * @param transform - An optional `Matrix` object to apply a transformation to the polygon.\n   * @returns The instance of the current object for chaining.\n   */\n  regularPoly(x, y, radius, sides, rotation = 0, transform) {\n    sides = Math.max(sides | 0, 3);\n    const startAngle = -1 * Math.PI / 2 + rotation;\n    const delta = Math.PI * 2 / sides;\n    const polygon = [];\n    for (let i = 0; i < sides; i++) {\n      const angle = startAngle - i * delta;\n      polygon.push(\n        x + radius * Math.cos(angle),\n        y + radius * Math.sin(angle)\n      );\n    }\n    this.poly(polygon, true, transform);\n    return this;\n  }\n  /**\n   * Draws a polygon with rounded corners.\n   * Similar to `regularPoly` but with the ability to round the corners of the polygon.\n   * @param x - The x-coordinate of the center of the polygon.\n   * @param y - The y-coordinate of the center of the polygon.\n   * @param radius - The radius of the circumscribed circle of the polygon.\n   * @param sides - The number of sides of the polygon. Must be 3 or more.\n   * @param corner - The radius of the rounding of the corners.\n   * @param rotation - The rotation angle of the polygon, in radians. Zero by default.\n   * @param smoothness - Optional parameter to adjust the smoothness of the rounding.\n   * @returns The instance of the current object for chaining.\n   */\n  roundPoly(x, y, radius, sides, corner, rotation = 0, smoothness) {\n    sides = Math.max(sides | 0, 3);\n    if (corner <= 0) {\n      return this.regularPoly(x, y, radius, sides, rotation);\n    }\n    const sideLength = radius * Math.sin(Math.PI / sides) - 1e-3;\n    corner = Math.min(corner, sideLength);\n    const startAngle = -1 * Math.PI / 2 + rotation;\n    const delta = Math.PI * 2 / sides;\n    const internalAngle = (sides - 2) * Math.PI / sides / 2;\n    for (let i = 0; i < sides; i++) {\n      const angle = i * delta + startAngle;\n      const x0 = x + radius * Math.cos(angle);\n      const y0 = y + radius * Math.sin(angle);\n      const a1 = angle + Math.PI + internalAngle;\n      const a2 = angle - Math.PI - internalAngle;\n      const x1 = x0 + corner * Math.cos(a1);\n      const y1 = y0 + corner * Math.sin(a1);\n      const x3 = x0 + corner * Math.cos(a2);\n      const y3 = y0 + corner * Math.sin(a2);\n      if (i === 0) {\n        this.moveTo(x1, y1);\n      } else {\n        this.lineTo(x1, y1);\n      }\n      this.quadraticCurveTo(x0, y0, x3, y3, smoothness);\n    }\n    return this.closePath();\n  }\n  /**\n   * Draws a shape with rounded corners. This function supports custom radius for each corner of the shape.\n   * Optionally, corners can be rounded using a quadratic curve instead of an arc, providing a different aesthetic.\n   * @param points - An array of `RoundedPoint` representing the corners of the shape to draw.\n   * A minimum of 3 points is required.\n   * @param radius - The default radius for the corners.\n   * This radius is applied to all corners unless overridden in `points`.\n   * @param useQuadratic - If set to true, rounded corners are drawn using a quadraticCurve\n   *  method instead of an arc method. Defaults to false.\n   * @param smoothness - Specifies the smoothness of the curve when `useQuadratic` is true.\n   * Higher values make the curve smoother.\n   * @returns The instance of the current object for chaining.\n   */\n  roundShape(points, radius, useQuadratic = false, smoothness) {\n    if (points.length < 3) {\n      return this;\n    }\n    if (useQuadratic) {\n      roundedShapeQuadraticCurve(this, points, radius, smoothness);\n    } else {\n      roundedShapeArc(this, points, radius);\n    }\n    return this.closePath();\n  }\n  /**\n   * Draw Rectangle with fillet corners. This is much like rounded rectangle\n   * however it support negative numbers as well for the corner radius.\n   * @param x - Upper left corner of rect\n   * @param y - Upper right corner of rect\n   * @param width - Width of rect\n   * @param height - Height of rect\n   * @param fillet - accept negative or positive values\n   */\n  filletRect(x, y, width, height, fillet) {\n    if (fillet === 0) {\n      return this.rect(x, y, width, height);\n    }\n    const maxFillet = Math.min(width, height) / 2;\n    const inset = Math.min(maxFillet, Math.max(-maxFillet, fillet));\n    const right = x + width;\n    const bottom = y + height;\n    const dir = inset < 0 ? -inset : 0;\n    const size = Math.abs(inset);\n    return this.moveTo(x, y + size).arcTo(x + dir, y + dir, x + size, y, size).lineTo(right - size, y).arcTo(right - dir, y + dir, right, y + size, size).lineTo(right, bottom - size).arcTo(right - dir, bottom - dir, x + width - size, bottom, size).lineTo(x + size, bottom).arcTo(x + dir, bottom - dir, x, bottom - size, size).closePath();\n  }\n  /**\n   * Draw Rectangle with chamfer corners. These are angled corners.\n   * @param x - Upper left corner of rect\n   * @param y - Upper right corner of rect\n   * @param width - Width of rect\n   * @param height - Height of rect\n   * @param chamfer - non-zero real number, size of corner cutout\n   * @param transform\n   */\n  chamferRect(x, y, width, height, chamfer, transform) {\n    if (chamfer <= 0) {\n      return this.rect(x, y, width, height);\n    }\n    const inset = Math.min(chamfer, Math.min(width, height) / 2);\n    const right = x + width;\n    const bottom = y + height;\n    const points = [\n      x + inset,\n      y,\n      right - inset,\n      y,\n      right,\n      y + inset,\n      right,\n      bottom - inset,\n      right - inset,\n      bottom,\n      x + inset,\n      bottom,\n      x,\n      bottom - inset,\n      x,\n      y + inset\n    ];\n    for (let i = points.length - 1; i >= 2; i -= 2) {\n      if (points[i] === points[i - 2] && points[i - 1] === points[i - 3]) {\n        points.splice(i - 1, 2);\n      }\n    }\n    return this.poly(points, true, transform);\n  }\n  /**\n   * Draws an ellipse at the specified location and with the given x and y radii.\n   * An optional transformation can be applied, allowing for rotation, scaling, and translation.\n   * @param x - The x-coordinate of the center of the ellipse.\n   * @param y - The y-coordinate of the center of the ellipse.\n   * @param radiusX - The horizontal radius of the ellipse.\n   * @param radiusY - The vertical radius of the ellipse.\n   * @param transform - An optional `Matrix` object to apply a transformation to the ellipse. This can include rotations.\n   * @returns The instance of the current object for chaining.\n   */\n  ellipse(x, y, radiusX, radiusY, transform) {\n    this.drawShape(new Ellipse(x, y, radiusX, radiusY), transform);\n    return this;\n  }\n  /**\n   * Draws a rectangle with rounded corners.\n   * The corner radius can be specified to determine how rounded the corners should be.\n   * An optional transformation can be applied, which allows for rotation, scaling, and translation of the rectangle.\n   * @param x - The x-coordinate of the top-left corner of the rectangle.\n   * @param y - The y-coordinate of the top-left corner of the rectangle.\n   * @param w - The width of the rectangle.\n   * @param h - The height of the rectangle.\n   * @param radius - The radius of the rectangle's corners. If not specified, corners will be sharp.\n   * @param transform - An optional `Matrix` object to apply a transformation to the rectangle.\n   * @returns The instance of the current object for chaining.\n   */\n  roundRect(x, y, w, h, radius, transform) {\n    this.drawShape(new RoundedRectangle(x, y, w, h, radius), transform);\n    return this;\n  }\n  /**\n   * Draws a given shape on the canvas.\n   * This is a generic method that can draw any type of shape specified by the `ShapePrimitive` parameter.\n   * An optional transformation matrix can be applied to the shape, allowing for complex transformations.\n   * @param shape - The shape to draw, defined as a `ShapePrimitive` object.\n   * @param matrix - An optional `Matrix` for transforming the shape. This can include rotations,\n   * scaling, and translations.\n   * @returns The instance of the current object for chaining.\n   */\n  drawShape(shape, matrix) {\n    this.endPoly();\n    this.shapePrimitives.push({ shape, transform: matrix });\n    return this;\n  }\n  /**\n   * Starts a new polygon path from the specified starting point.\n   * This method initializes a new polygon or ends the current one if it exists.\n   * @param x - The x-coordinate of the starting point of the new polygon.\n   * @param y - The y-coordinate of the starting point of the new polygon.\n   * @returns The instance of the current object for chaining.\n   */\n  startPoly(x, y) {\n    let currentPoly = this._currentPoly;\n    if (currentPoly) {\n      this.endPoly();\n    }\n    currentPoly = new Polygon();\n    currentPoly.points.push(x, y);\n    this._currentPoly = currentPoly;\n    return this;\n  }\n  /**\n   * Ends the current polygon path. If `closePath` is set to true,\n   * the path is closed by connecting the last point to the first one.\n   * This method finalizes the current polygon and prepares it for drawing or adding to the shape primitives.\n   * @param closePath - A boolean indicating whether to close the polygon by connecting the last point\n   *  back to the starting point. False by default.\n   * @returns The instance of the current object for chaining.\n   */\n  endPoly(closePath = false) {\n    const shape = this._currentPoly;\n    if (shape && shape.points.length > 2) {\n      shape.closePath = closePath;\n      this.shapePrimitives.push({ shape });\n    }\n    this._currentPoly = null;\n    return this;\n  }\n  _ensurePoly(start = true) {\n    if (this._currentPoly)\n      return;\n    this._currentPoly = new Polygon();\n    if (start) {\n      const lastShape = this.shapePrimitives[this.shapePrimitives.length - 1];\n      if (lastShape) {\n        let lx = lastShape.shape.x;\n        let ly = lastShape.shape.y;\n        if (lastShape.transform && !lastShape.transform.isIdentity()) {\n          const t = lastShape.transform;\n          const tempX = lx;\n          lx = t.a * lx + t.c * ly + t.tx;\n          ly = t.b * tempX + t.d * ly + t.ty;\n        }\n        this._currentPoly.points.push(lx, ly);\n      } else {\n        this._currentPoly.points.push(0, 0);\n      }\n    }\n  }\n  /** Builds the path. */\n  buildPath() {\n    const path = this._graphicsPath2D;\n    this.shapePrimitives.length = 0;\n    this._currentPoly = null;\n    for (let i = 0; i < path.instructions.length; i++) {\n      const instruction = path.instructions[i];\n      this[instruction.action](...instruction.data);\n    }\n    this.finish();\n  }\n  /** Gets the bounds of the path. */\n  get bounds() {\n    const bounds = this._bounds;\n    bounds.clear();\n    const shapePrimitives = this.shapePrimitives;\n    for (let i = 0; i < shapePrimitives.length; i++) {\n      const shapePrimitive = shapePrimitives[i];\n      const boundsRect = shapePrimitive.shape.getBounds(tempRectangle);\n      if (shapePrimitive.transform) {\n        bounds.addRect(boundsRect, shapePrimitive.transform);\n      } else {\n        bounds.addRect(boundsRect);\n      }\n    }\n    return bounds;\n  }\n}\n\nexport { ShapePath };\n//# sourceMappingURL=ShapePath.mjs.map\n","import { Point } from '../../../../maths/point/Point.mjs';\nimport { uid } from '../../../../utils/data/uid.mjs';\nimport { warn } from '../../../../utils/logging/warn.mjs';\nimport { parseSVGPath } from '../svg/parseSVGPath.mjs';\nimport { ShapePath } from './ShapePath.mjs';\n\n\"use strict\";\nclass GraphicsPath {\n  /**\n   * Creates a `GraphicsPath` instance optionally from an SVG path string or an array of `PathInstruction`.\n   * @param instructions - An SVG path string or an array of `PathInstruction` objects.\n   * @param signed\n   */\n  constructor(instructions, signed = false) {\n    this.instructions = [];\n    /** unique id for this graphics path */\n    this.uid = uid(\"graphicsPath\");\n    this._dirty = true;\n    this.checkForHoles = signed;\n    if (typeof instructions === \"string\") {\n      parseSVGPath(instructions, this);\n    } else {\n      this.instructions = instructions?.slice() ?? [];\n    }\n  }\n  /**\n   * Provides access to the internal shape path, ensuring it is up-to-date with the current instructions.\n   * @returns The `ShapePath` instance associated with this `GraphicsPath`.\n   */\n  get shapePath() {\n    if (!this._shapePath) {\n      this._shapePath = new ShapePath(this);\n    }\n    if (this._dirty) {\n      this._dirty = false;\n      this._shapePath.buildPath();\n    }\n    return this._shapePath;\n  }\n  /**\n   * Adds another `GraphicsPath` to this path, optionally applying a transformation.\n   * @param path - The `GraphicsPath` to add.\n   * @param transform - An optional transformation to apply to the added path.\n   * @returns The instance of the current object for chaining.\n   */\n  addPath(path, transform) {\n    path = path.clone();\n    this.instructions.push({ action: \"addPath\", data: [path, transform] });\n    this._dirty = true;\n    return this;\n  }\n  arc(...args) {\n    this.instructions.push({ action: \"arc\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  arcTo(...args) {\n    this.instructions.push({ action: \"arcTo\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  arcToSvg(...args) {\n    this.instructions.push({ action: \"arcToSvg\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  bezierCurveTo(...args) {\n    this.instructions.push({ action: \"bezierCurveTo\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  /**\n   * Adds a cubic Bezier curve to the path.\n   * It requires two points: the second control point and the end point. The first control point is assumed to be\n   * The starting point is the last point in the current path.\n   * @param cp2x - The x-coordinate of the second control point.\n   * @param cp2y - The y-coordinate of the second control point.\n   * @param x - The x-coordinate of the end point.\n   * @param y - The y-coordinate of the end point.\n   * @param smoothness - Optional parameter to adjust the smoothness of the curve.\n   * @returns The instance of the current object for chaining.\n   */\n  bezierCurveToShort(cp2x, cp2y, x, y, smoothness) {\n    const last = this.instructions[this.instructions.length - 1];\n    const lastPoint = this.getLastPoint(Point.shared);\n    let cp1x = 0;\n    let cp1y = 0;\n    if (!last || last.action !== \"bezierCurveTo\") {\n      cp1x = lastPoint.x;\n      cp1y = lastPoint.y;\n    } else {\n      cp1x = last.data[2];\n      cp1y = last.data[3];\n      const currentX = lastPoint.x;\n      const currentY = lastPoint.y;\n      cp1x = currentX + (currentX - cp1x);\n      cp1y = currentY + (currentY - cp1y);\n    }\n    this.instructions.push({ action: \"bezierCurveTo\", data: [cp1x, cp1y, cp2x, cp2y, x, y, smoothness] });\n    this._dirty = true;\n    return this;\n  }\n  /**\n   * Closes the current path by drawing a straight line back to the start.\n   * If the shape is already closed or there are no points in the path, this method does nothing.\n   * @returns The instance of the current object for chaining.\n   */\n  closePath() {\n    this.instructions.push({ action: \"closePath\", data: [] });\n    this._dirty = true;\n    return this;\n  }\n  ellipse(...args) {\n    this.instructions.push({ action: \"ellipse\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  lineTo(...args) {\n    this.instructions.push({ action: \"lineTo\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  moveTo(...args) {\n    this.instructions.push({ action: \"moveTo\", data: args });\n    return this;\n  }\n  quadraticCurveTo(...args) {\n    this.instructions.push({ action: \"quadraticCurveTo\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  /**\n   * Adds a quadratic curve to the path. It uses the previous point as the control point.\n   * @param x - The x-coordinate of the end point.\n   * @param y - The y-coordinate of the end point.\n   * @param smoothness - Optional parameter to adjust the smoothness of the curve.\n   * @returns The instance of the current object for chaining.\n   */\n  quadraticCurveToShort(x, y, smoothness) {\n    const last = this.instructions[this.instructions.length - 1];\n    const lastPoint = this.getLastPoint(Point.shared);\n    let cpx1 = 0;\n    let cpy1 = 0;\n    if (!last || last.action !== \"quadraticCurveTo\") {\n      cpx1 = lastPoint.x;\n      cpy1 = lastPoint.y;\n    } else {\n      cpx1 = last.data[0];\n      cpy1 = last.data[1];\n      const currentX = lastPoint.x;\n      const currentY = lastPoint.y;\n      cpx1 = currentX + (currentX - cpx1);\n      cpy1 = currentY + (currentY - cpy1);\n    }\n    this.instructions.push({ action: \"quadraticCurveTo\", data: [cpx1, cpy1, x, y, smoothness] });\n    this._dirty = true;\n    return this;\n  }\n  /**\n   * Draws a rectangle shape. This method adds a new rectangle path to the current drawing.\n   * @param x - The x-coordinate of the top-left corner of the rectangle.\n   * @param y - The y-coordinate of the top-left corner of the rectangle.\n   * @param w - The width of the rectangle.\n   * @param h - The height of the rectangle.\n   * @param transform - An optional `Matrix` object to apply a transformation to the rectangle.\n   * @returns The instance of the current object for chaining.\n   */\n  rect(x, y, w, h, transform) {\n    this.instructions.push({ action: \"rect\", data: [x, y, w, h, transform] });\n    this._dirty = true;\n    return this;\n  }\n  /**\n   * Draws a circle shape. This method adds a new circle path to the current drawing.\n   * @param x - The x-coordinate of the center of the circle.\n   * @param y - The y-coordinate of the center of the circle.\n   * @param radius - The radius of the circle.\n   * @param transform - An optional `Matrix` object to apply a transformation to the circle.\n   * @returns The instance of the current object for chaining.\n   */\n  circle(x, y, radius, transform) {\n    this.instructions.push({ action: \"circle\", data: [x, y, radius, transform] });\n    this._dirty = true;\n    return this;\n  }\n  roundRect(...args) {\n    this.instructions.push({ action: \"roundRect\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  poly(...args) {\n    this.instructions.push({ action: \"poly\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  regularPoly(...args) {\n    this.instructions.push({ action: \"regularPoly\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  roundPoly(...args) {\n    this.instructions.push({ action: \"roundPoly\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  roundShape(...args) {\n    this.instructions.push({ action: \"roundShape\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  filletRect(...args) {\n    this.instructions.push({ action: \"filletRect\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  chamferRect(...args) {\n    this.instructions.push({ action: \"chamferRect\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  /**\n   * Draws a star shape centered at a specified location. This method allows for the creation\n   *  of stars with a variable number of points, outer radius, optional inner radius, and rotation.\n   * The star is drawn as a closed polygon with alternating outer and inner vertices to create the star's points.\n   * An optional transformation can be applied to scale, rotate, or translate the star as needed.\n   * @param x - The x-coordinate of the center of the star.\n   * @param y - The y-coordinate of the center of the star.\n   * @param points - The number of points of the star.\n   * @param radius - The outer radius of the star (distance from the center to the outer points).\n   * @param innerRadius - Optional. The inner radius of the star\n   * (distance from the center to the inner points between the outer points).\n   * If not provided, defaults to half of the `radius`.\n   * @param rotation - Optional. The rotation of the star in radians, where 0 is aligned with the y-axis.\n   * Defaults to 0, meaning one point is directly upward.\n   * @param transform - An optional `Matrix` object to apply a transformation to the star.\n   * This can include rotations, scaling, and translations.\n   * @returns The instance of the current object for chaining further drawing commands.\n   */\n  // eslint-disable-next-line max-len\n  star(x, y, points, radius, innerRadius, rotation, transform) {\n    innerRadius || (innerRadius = radius / 2);\n    const startAngle = -1 * Math.PI / 2 + rotation;\n    const len = points * 2;\n    const delta = Math.PI * 2 / len;\n    const polygon = [];\n    for (let i = 0; i < len; i++) {\n      const r = i % 2 ? innerRadius : radius;\n      const angle = i * delta + startAngle;\n      polygon.push(\n        x + r * Math.cos(angle),\n        y + r * Math.sin(angle)\n      );\n    }\n    this.poly(polygon, true, transform);\n    return this;\n  }\n  /**\n   * Creates a copy of the current `GraphicsPath` instance. This method supports both shallow and deep cloning.\n   * A shallow clone copies the reference of the instructions array, while a deep clone creates a new array and\n   * copies each instruction individually, ensuring that modifications to the instructions of the cloned `GraphicsPath`\n   * do not affect the original `GraphicsPath` and vice versa.\n   * @param deep - A boolean flag indicating whether the clone should be deep.\n   * @returns A new `GraphicsPath` instance that is a clone of the current instance.\n   */\n  clone(deep = false) {\n    const newGraphicsPath2D = new GraphicsPath();\n    newGraphicsPath2D.checkForHoles = this.checkForHoles;\n    if (!deep) {\n      newGraphicsPath2D.instructions = this.instructions.slice();\n    } else {\n      for (let i = 0; i < this.instructions.length; i++) {\n        const instruction = this.instructions[i];\n        newGraphicsPath2D.instructions.push({ action: instruction.action, data: instruction.data.slice() });\n      }\n    }\n    return newGraphicsPath2D;\n  }\n  clear() {\n    this.instructions.length = 0;\n    this._dirty = true;\n    return this;\n  }\n  /**\n   * Applies a transformation matrix to all drawing instructions within the `GraphicsPath`.\n   * This method enables the modification of the path's geometry according to the provided\n   * transformation matrix, which can include translations, rotations, scaling, and skewing.\n   *\n   * Each drawing instruction in the path is updated to reflect the transformation,\n   * ensuring the visual representation of the path is consistent with the applied matrix.\n   *\n   * Note: The transformation is applied directly to the coordinates and control points of the drawing instructions,\n   * not to the path as a whole. This means the transformation's effects are baked into the individual instructions,\n   * allowing for fine-grained control over the path's appearance.\n   * @param matrix - A `Matrix` object representing the transformation to apply.\n   * @returns The instance of the current object for chaining further operations.\n   */\n  transform(matrix) {\n    if (matrix.isIdentity())\n      return this;\n    const a = matrix.a;\n    const b = matrix.b;\n    const c = matrix.c;\n    const d = matrix.d;\n    const tx = matrix.tx;\n    const ty = matrix.ty;\n    let x = 0;\n    let y = 0;\n    let cpx1 = 0;\n    let cpy1 = 0;\n    let cpx2 = 0;\n    let cpy2 = 0;\n    let rx = 0;\n    let ry = 0;\n    for (let i = 0; i < this.instructions.length; i++) {\n      const instruction = this.instructions[i];\n      const data = instruction.data;\n      switch (instruction.action) {\n        case \"moveTo\":\n        case \"lineTo\":\n          x = data[0];\n          y = data[1];\n          data[0] = a * x + c * y + tx;\n          data[1] = b * x + d * y + ty;\n          break;\n        case \"bezierCurveTo\":\n          cpx1 = data[0];\n          cpy1 = data[1];\n          cpx2 = data[2];\n          cpy2 = data[3];\n          x = data[4];\n          y = data[5];\n          data[0] = a * cpx1 + c * cpy1 + tx;\n          data[1] = b * cpx1 + d * cpy1 + ty;\n          data[2] = a * cpx2 + c * cpy2 + tx;\n          data[3] = b * cpx2 + d * cpy2 + ty;\n          data[4] = a * x + c * y + tx;\n          data[5] = b * x + d * y + ty;\n          break;\n        case \"quadraticCurveTo\":\n          cpx1 = data[0];\n          cpy1 = data[1];\n          x = data[2];\n          y = data[3];\n          data[0] = a * cpx1 + c * cpy1 + tx;\n          data[1] = b * cpx1 + d * cpy1 + ty;\n          data[2] = a * x + c * y + tx;\n          data[3] = b * x + d * y + ty;\n          break;\n        case \"arcToSvg\":\n          x = data[5];\n          y = data[6];\n          rx = data[0];\n          ry = data[1];\n          data[0] = a * rx + c * ry;\n          data[1] = b * rx + d * ry;\n          data[5] = a * x + c * y + tx;\n          data[6] = b * x + d * y + ty;\n          break;\n        case \"circle\":\n          data[4] = adjustTransform(data[3], matrix);\n          break;\n        case \"rect\":\n          data[4] = adjustTransform(data[4], matrix);\n          break;\n        case \"ellipse\":\n          data[8] = adjustTransform(data[8], matrix);\n          break;\n        case \"roundRect\":\n          data[5] = adjustTransform(data[5], matrix);\n          break;\n        case \"addPath\":\n          data[0].transform(matrix);\n          break;\n        case \"poly\":\n          data[2] = adjustTransform(data[2], matrix);\n          break;\n        default:\n          warn(\"unknown transform action\", instruction.action);\n          break;\n      }\n    }\n    this._dirty = true;\n    return this;\n  }\n  get bounds() {\n    return this.shapePath.bounds;\n  }\n  /**\n   * Retrieves the last point from the current drawing instructions in the `GraphicsPath`.\n   * This method is useful for operations that depend on the path's current endpoint,\n   * such as connecting subsequent shapes or paths. It supports various drawing instructions,\n   * ensuring the last point's position is accurately determined regardless of the path's complexity.\n   *\n   * If the last instruction is a `closePath`, the method iterates backward through the instructions\n   *  until it finds an actionable instruction that defines a point (e.g., `moveTo`, `lineTo`,\n   * `quadraticCurveTo`, etc.). For compound paths added via `addPath`, it recursively retrieves\n   * the last point from the nested path.\n   * @param out - A `Point` object where the last point's coordinates will be stored.\n   * This object is modified directly to contain the result.\n   * @returns The `Point` object containing the last point's coordinates.\n   */\n  getLastPoint(out) {\n    let index = this.instructions.length - 1;\n    let lastInstruction = this.instructions[index];\n    if (!lastInstruction) {\n      out.x = 0;\n      out.y = 0;\n      return out;\n    }\n    while (lastInstruction.action === \"closePath\") {\n      index--;\n      if (index < 0) {\n        out.x = 0;\n        out.y = 0;\n        return out;\n      }\n      lastInstruction = this.instructions[index];\n    }\n    switch (lastInstruction.action) {\n      case \"moveTo\":\n      case \"lineTo\":\n        out.x = lastInstruction.data[0];\n        out.y = lastInstruction.data[1];\n        break;\n      case \"quadraticCurveTo\":\n        out.x = lastInstruction.data[2];\n        out.y = lastInstruction.data[3];\n        break;\n      case \"bezierCurveTo\":\n        out.x = lastInstruction.data[4];\n        out.y = lastInstruction.data[5];\n        break;\n      case \"arc\":\n      case \"arcToSvg\":\n        out.x = lastInstruction.data[5];\n        out.y = lastInstruction.data[6];\n        break;\n      case \"addPath\":\n        lastInstruction.data[0].getLastPoint(out);\n        break;\n    }\n    return out;\n  }\n}\nfunction adjustTransform(currentMatrix, transform) {\n  if (currentMatrix) {\n    return currentMatrix.prepend(transform);\n  }\n  return transform.clone();\n}\n\nexport { GraphicsPath };\n//# sourceMappingURL=GraphicsPath.mjs.map\n","\"use strict\";\nfunction parseSVGFloatAttribute(svg, id, defaultValue) {\n  const value = svg.getAttribute(id);\n  return value ? Number(value) : defaultValue;\n}\n\nexport { parseSVGFloatAttribute };\n//# sourceMappingURL=parseSVGFloatAttribute.mjs.map\n","import { Color } from '../../../../color/Color.mjs';\nimport { warn } from '../../../../utils/logging/warn.mjs';\nimport { FillGradient } from '../fill/FillGradient.mjs';\nimport { parseSVGFloatAttribute } from './parseSVGFloatAttribute.mjs';\n\n\"use strict\";\nfunction parseSVGDefinitions(svg, session) {\n  const definitions = svg.querySelectorAll(\"defs\");\n  for (let i = 0; i < definitions.length; i++) {\n    const definition = definitions[i];\n    for (let j = 0; j < definition.children.length; j++) {\n      const child = definition.children[j];\n      switch (child.nodeName.toLowerCase()) {\n        case \"lineargradient\":\n          session.defs[child.id] = parseLinearGradient(child);\n          break;\n        case \"radialgradient\":\n          session.defs[child.id] = parseRadialGradient(child);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n}\nfunction parseLinearGradient(child) {\n  const x0 = parseSVGFloatAttribute(child, \"x1\", 0);\n  const y0 = parseSVGFloatAttribute(child, \"y1\", 0);\n  const x1 = parseSVGFloatAttribute(child, \"x2\", 1);\n  const y1 = parseSVGFloatAttribute(child, \"y2\", 0);\n  const gradientUnit = child.getAttribute(\"gradientUnits\") || \"objectBoundingBox\";\n  const gradient = new FillGradient(\n    x0,\n    y0,\n    x1,\n    y1,\n    gradientUnit === \"objectBoundingBox\" ? \"local\" : \"global\"\n  );\n  for (let k = 0; k < child.children.length; k++) {\n    const stop = child.children[k];\n    const offset = parseSVGFloatAttribute(stop, \"offset\", 0);\n    const color = Color.shared.setValue(stop.getAttribute(\"stop-color\")).toNumber();\n    gradient.addColorStop(offset, color);\n  }\n  return gradient;\n}\nfunction parseRadialGradient(_child) {\n  warn(\"[SVG Parser] Radial gradients are not yet supported\");\n  return new FillGradient(0, 0, 1, 0);\n}\n\nexport { parseSVGDefinitions };\n//# sourceMappingURL=parseSVGDefinitions.mjs.map\n","\"use strict\";\nfunction extractSvgUrlId(url) {\n  const match = url.match(/url\\s*\\(\\s*['\"]?\\s*#([^'\"\\s)]+)\\s*['\"]?\\s*\\)/i);\n  return match ? match[1] : \"\";\n}\n\nexport { extractSvgUrlId };\n//# sourceMappingURL=extractSvgUrlId.mjs.map\n","import { Color } from '../../../../color/Color.mjs';\nimport { extractSvgUrlId } from './utils/extractSvgUrlId.mjs';\n\n\"use strict\";\nconst styleAttributes = {\n  // Fill properties\n  fill: { type: \"paint\", default: 0 },\n  // Fill color/gradient\n  \"fill-opacity\": { type: \"number\", default: 1 },\n  // Fill transparency\n  // Stroke properties\n  stroke: { type: \"paint\", default: 0 },\n  // Stroke color/gradient\n  \"stroke-width\": { type: \"number\", default: 1 },\n  // Width of stroke\n  \"stroke-opacity\": { type: \"number\", default: 1 },\n  // Stroke transparency\n  \"stroke-linecap\": { type: \"string\", default: \"butt\" },\n  // End cap style: butt, round, square\n  \"stroke-linejoin\": { type: \"string\", default: \"miter\" },\n  // Join style: miter, round, bevel\n  \"stroke-miterlimit\": { type: \"number\", default: 10 },\n  // Limit on miter join sharpness\n  \"stroke-dasharray\": { type: \"string\", default: \"none\" },\n  // Dash pattern\n  \"stroke-dashoffset\": { type: \"number\", default: 0 },\n  // Offset for dash pattern\n  // Global properties\n  opacity: { type: \"number\", default: 1 }\n  // Overall opacity\n};\nfunction parseSVGStyle(svg, session) {\n  const style = svg.getAttribute(\"style\");\n  const strokeStyle = {};\n  const fillStyle = {};\n  const result = {\n    strokeStyle,\n    fillStyle,\n    useFill: false,\n    useStroke: false\n  };\n  for (const key in styleAttributes) {\n    const attribute = svg.getAttribute(key);\n    if (attribute) {\n      parseAttribute(session, result, key, attribute.trim());\n    }\n  }\n  if (style) {\n    const styleParts = style.split(\";\");\n    for (let i = 0; i < styleParts.length; i++) {\n      const stylePart = styleParts[i].trim();\n      const [key, value] = stylePart.split(\":\");\n      if (styleAttributes[key]) {\n        parseAttribute(session, result, key, value.trim());\n      }\n    }\n  }\n  return {\n    strokeStyle: result.useStroke ? strokeStyle : null,\n    fillStyle: result.useFill ? fillStyle : null,\n    useFill: result.useFill,\n    useStroke: result.useStroke\n  };\n}\nfunction parseAttribute(session, result, id, value) {\n  switch (id) {\n    case \"stroke\":\n      if (value !== \"none\") {\n        if (value.startsWith(\"url(\")) {\n          const id2 = extractSvgUrlId(value);\n          result.strokeStyle.fill = session.defs[id2];\n        } else {\n          result.strokeStyle.color = Color.shared.setValue(value).toNumber();\n        }\n        result.useStroke = true;\n      }\n      break;\n    case \"stroke-width\":\n      result.strokeStyle.width = Number(value);\n      break;\n    case \"fill\":\n      if (value !== \"none\") {\n        if (value.startsWith(\"url(\")) {\n          const id2 = extractSvgUrlId(value);\n          result.fillStyle.fill = session.defs[id2];\n        } else {\n          result.fillStyle.color = Color.shared.setValue(value).toNumber();\n        }\n        result.useFill = true;\n      }\n      break;\n    case \"fill-opacity\":\n      result.fillStyle.alpha = Number(value);\n      break;\n    case \"stroke-opacity\":\n      result.strokeStyle.alpha = Number(value);\n      break;\n    case \"opacity\":\n      result.fillStyle.alpha = Number(value);\n      result.strokeStyle.alpha = Number(value);\n      break;\n  }\n}\n\nexport { parseAttribute, parseSVGStyle, styleAttributes };\n//# sourceMappingURL=parseSVGStyle.mjs.map\n","import { warn } from '../../../../utils/logging/warn.mjs';\nimport { GraphicsPath } from '../path/GraphicsPath.mjs';\nimport { parseSVGDefinitions } from './parseSVGDefinitions.mjs';\nimport { parseSVGFloatAttribute } from './parseSVGFloatAttribute.mjs';\nimport { parseSVGStyle } from './parseSVGStyle.mjs';\n\n\"use strict\";\nfunction SVGParser(svg, graphicsContext) {\n  if (typeof svg === \"string\") {\n    const div = document.createElement(\"div\");\n    div.innerHTML = svg.trim();\n    svg = div.querySelector(\"svg\");\n  }\n  const session = {\n    context: graphicsContext,\n    defs: {},\n    path: new GraphicsPath()\n  };\n  parseSVGDefinitions(svg, session);\n  const children = svg.children;\n  const { fillStyle, strokeStyle } = parseSVGStyle(svg, session);\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    if (child.nodeName.toLowerCase() === \"defs\")\n      continue;\n    renderChildren(child, session, fillStyle, strokeStyle);\n  }\n  return graphicsContext;\n}\nfunction renderChildren(svg, session, fillStyle, strokeStyle) {\n  const children = svg.children;\n  const { fillStyle: f1, strokeStyle: s1 } = parseSVGStyle(svg, session);\n  if (f1 && fillStyle) {\n    fillStyle = { ...fillStyle, ...f1 };\n  } else if (f1) {\n    fillStyle = f1;\n  }\n  if (s1 && strokeStyle) {\n    strokeStyle = { ...strokeStyle, ...s1 };\n  } else if (s1) {\n    strokeStyle = s1;\n  }\n  const noStyle = !fillStyle && !strokeStyle;\n  if (noStyle) {\n    fillStyle = { color: 0 };\n  }\n  let x;\n  let y;\n  let x1;\n  let y1;\n  let x2;\n  let y2;\n  let cx;\n  let cy;\n  let r;\n  let rx;\n  let ry;\n  let points;\n  let pointsString;\n  let d;\n  let graphicsPath;\n  let width;\n  let height;\n  switch (svg.nodeName.toLowerCase()) {\n    case \"path\":\n      d = svg.getAttribute(\"d\");\n      if (svg.getAttribute(\"fill-rule\") === \"evenodd\") {\n        warn(\"SVG Evenodd fill rule not supported, your svg may render incorrectly\");\n      }\n      graphicsPath = new GraphicsPath(d, true);\n      session.context.path(graphicsPath);\n      if (fillStyle)\n        session.context.fill(fillStyle);\n      if (strokeStyle)\n        session.context.stroke(strokeStyle);\n      break;\n    case \"circle\":\n      cx = parseSVGFloatAttribute(svg, \"cx\", 0);\n      cy = parseSVGFloatAttribute(svg, \"cy\", 0);\n      r = parseSVGFloatAttribute(svg, \"r\", 0);\n      session.context.ellipse(cx, cy, r, r);\n      if (fillStyle)\n        session.context.fill(fillStyle);\n      if (strokeStyle)\n        session.context.stroke(strokeStyle);\n      break;\n    case \"rect\":\n      x = parseSVGFloatAttribute(svg, \"x\", 0);\n      y = parseSVGFloatAttribute(svg, \"y\", 0);\n      width = parseSVGFloatAttribute(svg, \"width\", 0);\n      height = parseSVGFloatAttribute(svg, \"height\", 0);\n      rx = parseSVGFloatAttribute(svg, \"rx\", 0);\n      ry = parseSVGFloatAttribute(svg, \"ry\", 0);\n      if (rx || ry) {\n        session.context.roundRect(x, y, width, height, rx || ry);\n      } else {\n        session.context.rect(x, y, width, height);\n      }\n      if (fillStyle)\n        session.context.fill(fillStyle);\n      if (strokeStyle)\n        session.context.stroke(strokeStyle);\n      break;\n    case \"ellipse\":\n      cx = parseSVGFloatAttribute(svg, \"cx\", 0);\n      cy = parseSVGFloatAttribute(svg, \"cy\", 0);\n      rx = parseSVGFloatAttribute(svg, \"rx\", 0);\n      ry = parseSVGFloatAttribute(svg, \"ry\", 0);\n      session.context.beginPath();\n      session.context.ellipse(cx, cy, rx, ry);\n      if (fillStyle)\n        session.context.fill(fillStyle);\n      if (strokeStyle)\n        session.context.stroke(strokeStyle);\n      break;\n    case \"line\":\n      x1 = parseSVGFloatAttribute(svg, \"x1\", 0);\n      y1 = parseSVGFloatAttribute(svg, \"y1\", 0);\n      x2 = parseSVGFloatAttribute(svg, \"x2\", 0);\n      y2 = parseSVGFloatAttribute(svg, \"y2\", 0);\n      session.context.beginPath();\n      session.context.moveTo(x1, y1);\n      session.context.lineTo(x2, y2);\n      if (strokeStyle)\n        session.context.stroke(strokeStyle);\n      break;\n    case \"polygon\":\n      pointsString = svg.getAttribute(\"points\");\n      points = pointsString.match(/\\d+/g).map((n) => parseInt(n, 10));\n      session.context.poly(points, true);\n      if (fillStyle)\n        session.context.fill(fillStyle);\n      if (strokeStyle)\n        session.context.stroke(strokeStyle);\n      break;\n    case \"polyline\":\n      pointsString = svg.getAttribute(\"points\");\n      points = pointsString.match(/\\d+/g).map((n) => parseInt(n, 10));\n      session.context.poly(points, false);\n      if (strokeStyle)\n        session.context.stroke(strokeStyle);\n      break;\n    case \"g\":\n    case \"svg\":\n      break;\n    default: {\n      warn(`[SVG parser] <${svg.nodeName}> elements unsupported`);\n      break;\n    }\n  }\n  if (noStyle) {\n    fillStyle = null;\n  }\n  for (let i = 0; i < children.length; i++) {\n    renderChildren(children[i], session, fillStyle, strokeStyle);\n  }\n}\n\nexport { SVGParser };\n//# sourceMappingURL=SVGParser.mjs.map\n","import { Color } from '../../../../color/Color.mjs';\nimport { Texture } from '../../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { FillGradient } from '../fill/FillGradient.mjs';\nimport { FillPattern } from '../fill/FillPattern.mjs';\n\n\"use strict\";\nfunction isColorLike(value) {\n  return Color.isColorLike(value);\n}\nfunction isFillPattern(value) {\n  return value instanceof FillPattern;\n}\nfunction isFillGradient(value) {\n  return value instanceof FillGradient;\n}\nfunction isTexture(value) {\n  return value instanceof Texture;\n}\nfunction handleColorLike(fill, value, defaultStyle) {\n  const temp = Color.shared.setValue(value ?? 0);\n  fill.color = temp.toNumber();\n  fill.alpha = temp.alpha === 1 ? defaultStyle.alpha : temp.alpha;\n  fill.texture = Texture.WHITE;\n  return { ...defaultStyle, ...fill };\n}\nfunction handleTexture(fill, value, defaultStyle) {\n  fill.texture = value;\n  return { ...defaultStyle, ...fill };\n}\nfunction handleFillPattern(fill, value, defaultStyle) {\n  fill.fill = value;\n  fill.color = 16777215;\n  fill.texture = value.texture;\n  fill.matrix = value.transform;\n  return { ...defaultStyle, ...fill };\n}\nfunction handleFillGradient(fill, value, defaultStyle) {\n  value.buildGradient();\n  fill.fill = value;\n  fill.color = 16777215;\n  fill.texture = value.texture;\n  fill.matrix = value.transform;\n  fill.textureSpace = value.textureSpace;\n  return { ...defaultStyle, ...fill };\n}\nfunction handleFillObject(value, defaultStyle) {\n  const style = { ...defaultStyle, ...value };\n  const color = Color.shared.setValue(style.color);\n  style.alpha *= color.alpha;\n  style.color = color.toNumber();\n  return style;\n}\nfunction toFillStyle(value, defaultStyle) {\n  if (value === void 0 || value === null) {\n    return null;\n  }\n  const fill = {};\n  const objectStyle = value;\n  if (isColorLike(value)) {\n    return handleColorLike(fill, value, defaultStyle);\n  } else if (isTexture(value)) {\n    return handleTexture(fill, value, defaultStyle);\n  } else if (isFillPattern(value)) {\n    return handleFillPattern(fill, value, defaultStyle);\n  } else if (isFillGradient(value)) {\n    return handleFillGradient(fill, value, defaultStyle);\n  } else if (objectStyle.fill && isFillPattern(objectStyle.fill)) {\n    return handleFillPattern(objectStyle, objectStyle.fill, defaultStyle);\n  } else if (objectStyle.fill && isFillGradient(objectStyle.fill)) {\n    return handleFillGradient(objectStyle, objectStyle.fill, defaultStyle);\n  }\n  return handleFillObject(objectStyle, defaultStyle);\n}\nfunction toStrokeStyle(value, defaultStyle) {\n  const { width, alignment, miterLimit, cap, join, pixelLine, ...rest } = defaultStyle;\n  const fill = toFillStyle(value, rest);\n  if (!fill) {\n    return null;\n  }\n  return {\n    width,\n    alignment,\n    miterLimit,\n    cap,\n    join,\n    pixelLine,\n    ...fill\n  };\n}\n\nexport { toFillStyle, toStrokeStyle };\n//# sourceMappingURL=convertFillInputToFillStyle.mjs.map\n","import EventEmitter from 'eventemitter3';\nimport { Color } from '../../../color/Color.mjs';\nimport { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { Point } from '../../../maths/point/Point.mjs';\nimport { Texture } from '../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { uid } from '../../../utils/data/uid.mjs';\nimport { deprecation, v8_0_0 } from '../../../utils/logging/deprecation.mjs';\nimport { Bounds } from '../../container/bounds/Bounds.mjs';\nimport { GraphicsPath } from './path/GraphicsPath.mjs';\nimport { SVGParser } from './svg/SVGParser.mjs';\nimport { toFillStyle, toStrokeStyle } from './utils/convertFillInputToFillStyle.mjs';\n\n\"use strict\";\nconst tmpPoint = new Point();\nconst tempMatrix = new Matrix();\nconst _GraphicsContext = class _GraphicsContext extends EventEmitter {\n  constructor() {\n    super(...arguments);\n    /** unique id for this graphics context */\n    this.uid = uid(\"graphicsContext\");\n    this.dirty = true;\n    this.batchMode = \"auto\";\n    this.instructions = [];\n    this._activePath = new GraphicsPath();\n    this._transform = new Matrix();\n    this._fillStyle = { ..._GraphicsContext.defaultFillStyle };\n    this._strokeStyle = { ..._GraphicsContext.defaultStrokeStyle };\n    this._stateStack = [];\n    this._tick = 0;\n    this._bounds = new Bounds();\n    this._boundsDirty = true;\n  }\n  /**\n   * Creates a new GraphicsContext object that is a clone of this instance, copying all properties,\n   * including the current drawing state, transformations, styles, and instructions.\n   * @returns A new GraphicsContext instance with the same properties and state as this one.\n   */\n  clone() {\n    const clone = new _GraphicsContext();\n    clone.batchMode = this.batchMode;\n    clone.instructions = this.instructions.slice();\n    clone._activePath = this._activePath.clone();\n    clone._transform = this._transform.clone();\n    clone._fillStyle = { ...this._fillStyle };\n    clone._strokeStyle = { ...this._strokeStyle };\n    clone._stateStack = this._stateStack.slice();\n    clone._bounds = this._bounds.clone();\n    clone._boundsDirty = true;\n    return clone;\n  }\n  /**\n   * The current fill style of the graphics context. This can be a color, gradient, pattern, or a more complex style defined by a FillStyle object.\n   */\n  get fillStyle() {\n    return this._fillStyle;\n  }\n  set fillStyle(value) {\n    this._fillStyle = toFillStyle(value, _GraphicsContext.defaultFillStyle);\n  }\n  /**\n   * The current stroke style of the graphics context. Similar to fill styles, stroke styles can encompass colors, gradients, patterns, or more detailed configurations via a StrokeStyle object.\n   */\n  get strokeStyle() {\n    return this._strokeStyle;\n  }\n  set strokeStyle(value) {\n    this._strokeStyle = toStrokeStyle(value, _GraphicsContext.defaultStrokeStyle);\n  }\n  /**\n   * Sets the current fill style of the graphics context. The fill style can be a color, gradient,\n   * pattern, or a more complex style defined by a FillStyle object.\n   * @param style - The fill style to apply. This can be a simple color, a gradient or pattern object,\n   *                or a FillStyle or ConvertedFillStyle object.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  setFillStyle(style) {\n    this._fillStyle = toFillStyle(style, _GraphicsContext.defaultFillStyle);\n    return this;\n  }\n  /**\n   * Sets the current stroke style of the graphics context. Similar to fill styles, stroke styles can\n   * encompass colors, gradients, patterns, or more detailed configurations via a StrokeStyle object.\n   * @param style - The stroke style to apply. Can be defined as a color, a gradient or pattern,\n   *                or a StrokeStyle or ConvertedStrokeStyle object.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  setStrokeStyle(style) {\n    this._strokeStyle = toFillStyle(style, _GraphicsContext.defaultStrokeStyle);\n    return this;\n  }\n  texture(texture, tint, dx, dy, dw, dh) {\n    this.instructions.push({\n      action: \"texture\",\n      data: {\n        image: texture,\n        dx: dx || 0,\n        dy: dy || 0,\n        dw: dw || texture.frame.width,\n        dh: dh || texture.frame.height,\n        transform: this._transform.clone(),\n        alpha: this._fillStyle.alpha,\n        style: tint ? Color.shared.setValue(tint).toNumber() : 16777215\n      }\n    });\n    this.onUpdate();\n    return this;\n  }\n  /**\n   * Resets the current path. Any previous path and its commands are discarded and a new path is\n   * started. This is typically called before beginning a new shape or series of drawing commands.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  beginPath() {\n    this._activePath = new GraphicsPath();\n    return this;\n  }\n  fill(style, alpha) {\n    let path;\n    const lastInstruction = this.instructions[this.instructions.length - 1];\n    if (this._tick === 0 && lastInstruction && lastInstruction.action === \"stroke\") {\n      path = lastInstruction.data.path;\n    } else {\n      path = this._activePath.clone();\n    }\n    if (!path)\n      return this;\n    if (style != null) {\n      if (alpha !== void 0 && typeof style === \"number\") {\n        deprecation(v8_0_0, \"GraphicsContext.fill(color, alpha) is deprecated, use GraphicsContext.fill({ color, alpha }) instead\");\n        style = { color: style, alpha };\n      }\n      this._fillStyle = toFillStyle(style, _GraphicsContext.defaultFillStyle);\n    }\n    this.instructions.push({\n      action: \"fill\",\n      // TODO copy fill style!\n      data: { style: this.fillStyle, path }\n    });\n    this.onUpdate();\n    this._initNextPathLocation();\n    this._tick = 0;\n    return this;\n  }\n  _initNextPathLocation() {\n    const { x, y } = this._activePath.getLastPoint(Point.shared);\n    this._activePath.clear();\n    this._activePath.moveTo(x, y);\n  }\n  /**\n   * Strokes the current path with the current stroke style. This method can take an optional\n   * FillInput parameter to define the stroke's appearance, including its color, width, and other properties.\n   * @param style - (Optional) The stroke style to apply. Can be defined as a simple color or a more complex style object. If omitted, uses the current stroke style.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  stroke(style) {\n    let path;\n    const lastInstruction = this.instructions[this.instructions.length - 1];\n    if (this._tick === 0 && lastInstruction && lastInstruction.action === \"fill\") {\n      path = lastInstruction.data.path;\n    } else {\n      path = this._activePath.clone();\n    }\n    if (!path)\n      return this;\n    if (style != null) {\n      this._strokeStyle = toStrokeStyle(style, _GraphicsContext.defaultStrokeStyle);\n    }\n    this.instructions.push({\n      action: \"stroke\",\n      // TODO copy fill style!\n      data: { style: this.strokeStyle, path }\n    });\n    this.onUpdate();\n    this._initNextPathLocation();\n    this._tick = 0;\n    return this;\n  }\n  /**\n   * Applies a cutout to the last drawn shape. This is used to create holes or complex shapes by\n   * subtracting a path from the previously drawn path. If a hole is not completely in a shape, it will\n   * fail to cut correctly!\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  cut() {\n    for (let i = 0; i < 2; i++) {\n      const lastInstruction = this.instructions[this.instructions.length - 1 - i];\n      const holePath = this._activePath.clone();\n      if (lastInstruction) {\n        if (lastInstruction.action === \"stroke\" || lastInstruction.action === \"fill\") {\n          if (lastInstruction.data.hole) {\n            lastInstruction.data.hole.addPath(holePath);\n          } else {\n            lastInstruction.data.hole = holePath;\n            break;\n          }\n        }\n      }\n    }\n    this._initNextPathLocation();\n    return this;\n  }\n  /**\n   * Adds an arc to the current path, which is centered at (x, y) with the specified radius,\n   * starting and ending angles, and direction.\n   * @param x - The x-coordinate of the arc's center.\n   * @param y - The y-coordinate of the arc's center.\n   * @param radius - The arc's radius.\n   * @param startAngle - The starting angle, in radians.\n   * @param endAngle - The ending angle, in radians.\n   * @param counterclockwise - (Optional) Specifies whether the arc is drawn counterclockwise (true) or clockwise (false). Defaults to false.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  arc(x, y, radius, startAngle, endAngle, counterclockwise) {\n    this._tick++;\n    const t = this._transform;\n    this._activePath.arc(\n      t.a * x + t.c * y + t.tx,\n      t.b * x + t.d * y + t.ty,\n      radius,\n      startAngle,\n      endAngle,\n      counterclockwise\n    );\n    return this;\n  }\n  /**\n   * Adds an arc to the current path with the given control points and radius, connected to the previous point\n   * by a straight line if necessary.\n   * @param x1 - The x-coordinate of the first control point.\n   * @param y1 - The y-coordinate of the first control point.\n   * @param x2 - The x-coordinate of the second control point.\n   * @param y2 - The y-coordinate of the second control point.\n   * @param radius - The arc's radius.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  arcTo(x1, y1, x2, y2, radius) {\n    this._tick++;\n    const t = this._transform;\n    this._activePath.arcTo(\n      t.a * x1 + t.c * y1 + t.tx,\n      t.b * x1 + t.d * y1 + t.ty,\n      t.a * x2 + t.c * y2 + t.tx,\n      t.b * x2 + t.d * y2 + t.ty,\n      radius\n    );\n    return this;\n  }\n  /**\n   * Adds an SVG-style arc to the path, allowing for elliptical arcs based on the SVG spec.\n   * @param rx - The x-radius of the ellipse.\n   * @param ry - The y-radius of the ellipse.\n   * @param xAxisRotation - The rotation of the ellipse's x-axis relative\n   * to the x-axis of the coordinate system, in degrees.\n   * @param largeArcFlag - Determines if the arc should be greater than or less than 180 degrees.\n   * @param sweepFlag - Determines if the arc should be swept in a positive angle direction.\n   * @param x - The x-coordinate of the arc's end point.\n   * @param y - The y-coordinate of the arc's end point.\n   * @returns The instance of the current object for chaining.\n   */\n  arcToSvg(rx, ry, xAxisRotation, largeArcFlag, sweepFlag, x, y) {\n    this._tick++;\n    const t = this._transform;\n    this._activePath.arcToSvg(\n      rx,\n      ry,\n      xAxisRotation,\n      // should we rotate this with transform??\n      largeArcFlag,\n      sweepFlag,\n      t.a * x + t.c * y + t.tx,\n      t.b * x + t.d * y + t.ty\n    );\n    return this;\n  }\n  /**\n   * Adds a cubic Bezier curve to the path.\n   * It requires three points: the first two are control points and the third one is the end point.\n   * The starting point is the last point in the current path.\n   * @param cp1x - The x-coordinate of the first control point.\n   * @param cp1y - The y-coordinate of the first control point.\n   * @param cp2x - The x-coordinate of the second control point.\n   * @param cp2y - The y-coordinate of the second control point.\n   * @param x - The x-coordinate of the end point.\n   * @param y - The y-coordinate of the end point.\n   * @param smoothness - Optional parameter to adjust the smoothness of the curve.\n   * @returns The instance of the current object for chaining.\n   */\n  bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y, smoothness) {\n    this._tick++;\n    const t = this._transform;\n    this._activePath.bezierCurveTo(\n      t.a * cp1x + t.c * cp1y + t.tx,\n      t.b * cp1x + t.d * cp1y + t.ty,\n      t.a * cp2x + t.c * cp2y + t.tx,\n      t.b * cp2x + t.d * cp2y + t.ty,\n      t.a * x + t.c * y + t.tx,\n      t.b * x + t.d * y + t.ty,\n      smoothness\n    );\n    return this;\n  }\n  /**\n   * Closes the current path by drawing a straight line back to the start.\n   * If the shape is already closed or there are no points in the path, this method does nothing.\n   * @returns The instance of the current object for chaining.\n   */\n  closePath() {\n    this._tick++;\n    this._activePath?.closePath();\n    return this;\n  }\n  /**\n   * Draws an ellipse at the specified location and with the given x and y radii.\n   * An optional transformation can be applied, allowing for rotation, scaling, and translation.\n   * @param x - The x-coordinate of the center of the ellipse.\n   * @param y - The y-coordinate of the center of the ellipse.\n   * @param radiusX - The horizontal radius of the ellipse.\n   * @param radiusY - The vertical radius of the ellipse.\n   * @returns The instance of the current object for chaining.\n   */\n  ellipse(x, y, radiusX, radiusY) {\n    this._tick++;\n    this._activePath.ellipse(x, y, radiusX, radiusY, this._transform.clone());\n    return this;\n  }\n  /**\n   * Draws a circle shape. This method adds a new circle path to the current drawing.\n   * @param x - The x-coordinate of the center of the circle.\n   * @param y - The y-coordinate of the center of the circle.\n   * @param radius - The radius of the circle.\n   * @returns The instance of the current object for chaining.\n   */\n  circle(x, y, radius) {\n    this._tick++;\n    this._activePath.circle(x, y, radius, this._transform.clone());\n    return this;\n  }\n  /**\n   * Adds another `GraphicsPath` to this path, optionally applying a transformation.\n   * @param path - The `GraphicsPath` to add.\n   * @returns The instance of the current object for chaining.\n   */\n  path(path) {\n    this._tick++;\n    this._activePath.addPath(path, this._transform.clone());\n    return this;\n  }\n  /**\n   * Connects the current point to a new point with a straight line. This method updates the current path.\n   * @param x - The x-coordinate of the new point to connect to.\n   * @param y - The y-coordinate of the new point to connect to.\n   * @returns The instance of the current object for chaining.\n   */\n  lineTo(x, y) {\n    this._tick++;\n    const t = this._transform;\n    this._activePath.lineTo(\n      t.a * x + t.c * y + t.tx,\n      t.b * x + t.d * y + t.ty\n    );\n    return this;\n  }\n  /**\n   * Sets the starting point for a new sub-path. Any subsequent drawing commands are considered part of this path.\n   * @param x - The x-coordinate for the starting point.\n   * @param y - The y-coordinate for the starting point.\n   * @returns The instance of the current object for chaining.\n   */\n  moveTo(x, y) {\n    this._tick++;\n    const t = this._transform;\n    const instructions = this._activePath.instructions;\n    const transformedX = t.a * x + t.c * y + t.tx;\n    const transformedY = t.b * x + t.d * y + t.ty;\n    if (instructions.length === 1 && instructions[0].action === \"moveTo\") {\n      instructions[0].data[0] = transformedX;\n      instructions[0].data[1] = transformedY;\n      return this;\n    }\n    this._activePath.moveTo(\n      transformedX,\n      transformedY\n    );\n    return this;\n  }\n  /**\n   * Adds a quadratic curve to the path. It requires two points: the control point and the end point.\n   * The starting point is the last point in the current path.\n   * @param cpx - The x-coordinate of the control point.\n   * @param cpy - The y-coordinate of the control point.\n   * @param x - The x-coordinate of the end point.\n   * @param y - The y-coordinate of the end point.\n   * @param smoothness - Optional parameter to adjust the smoothness of the curve.\n   * @returns The instance of the current object for chaining.\n   */\n  quadraticCurveTo(cpx, cpy, x, y, smoothness) {\n    this._tick++;\n    const t = this._transform;\n    this._activePath.quadraticCurveTo(\n      t.a * cpx + t.c * cpy + t.tx,\n      t.b * cpx + t.d * cpy + t.ty,\n      t.a * x + t.c * y + t.tx,\n      t.b * x + t.d * y + t.ty,\n      smoothness\n    );\n    return this;\n  }\n  /**\n   * Draws a rectangle shape. This method adds a new rectangle path to the current drawing.\n   * @param x - The x-coordinate of the top-left corner of the rectangle.\n   * @param y - The y-coordinate of the top-left corner of the rectangle.\n   * @param w - The width of the rectangle.\n   * @param h - The height of the rectangle.\n   * @returns The instance of the current object for chaining.\n   */\n  rect(x, y, w, h) {\n    this._tick++;\n    this._activePath.rect(x, y, w, h, this._transform.clone());\n    return this;\n  }\n  /**\n   * Draws a rectangle with rounded corners.\n   * The corner radius can be specified to determine how rounded the corners should be.\n   * An optional transformation can be applied, which allows for rotation, scaling, and translation of the rectangle.\n   * @param x - The x-coordinate of the top-left corner of the rectangle.\n   * @param y - The y-coordinate of the top-left corner of the rectangle.\n   * @param w - The width of the rectangle.\n   * @param h - The height of the rectangle.\n   * @param radius - The radius of the rectangle's corners. If not specified, corners will be sharp.\n   * @returns The instance of the current object for chaining.\n   */\n  roundRect(x, y, w, h, radius) {\n    this._tick++;\n    this._activePath.roundRect(x, y, w, h, radius, this._transform.clone());\n    return this;\n  }\n  /**\n   * Draws a polygon shape by specifying a sequence of points. This method allows for the creation of complex polygons,\n   * which can be both open and closed. An optional transformation can be applied, enabling the polygon to be scaled,\n   * rotated, or translated as needed.\n   * @param points - An array of numbers, or an array of PointData objects eg [{x,y}, {x,y}, {x,y}]\n   * representing the x and y coordinates, of the polygon's vertices, in sequence.\n   * @param close - A boolean indicating whether to close the polygon path. True by default.\n   */\n  poly(points, close) {\n    this._tick++;\n    this._activePath.poly(points, close, this._transform.clone());\n    return this;\n  }\n  /**\n   * Draws a regular polygon with a specified number of sides. All sides and angles are equal.\n   * @param x - The x-coordinate of the center of the polygon.\n   * @param y - The y-coordinate of the center of the polygon.\n   * @param radius - The radius of the circumscribed circle of the polygon.\n   * @param sides - The number of sides of the polygon. Must be 3 or more.\n   * @param rotation - The rotation angle of the polygon, in radians. Zero by default.\n   * @param transform - An optional `Matrix` object to apply a transformation to the polygon.\n   * @returns The instance of the current object for chaining.\n   */\n  regularPoly(x, y, radius, sides, rotation = 0, transform) {\n    this._tick++;\n    this._activePath.regularPoly(x, y, radius, sides, rotation, transform);\n    return this;\n  }\n  /**\n   * Draws a polygon with rounded corners.\n   * Similar to `regularPoly` but with the ability to round the corners of the polygon.\n   * @param x - The x-coordinate of the center of the polygon.\n   * @param y - The y-coordinate of the center of the polygon.\n   * @param radius - The radius of the circumscribed circle of the polygon.\n   * @param sides - The number of sides of the polygon. Must be 3 or more.\n   * @param corner - The radius of the rounding of the corners.\n   * @param rotation - The rotation angle of the polygon, in radians. Zero by default.\n   * @returns The instance of the current object for chaining.\n   */\n  roundPoly(x, y, radius, sides, corner, rotation) {\n    this._tick++;\n    this._activePath.roundPoly(x, y, radius, sides, corner, rotation);\n    return this;\n  }\n  /**\n   * Draws a shape with rounded corners. This function supports custom radius for each corner of the shape.\n   * Optionally, corners can be rounded using a quadratic curve instead of an arc, providing a different aesthetic.\n   * @param points - An array of `RoundedPoint` representing the corners of the shape to draw.\n   * A minimum of 3 points is required.\n   * @param radius - The default radius for the corners.\n   * This radius is applied to all corners unless overridden in `points`.\n   * @param useQuadratic - If set to true, rounded corners are drawn using a quadraticCurve\n   *  method instead of an arc method. Defaults to false.\n   * @param smoothness - Specifies the smoothness of the curve when `useQuadratic` is true.\n   * Higher values make the curve smoother.\n   * @returns The instance of the current object for chaining.\n   */\n  roundShape(points, radius, useQuadratic, smoothness) {\n    this._tick++;\n    this._activePath.roundShape(points, radius, useQuadratic, smoothness);\n    return this;\n  }\n  /**\n   * Draw Rectangle with fillet corners. This is much like rounded rectangle\n   * however it support negative numbers as well for the corner radius.\n   * @param x - Upper left corner of rect\n   * @param y - Upper right corner of rect\n   * @param width - Width of rect\n   * @param height - Height of rect\n   * @param fillet - accept negative or positive values\n   */\n  filletRect(x, y, width, height, fillet) {\n    this._tick++;\n    this._activePath.filletRect(x, y, width, height, fillet);\n    return this;\n  }\n  /**\n   * Draw Rectangle with chamfer corners. These are angled corners.\n   * @param x - Upper left corner of rect\n   * @param y - Upper right corner of rect\n   * @param width - Width of rect\n   * @param height - Height of rect\n   * @param chamfer - non-zero real number, size of corner cutout\n   * @param transform\n   */\n  chamferRect(x, y, width, height, chamfer, transform) {\n    this._tick++;\n    this._activePath.chamferRect(x, y, width, height, chamfer, transform);\n    return this;\n  }\n  /**\n   * Draws a star shape centered at a specified location. This method allows for the creation\n   *  of stars with a variable number of points, outer radius, optional inner radius, and rotation.\n   * The star is drawn as a closed polygon with alternating outer and inner vertices to create the star's points.\n   * An optional transformation can be applied to scale, rotate, or translate the star as needed.\n   * @param x - The x-coordinate of the center of the star.\n   * @param y - The y-coordinate of the center of the star.\n   * @param points - The number of points of the star.\n   * @param radius - The outer radius of the star (distance from the center to the outer points).\n   * @param innerRadius - Optional. The inner radius of the star\n   * (distance from the center to the inner points between the outer points).\n   * If not provided, defaults to half of the `radius`.\n   * @param rotation - Optional. The rotation of the star in radians, where 0 is aligned with the y-axis.\n   * Defaults to 0, meaning one point is directly upward.\n   * @returns The instance of the current object for chaining further drawing commands.\n   */\n  star(x, y, points, radius, innerRadius = 0, rotation = 0) {\n    this._tick++;\n    this._activePath.star(x, y, points, radius, innerRadius, rotation, this._transform.clone());\n    return this;\n  }\n  /**\n   * Parses and renders an SVG string into the graphics context. This allows for complex shapes and paths\n   * defined in SVG format to be drawn within the graphics context.\n   * @param svg - The SVG string to be parsed and rendered.\n   */\n  svg(svg) {\n    this._tick++;\n    SVGParser(svg, this);\n    return this;\n  }\n  /**\n   * Restores the most recently saved graphics state by popping the top of the graphics state stack.\n   * This includes transformations, fill styles, and stroke styles.\n   */\n  restore() {\n    const state = this._stateStack.pop();\n    if (state) {\n      this._transform = state.transform;\n      this._fillStyle = state.fillStyle;\n      this._strokeStyle = state.strokeStyle;\n    }\n    return this;\n  }\n  /** Saves the current graphics state, including transformations, fill styles, and stroke styles, onto a stack. */\n  save() {\n    this._stateStack.push({\n      transform: this._transform.clone(),\n      fillStyle: { ...this._fillStyle },\n      strokeStyle: { ...this._strokeStyle }\n    });\n    return this;\n  }\n  /**\n   * Returns the current transformation matrix of the graphics context.\n   * @returns The current transformation matrix.\n   */\n  getTransform() {\n    return this._transform;\n  }\n  /**\n   * Resets the current transformation matrix to the identity matrix, effectively removing any transformations (rotation, scaling, translation) previously applied.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  resetTransform() {\n    this._transform.identity();\n    return this;\n  }\n  /**\n   * Applies a rotation transformation to the graphics context around the current origin.\n   * @param angle - The angle of rotation in radians.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  rotate(angle) {\n    this._transform.rotate(angle);\n    return this;\n  }\n  /**\n   * Applies a scaling transformation to the graphics context, scaling drawings by x horizontally and by y vertically.\n   * @param x - The scale factor in the horizontal direction.\n   * @param y - (Optional) The scale factor in the vertical direction. If not specified, the x value is used for both directions.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  scale(x, y = x) {\n    this._transform.scale(x, y);\n    return this;\n  }\n  setTransform(a, b, c, d, dx, dy) {\n    if (a instanceof Matrix) {\n      this._transform.set(a.a, a.b, a.c, a.d, a.tx, a.ty);\n      return this;\n    }\n    this._transform.set(a, b, c, d, dx, dy);\n    return this;\n  }\n  transform(a, b, c, d, dx, dy) {\n    if (a instanceof Matrix) {\n      this._transform.append(a);\n      return this;\n    }\n    tempMatrix.set(a, b, c, d, dx, dy);\n    this._transform.append(tempMatrix);\n    return this;\n  }\n  /**\n   * Applies a translation transformation to the graphics context, moving the origin by the specified amounts.\n   * @param x - The amount to translate in the horizontal direction.\n   * @param y - (Optional) The amount to translate in the vertical direction. If not specified, the x value is used for both directions.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  translate(x, y = x) {\n    this._transform.translate(x, y);\n    return this;\n  }\n  /**\n   * Clears all drawing commands from the graphics context, effectively resetting it. This includes clearing the path,\n   * and optionally resetting transformations to the identity matrix.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  clear() {\n    this._activePath.clear();\n    this.instructions.length = 0;\n    this.resetTransform();\n    this.onUpdate();\n    return this;\n  }\n  onUpdate() {\n    if (this.dirty)\n      return;\n    this.emit(\"update\", this, 16);\n    this.dirty = true;\n    this._boundsDirty = true;\n  }\n  /** The bounds of the graphic shape. */\n  get bounds() {\n    if (!this._boundsDirty)\n      return this._bounds;\n    const bounds = this._bounds;\n    bounds.clear();\n    for (let i = 0; i < this.instructions.length; i++) {\n      const instruction = this.instructions[i];\n      const action = instruction.action;\n      if (action === \"fill\") {\n        const data = instruction.data;\n        bounds.addBounds(data.path.bounds);\n      } else if (action === \"texture\") {\n        const data = instruction.data;\n        bounds.addFrame(data.dx, data.dy, data.dx + data.dw, data.dy + data.dh, data.transform);\n      }\n      if (action === \"stroke\") {\n        const data = instruction.data;\n        const alignment = data.style.alignment;\n        const outerPadding = data.style.width * (1 - alignment);\n        const _bounds = data.path.bounds;\n        bounds.addFrame(\n          _bounds.minX - outerPadding,\n          _bounds.minY - outerPadding,\n          _bounds.maxX + outerPadding,\n          _bounds.maxY + outerPadding\n        );\n      }\n    }\n    return bounds;\n  }\n  /**\n   * Check to see if a point is contained within this geometry.\n   * @param point - Point to check if it's contained.\n   * @returns {boolean} `true` if the point is contained within geometry.\n   */\n  containsPoint(point) {\n    if (!this.bounds.containsPoint(point.x, point.y))\n      return false;\n    const instructions = this.instructions;\n    let hasHit = false;\n    for (let k = 0; k < instructions.length; k++) {\n      const instruction = instructions[k];\n      const data = instruction.data;\n      const path = data.path;\n      if (!instruction.action || !path)\n        continue;\n      const style = data.style;\n      const shapes = path.shapePath.shapePrimitives;\n      for (let i = 0; i < shapes.length; i++) {\n        const shape = shapes[i].shape;\n        if (!style || !shape)\n          continue;\n        const transform = shapes[i].transform;\n        const transformedPoint = transform ? transform.applyInverse(point, tmpPoint) : point;\n        if (instruction.action === \"fill\") {\n          hasHit = shape.contains(transformedPoint.x, transformedPoint.y);\n        } else {\n          const strokeStyle = style;\n          hasHit = shape.strokeContains(transformedPoint.x, transformedPoint.y, strokeStyle.width, strokeStyle.alignment);\n        }\n        const holes = data.hole;\n        if (holes) {\n          const holeShapes = holes.shapePath?.shapePrimitives;\n          if (holeShapes) {\n            for (let j = 0; j < holeShapes.length; j++) {\n              if (holeShapes[j].shape.contains(transformedPoint.x, transformedPoint.y)) {\n                hasHit = false;\n              }\n            }\n          }\n        }\n        if (hasHit) {\n          return true;\n        }\n      }\n    }\n    return hasHit;\n  }\n  /**\n   * Destroys the GraphicsData object.\n   * @param options - Options parameter. A boolean will act as if all options\n   *  have been set to that value\n   * @param {boolean} [options.texture=false] - Should it destroy the current texture of the fill/stroke style?\n   * @param {boolean} [options.textureSource=false] - Should it destroy the texture source of the fill/stroke style?\n   */\n  destroy(options = false) {\n    this._stateStack.length = 0;\n    this._transform = null;\n    this.emit(\"destroy\", this);\n    this.removeAllListeners();\n    const destroyTexture = typeof options === \"boolean\" ? options : options?.texture;\n    if (destroyTexture) {\n      const destroyTextureSource = typeof options === \"boolean\" ? options : options?.textureSource;\n      if (this._fillStyle.texture) {\n        this._fillStyle.texture.destroy(destroyTextureSource);\n      }\n      if (this._strokeStyle.texture) {\n        this._strokeStyle.texture.destroy(destroyTextureSource);\n      }\n    }\n    this._fillStyle = null;\n    this._strokeStyle = null;\n    this.instructions = null;\n    this._activePath = null;\n    this._bounds = null;\n    this._stateStack = null;\n    this.customShader = null;\n    this._transform = null;\n  }\n};\n/** The default fill style to use when none is provided. */\n_GraphicsContext.defaultFillStyle = {\n  /** The color to use for the fill. */\n  color: 16777215,\n  /** The alpha value to use for the fill. */\n  alpha: 1,\n  /** The texture to use for the fill. */\n  texture: Texture.WHITE,\n  /** The matrix to apply. */\n  matrix: null,\n  /** The fill pattern to use. */\n  fill: null,\n  /** Whether coordinates are 'global' or 'local' */\n  textureSpace: \"local\"\n};\n/** The default stroke style to use when none is provided. */\n_GraphicsContext.defaultStrokeStyle = {\n  /** The width of the stroke. */\n  width: 1,\n  /** The color to use for the stroke. */\n  color: 16777215,\n  /** The alpha value to use for the stroke. */\n  alpha: 1,\n  /** The alignment of the stroke. */\n  alignment: 0.5,\n  /** The miter limit to use. */\n  miterLimit: 10,\n  /** The line cap style to use. */\n  cap: \"butt\",\n  /** The line join style to use. */\n  join: \"miter\",\n  /** The texture to use for the fill. */\n  texture: Texture.WHITE,\n  /** The matrix to apply. */\n  matrix: null,\n  /** The fill pattern to use. */\n  fill: null,\n  /** Whether coordinates are 'global' or 'local' */\n  textureSpace: \"local\",\n  /** If the stroke is a pixel line. */\n  pixelLine: false\n};\nlet GraphicsContext = _GraphicsContext;\n\nexport { GraphicsContext };\n//# sourceMappingURL=GraphicsContext.mjs.map\n","import { Color } from '../../../color/Color.mjs';\n\n\"use strict\";\nconst valuesToIterateForKeys = [\n  \"align\",\n  \"breakWords\",\n  \"cssOverrides\",\n  \"fontVariant\",\n  \"fontWeight\",\n  \"leading\",\n  \"letterSpacing\",\n  \"lineHeight\",\n  \"padding\",\n  \"textBaseline\",\n  \"trim\",\n  \"whiteSpace\",\n  \"wordWrap\",\n  \"wordWrapWidth\",\n  \"fontFamily\",\n  \"fontStyle\",\n  \"fontSize\"\n];\nfunction generateTextStyleKey(style) {\n  const key = [];\n  let index = 0;\n  for (let i = 0; i < valuesToIterateForKeys.length; i++) {\n    const prop = `_${valuesToIterateForKeys[i]}`;\n    key[index++] = style[prop];\n  }\n  index = addFillStyleKey(style._fill, key, index);\n  index = addStokeStyleKey(style._stroke, key, index);\n  index = addDropShadowKey(style.dropShadow, key, index);\n  return key.join(\"-\");\n}\nfunction addFillStyleKey(fillStyle, key, index) {\n  if (!fillStyle)\n    return index;\n  key[index++] = fillStyle.color;\n  key[index++] = fillStyle.alpha;\n  key[index++] = fillStyle.fill?.styleKey;\n  return index;\n}\nfunction addStokeStyleKey(strokeStyle, key, index) {\n  if (!strokeStyle)\n    return index;\n  index = addFillStyleKey(strokeStyle, key, index);\n  key[index++] = strokeStyle.width;\n  key[index++] = strokeStyle.alignment;\n  key[index++] = strokeStyle.cap;\n  key[index++] = strokeStyle.join;\n  key[index++] = strokeStyle.miterLimit;\n  return index;\n}\nfunction addDropShadowKey(dropShadow, key, index) {\n  if (!dropShadow)\n    return index;\n  key[index++] = dropShadow.alpha;\n  key[index++] = dropShadow.angle;\n  key[index++] = dropShadow.blur;\n  key[index++] = dropShadow.distance;\n  key[index++] = Color.shared.setValue(dropShadow.color).toNumber();\n  return index;\n}\n\nexport { generateTextStyleKey };\n//# sourceMappingURL=generateTextStyleKey.mjs.map\n","import EventEmitter from 'eventemitter3';\nimport { Color } from '../../color/Color.mjs';\nimport { deprecation, v8_0_0 } from '../../utils/logging/deprecation.mjs';\nimport { FillGradient } from '../graphics/shared/fill/FillGradient.mjs';\nimport { FillPattern } from '../graphics/shared/fill/FillPattern.mjs';\nimport { GraphicsContext } from '../graphics/shared/GraphicsContext.mjs';\nimport { toFillStyle, toStrokeStyle } from '../graphics/shared/utils/convertFillInputToFillStyle.mjs';\nimport { generateTextStyleKey } from './utils/generateTextStyleKey.mjs';\n\n\"use strict\";\nconst _TextStyle = class _TextStyle extends EventEmitter {\n  constructor(style = {}) {\n    super();\n    convertV7Tov8Style(style);\n    const fullStyle = { ..._TextStyle.defaultTextStyle, ...style };\n    for (const key in fullStyle) {\n      const thisKey = key;\n      this[thisKey] = fullStyle[key];\n    }\n    this.update();\n  }\n  /**\n   * Alignment for multiline text, does not affect single line text.\n   * @member {'left'|'center'|'right'|'justify'}\n   */\n  get align() {\n    return this._align;\n  }\n  set align(value) {\n    this._align = value;\n    this.update();\n  }\n  /** Indicates if lines can be wrapped within words, it needs wordWrap to be set to true. */\n  get breakWords() {\n    return this._breakWords;\n  }\n  set breakWords(value) {\n    this._breakWords = value;\n    this.update();\n  }\n  /** Set a drop shadow for the text. */\n  get dropShadow() {\n    return this._dropShadow;\n  }\n  set dropShadow(value) {\n    if (value !== null && typeof value === \"object\") {\n      this._dropShadow = this._createProxy({ ..._TextStyle.defaultDropShadow, ...value });\n    } else {\n      this._dropShadow = value ? this._createProxy({ ..._TextStyle.defaultDropShadow }) : null;\n    }\n    this.update();\n  }\n  /** The font family, can be a single font name, or a list of names where the first is the preferred font. */\n  get fontFamily() {\n    return this._fontFamily;\n  }\n  set fontFamily(value) {\n    this._fontFamily = value;\n    this.update();\n  }\n  /** The font size (as a number it converts to px, but as a string, equivalents are '26px','20pt','160%' or '1.6em') */\n  get fontSize() {\n    return this._fontSize;\n  }\n  set fontSize(value) {\n    if (typeof value === \"string\") {\n      this._fontSize = parseInt(value, 10);\n    } else {\n      this._fontSize = value;\n    }\n    this.update();\n  }\n  /**\n   * The font style.\n   * @member {'normal'|'italic'|'oblique'}\n   */\n  get fontStyle() {\n    return this._fontStyle;\n  }\n  set fontStyle(value) {\n    this._fontStyle = value.toLowerCase();\n    this.update();\n  }\n  /**\n   * The font variant.\n   * @member {'normal'|'small-caps'}\n   */\n  get fontVariant() {\n    return this._fontVariant;\n  }\n  set fontVariant(value) {\n    this._fontVariant = value;\n    this.update();\n  }\n  /**\n   * The font weight.\n   * @member {'normal'|'bold'|'bolder'|'lighter'|'100'|'200'|'300'|'400'|'500'|'600'|'700'|'800'|'900'}\n   */\n  get fontWeight() {\n    return this._fontWeight;\n  }\n  set fontWeight(value) {\n    this._fontWeight = value;\n    this.update();\n  }\n  /** The space between lines. */\n  get leading() {\n    return this._leading;\n  }\n  set leading(value) {\n    this._leading = value;\n    this.update();\n  }\n  /** The amount of spacing between letters, default is 0. */\n  get letterSpacing() {\n    return this._letterSpacing;\n  }\n  set letterSpacing(value) {\n    this._letterSpacing = value;\n    this.update();\n  }\n  /** The line height, a number that represents the vertical space that a letter uses. */\n  get lineHeight() {\n    return this._lineHeight;\n  }\n  set lineHeight(value) {\n    this._lineHeight = value;\n    this.update();\n  }\n  /**\n   * Occasionally some fonts are cropped. Adding some padding will prevent this from happening\n   * by adding padding to all sides of the text.\n   */\n  get padding() {\n    return this._padding;\n  }\n  set padding(value) {\n    this._padding = value;\n    this.update();\n  }\n  /** Trim transparent borders. This is an expensive operation so only use this if you have to! */\n  get trim() {\n    return this._trim;\n  }\n  set trim(value) {\n    this._trim = value;\n    this.update();\n  }\n  /**\n   * The baseline of the text that is rendered.\n   * @member {'alphabetic'|'top'|'hanging'|'middle'|'ideographic'|'bottom'}\n   */\n  get textBaseline() {\n    return this._textBaseline;\n  }\n  set textBaseline(value) {\n    this._textBaseline = value;\n    this.update();\n  }\n  /**\n   * How newlines and spaces should be handled.\n   * Default is 'pre' (preserve, preserve).\n   *\n   *  value       | New lines     |   Spaces\n   *  ---         | ---           |   ---\n   * 'normal'     | Collapse      |   Collapse\n   * 'pre'        | Preserve      |   Preserve\n   * 'pre-line'   | Preserve      |   Collapse\n   * @member {'normal'|'pre'|'pre-line'}\n   */\n  get whiteSpace() {\n    return this._whiteSpace;\n  }\n  set whiteSpace(value) {\n    this._whiteSpace = value;\n    this.update();\n  }\n  /** Indicates if word wrap should be used. */\n  get wordWrap() {\n    return this._wordWrap;\n  }\n  set wordWrap(value) {\n    this._wordWrap = value;\n    this.update();\n  }\n  /** The width at which text will wrap, it needs wordWrap to be set to true. */\n  get wordWrapWidth() {\n    return this._wordWrapWidth;\n  }\n  set wordWrapWidth(value) {\n    this._wordWrapWidth = value;\n    this.update();\n  }\n  /**\n   * The fill style that will be used to color the text.\n   * This can be:\n   * - A color string like 'red', '#00FF00', or 'rgba(255,0,0,0.5)'\n   * - A hex number like 0xff0000 for red\n   * - A FillStyle object with properties like { color: 0xff0000, alpha: 0.5 }\n   * - A FillGradient for gradient fills\n   * - A FillPattern for pattern/texture fills\n   *\n   * When using a FillGradient, vertical gradients (angle of 90 degrees) are applied per line of text,\n   * while gradients at any other angle are spread across the entire text body as a whole.\n   * @example\n   * // Vertical gradient applied per line\n   * const verticalGradient = new FillGradient(0, 0, 0, 1)\n   *     .addColorStop(0, 0xff0000)\n   *     .addColorStop(1, 0x0000ff);\n   *\n   * const text = new Text({\n   *     text: 'Line 1\\nLine 2',\n   *     style: { fill: verticalGradient }\n   * });\n   *\n   * To manage the gradient in a global scope, set the textureSpace property of the FillGradient to 'global'.\n   * @type {string|number|FillStyle|FillGradient|FillPattern}\n   */\n  get fill() {\n    return this._originalFill;\n  }\n  set fill(value) {\n    if (value === this._originalFill)\n      return;\n    this._originalFill = value;\n    if (this._isFillStyle(value)) {\n      this._originalFill = this._createProxy({ ...GraphicsContext.defaultFillStyle, ...value }, () => {\n        this._fill = toFillStyle(\n          { ...this._originalFill },\n          GraphicsContext.defaultFillStyle\n        );\n      });\n    }\n    this._fill = toFillStyle(\n      value === 0 ? \"black\" : value,\n      GraphicsContext.defaultFillStyle\n    );\n    this.update();\n  }\n  /** A fillstyle that will be used on the text stroke, e.g., 'blue', '#FCFF00'. */\n  get stroke() {\n    return this._originalStroke;\n  }\n  set stroke(value) {\n    if (value === this._originalStroke)\n      return;\n    this._originalStroke = value;\n    if (this._isFillStyle(value)) {\n      this._originalStroke = this._createProxy({ ...GraphicsContext.defaultStrokeStyle, ...value }, () => {\n        this._stroke = toStrokeStyle(\n          { ...this._originalStroke },\n          GraphicsContext.defaultStrokeStyle\n        );\n      });\n    }\n    this._stroke = toStrokeStyle(value, GraphicsContext.defaultStrokeStyle);\n    this.update();\n  }\n  _generateKey() {\n    this._styleKey = generateTextStyleKey(this);\n    return this._styleKey;\n  }\n  update() {\n    this._styleKey = null;\n    this.emit(\"update\", this);\n  }\n  /** Resets all properties to the default values */\n  reset() {\n    const defaultStyle = _TextStyle.defaultTextStyle;\n    for (const key in defaultStyle) {\n      this[key] = defaultStyle[key];\n    }\n  }\n  get styleKey() {\n    return this._styleKey || this._generateKey();\n  }\n  /**\n   * Creates a new TextStyle object with the same values as this one.\n   * @returns New cloned TextStyle object\n   */\n  clone() {\n    return new _TextStyle({\n      align: this.align,\n      breakWords: this.breakWords,\n      dropShadow: this._dropShadow ? { ...this._dropShadow } : null,\n      fill: this._fill,\n      fontFamily: this.fontFamily,\n      fontSize: this.fontSize,\n      fontStyle: this.fontStyle,\n      fontVariant: this.fontVariant,\n      fontWeight: this.fontWeight,\n      leading: this.leading,\n      letterSpacing: this.letterSpacing,\n      lineHeight: this.lineHeight,\n      padding: this.padding,\n      stroke: this._stroke,\n      textBaseline: this.textBaseline,\n      whiteSpace: this.whiteSpace,\n      wordWrap: this.wordWrap,\n      wordWrapWidth: this.wordWrapWidth\n    });\n  }\n  /**\n   * Destroys this text style.\n   * @param options - Options parameter. A boolean will act as if all options\n   *  have been set to that value\n   * @param {boolean} [options.texture=false] - Should it destroy the texture of the this style\n   * @param {boolean} [options.textureSource=false] - Should it destroy the textureSource of the this style\n   */\n  destroy(options = false) {\n    this.removeAllListeners();\n    const destroyTexture = typeof options === \"boolean\" ? options : options?.texture;\n    if (destroyTexture) {\n      const destroyTextureSource = typeof options === \"boolean\" ? options : options?.textureSource;\n      if (this._fill?.texture) {\n        this._fill.texture.destroy(destroyTextureSource);\n      }\n      if (this._originalFill?.texture) {\n        this._originalFill.texture.destroy(destroyTextureSource);\n      }\n      if (this._stroke?.texture) {\n        this._stroke.texture.destroy(destroyTextureSource);\n      }\n      if (this._originalStroke?.texture) {\n        this._originalStroke.texture.destroy(destroyTextureSource);\n      }\n    }\n    this._fill = null;\n    this._stroke = null;\n    this.dropShadow = null;\n    this._originalStroke = null;\n    this._originalFill = null;\n  }\n  _createProxy(value, cb) {\n    return new Proxy(value, {\n      set: (target, property, newValue) => {\n        target[property] = newValue;\n        cb?.(property, newValue);\n        this.update();\n        return true;\n      }\n    });\n  }\n  _isFillStyle(value) {\n    return (value ?? null) !== null && !(Color.isColorLike(value) || value instanceof FillGradient || value instanceof FillPattern);\n  }\n};\n/** The default drop shadow settings */\n_TextStyle.defaultDropShadow = {\n  /** Set alpha for the drop shadow */\n  alpha: 1,\n  /** Set a angle of the drop shadow */\n  angle: Math.PI / 6,\n  /** Set a shadow blur radius */\n  blur: 0,\n  /** A fill style to be used on the  e.g., 'red', '#00FF00' */\n  color: \"black\",\n  /** Set a distance of the drop shadow */\n  distance: 5\n};\n/** The default text style settings */\n_TextStyle.defaultTextStyle = {\n  /**\n   * See {@link TextStyle.align}\n   * @type {'left'|'center'|'right'|'justify'}\n   */\n  align: \"left\",\n  /** See {@link TextStyle.breakWords} */\n  breakWords: false,\n  /** See {@link TextStyle.dropShadow} */\n  dropShadow: null,\n  /**\n   * See {@link TextStyle.fill}\n   * @type {string|string[]|number|number[]|CanvasGradient|CanvasPattern}\n   */\n  fill: \"black\",\n  /**\n   * See {@link TextStyle.fontFamily}\n   * @type {string|string[]}\n   */\n  fontFamily: \"Arial\",\n  /**\n   * See {@link TextStyle.fontSize}\n   * @type {number|string}\n   */\n  fontSize: 26,\n  /**\n   * See {@link TextStyle.fontStyle}\n   * @type {'normal'|'italic'|'oblique'}\n   */\n  fontStyle: \"normal\",\n  /**\n   * See {@link TextStyle.fontVariant}\n   * @type {'normal'|'small-caps'}\n   */\n  fontVariant: \"normal\",\n  /**\n   * See {@link TextStyle.fontWeight}\n   * @type {'normal'|'bold'|'bolder'|'lighter'|'100'|'200'|'300'|'400'|'500'|'600'|'700'|'800'|'900'}\n   */\n  fontWeight: \"normal\",\n  /** See {@link TextStyle.leading} */\n  leading: 0,\n  /** See {@link TextStyle.letterSpacing} */\n  letterSpacing: 0,\n  /** See {@link TextStyle.lineHeight} */\n  lineHeight: 0,\n  /** See {@link TextStyle.padding} */\n  padding: 0,\n  /**\n   * See {@link TextStyle.stroke}\n   * @type {string|number}\n   */\n  stroke: null,\n  /**\n   * See {@link TextStyle.textBaseline}\n   * @type {'alphabetic'|'top'|'hanging'|'middle'|'ideographic'|'bottom'}\n   */\n  textBaseline: \"alphabetic\",\n  /** See {@link TextStyle.trim} */\n  trim: false,\n  /**\n   * See {@link TextStyle.whiteSpace}\n   * @type {'normal'|'pre'|'pre-line'}\n   */\n  whiteSpace: \"pre\",\n  /** See {@link TextStyle.wordWrap} */\n  wordWrap: false,\n  /** See {@link TextStyle.wordWrapWidth} */\n  wordWrapWidth: 100\n};\nlet TextStyle = _TextStyle;\nfunction convertV7Tov8Style(style) {\n  const oldStyle = style;\n  if (typeof oldStyle.dropShadow === \"boolean\" && oldStyle.dropShadow) {\n    const defaults = TextStyle.defaultDropShadow;\n    style.dropShadow = {\n      alpha: oldStyle.dropShadowAlpha ?? defaults.alpha,\n      angle: oldStyle.dropShadowAngle ?? defaults.angle,\n      blur: oldStyle.dropShadowBlur ?? defaults.blur,\n      color: oldStyle.dropShadowColor ?? defaults.color,\n      distance: oldStyle.dropShadowDistance ?? defaults.distance\n    };\n  }\n  if (oldStyle.strokeThickness !== void 0) {\n    deprecation(v8_0_0, \"strokeThickness is now a part of stroke\");\n    const color = oldStyle.stroke;\n    let obj = {};\n    if (Color.isColorLike(color)) {\n      obj.color = color;\n    } else if (color instanceof FillGradient || color instanceof FillPattern) {\n      obj.fill = color;\n    } else if (Object.hasOwnProperty.call(color, \"color\") || Object.hasOwnProperty.call(color, \"fill\")) {\n      obj = color;\n    } else {\n      throw new Error(\"Invalid stroke value.\");\n    }\n    style.stroke = {\n      ...obj,\n      width: oldStyle.strokeThickness\n    };\n  }\n  if (Array.isArray(oldStyle.fillGradientStops)) {\n    deprecation(v8_0_0, \"gradient fill is now a fill pattern: `new FillGradient(...)`\");\n    let fontSize;\n    if (style.fontSize == null) {\n      style.fontSize = TextStyle.defaultTextStyle.fontSize;\n    } else if (typeof style.fontSize === \"string\") {\n      fontSize = parseInt(style.fontSize, 10);\n    } else {\n      fontSize = style.fontSize;\n    }\n    const gradientFill = new FillGradient({\n      start: { x: 0, y: 0 },\n      end: { x: 0, y: (fontSize || 0) * 1.7 }\n    });\n    const fills = oldStyle.fillGradientStops.map((color) => Color.shared.setValue(color).toNumber());\n    fills.forEach((number, index) => {\n      const ratio = index / (fills.length - 1);\n      gradientFill.addColorStop(ratio, number);\n    });\n    style.fill = {\n      fill: gradientFill\n    };\n  }\n}\n\nexport { TextStyle };\n//# sourceMappingURL=TextStyle.mjs.map\n","import { DOMAdapter } from '../../../../environment/adapter.mjs';\nimport { nextPow2 } from '../../../../maths/misc/pow2.mjs';\n\n\"use strict\";\nclass CanvasPoolClass {\n  constructor(canvasOptions) {\n    this._canvasPool = /* @__PURE__ */ Object.create(null);\n    this.canvasOptions = canvasOptions || {};\n    this.enableFullScreen = false;\n  }\n  /**\n   * Creates texture with params that were specified in pool constructor.\n   * @param pixelWidth - Width of texture in pixels.\n   * @param pixelHeight - Height of texture in pixels.\n   */\n  _createCanvasAndContext(pixelWidth, pixelHeight) {\n    const canvas = DOMAdapter.get().createCanvas();\n    canvas.width = pixelWidth;\n    canvas.height = pixelHeight;\n    const context = canvas.getContext(\"2d\");\n    return { canvas, context };\n  }\n  /**\n   * Gets a Power-of-Two render texture or fullScreen texture\n   * @param minWidth - The minimum width of the render texture.\n   * @param minHeight - The minimum height of the render texture.\n   * @param resolution - The resolution of the render texture.\n   * @returns The new render texture.\n   */\n  getOptimalCanvasAndContext(minWidth, minHeight, resolution = 1) {\n    minWidth = Math.ceil(minWidth * resolution - 1e-6);\n    minHeight = Math.ceil(minHeight * resolution - 1e-6);\n    minWidth = nextPow2(minWidth);\n    minHeight = nextPow2(minHeight);\n    const key = (minWidth << 17) + (minHeight << 1);\n    if (!this._canvasPool[key]) {\n      this._canvasPool[key] = [];\n    }\n    let canvasAndContext = this._canvasPool[key].pop();\n    if (!canvasAndContext) {\n      canvasAndContext = this._createCanvasAndContext(minWidth, minHeight);\n    }\n    return canvasAndContext;\n  }\n  /**\n   * Place a render texture back into the pool.\n   * @param canvasAndContext\n   */\n  returnCanvasAndContext(canvasAndContext) {\n    const canvas = canvasAndContext.canvas;\n    const { width, height } = canvas;\n    const key = (width << 17) + (height << 1);\n    canvasAndContext.context.clearRect(0, 0, width, height);\n    this._canvasPool[key].push(canvasAndContext);\n  }\n  clear() {\n    this._canvasPool = {};\n  }\n}\nconst CanvasPool = new CanvasPoolClass();\n\nexport { CanvasPool, CanvasPoolClass };\n//# sourceMappingURL=CanvasPool.mjs.map\n","\"use strict\";\nconst genericFontFamilies = [\n  \"serif\",\n  \"sans-serif\",\n  \"monospace\",\n  \"cursive\",\n  \"fantasy\",\n  \"system-ui\"\n];\nfunction fontStringFromTextStyle(style) {\n  const fontSizeString = typeof style.fontSize === \"number\" ? `${style.fontSize}px` : style.fontSize;\n  let fontFamilies = style.fontFamily;\n  if (!Array.isArray(style.fontFamily)) {\n    fontFamilies = style.fontFamily.split(\",\");\n  }\n  for (let i = fontFamilies.length - 1; i >= 0; i--) {\n    let fontFamily = fontFamilies[i].trim();\n    if (!/([\\\"\\'])[^\\'\\\"]+\\1/.test(fontFamily) && !genericFontFamilies.includes(fontFamily)) {\n      fontFamily = `\"${fontFamily}\"`;\n    }\n    fontFamilies[i] = fontFamily;\n  }\n  return `${style.fontStyle} ${style.fontVariant} ${style.fontWeight} ${fontSizeString} ${fontFamilies.join(\",\")}`;\n}\n\nexport { fontStringFromTextStyle };\n//# sourceMappingURL=fontStringFromTextStyle.mjs.map\n","import { DOMAdapter } from '../../../environment/adapter.mjs';\nimport { fontStringFromTextStyle } from './utils/fontStringFromTextStyle.mjs';\n\n\"use strict\";\nconst contextSettings = {\n  // TextMetrics requires getImageData readback for measuring fonts.\n  willReadFrequently: true\n};\nconst _CanvasTextMetrics = class _CanvasTextMetrics {\n  /**\n   * Checking that we can use modern canvas 2D API.\n   *\n   * Note: This is an unstable API, Chrome < 94 use `textLetterSpacing`, later versions use `letterSpacing`.\n   * @see TextMetrics.experimentalLetterSpacing\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/ICanvasRenderingContext2D/letterSpacing\n   * @see https://developer.chrome.com/origintrials/#/view_trial/3585991203293757441\n   */\n  static get experimentalLetterSpacingSupported() {\n    let result = _CanvasTextMetrics._experimentalLetterSpacingSupported;\n    if (result !== void 0) {\n      const proto = DOMAdapter.get().getCanvasRenderingContext2D().prototype;\n      result = _CanvasTextMetrics._experimentalLetterSpacingSupported = \"letterSpacing\" in proto || \"textLetterSpacing\" in proto;\n    }\n    return result;\n  }\n  /**\n   * @param text - the text that was measured\n   * @param style - the style that was measured\n   * @param width - the measured width of the text\n   * @param height - the measured height of the text\n   * @param lines - an array of the lines of text broken by new lines and wrapping if specified in style\n   * @param lineWidths - an array of the line widths for each line matched to `lines`\n   * @param lineHeight - the measured line height for this style\n   * @param maxLineWidth - the maximum line width for all measured lines\n   * @param {FontMetrics} fontProperties - the font properties object from TextMetrics.measureFont\n   */\n  constructor(text, style, width, height, lines, lineWidths, lineHeight, maxLineWidth, fontProperties) {\n    this.text = text;\n    this.style = style;\n    this.width = width;\n    this.height = height;\n    this.lines = lines;\n    this.lineWidths = lineWidths;\n    this.lineHeight = lineHeight;\n    this.maxLineWidth = maxLineWidth;\n    this.fontProperties = fontProperties;\n  }\n  /**\n   * Measures the supplied string of text and returns a Rectangle.\n   * @param text - The text to measure.\n   * @param style - The text style to use for measuring\n   * @param canvas - optional specification of the canvas to use for measuring.\n   * @param wordWrap\n   * @returns Measured width and height of the text.\n   */\n  static measureText(text = \" \", style, canvas = _CanvasTextMetrics._canvas, wordWrap = style.wordWrap) {\n    const textKey = `${text}:${style.styleKey}`;\n    if (_CanvasTextMetrics._measurementCache[textKey])\n      return _CanvasTextMetrics._measurementCache[textKey];\n    const font = fontStringFromTextStyle(style);\n    const fontProperties = _CanvasTextMetrics.measureFont(font);\n    if (fontProperties.fontSize === 0) {\n      fontProperties.fontSize = style.fontSize;\n      fontProperties.ascent = style.fontSize;\n    }\n    const context = _CanvasTextMetrics.__context;\n    context.font = font;\n    const outputText = wordWrap ? _CanvasTextMetrics._wordWrap(text, style, canvas) : text;\n    const lines = outputText.split(/(?:\\r\\n|\\r|\\n)/);\n    const lineWidths = new Array(lines.length);\n    let maxLineWidth = 0;\n    for (let i = 0; i < lines.length; i++) {\n      const lineWidth = _CanvasTextMetrics._measureText(lines[i], style.letterSpacing, context);\n      lineWidths[i] = lineWidth;\n      maxLineWidth = Math.max(maxLineWidth, lineWidth);\n    }\n    const strokeWidth = style._stroke?.width || 0;\n    let width = maxLineWidth + strokeWidth;\n    if (style.dropShadow) {\n      width += style.dropShadow.distance;\n    }\n    const lineHeight = style.lineHeight || fontProperties.fontSize;\n    let height = Math.max(lineHeight, fontProperties.fontSize + strokeWidth) + (lines.length - 1) * (lineHeight + style.leading);\n    if (style.dropShadow) {\n      height += style.dropShadow.distance;\n    }\n    const measurements = new _CanvasTextMetrics(\n      text,\n      style,\n      width,\n      height,\n      lines,\n      lineWidths,\n      lineHeight + style.leading,\n      maxLineWidth,\n      fontProperties\n    );\n    return measurements;\n  }\n  static _measureText(text, letterSpacing, context) {\n    let useExperimentalLetterSpacing = false;\n    if (_CanvasTextMetrics.experimentalLetterSpacingSupported) {\n      if (_CanvasTextMetrics.experimentalLetterSpacing) {\n        context.letterSpacing = `${letterSpacing}px`;\n        context.textLetterSpacing = `${letterSpacing}px`;\n        useExperimentalLetterSpacing = true;\n      } else {\n        context.letterSpacing = \"0px\";\n        context.textLetterSpacing = \"0px\";\n      }\n    }\n    const metrics = context.measureText(text);\n    let metricWidth = metrics.width;\n    const actualBoundingBoxLeft = -metrics.actualBoundingBoxLeft;\n    const actualBoundingBoxRight = metrics.actualBoundingBoxRight;\n    let boundsWidth = actualBoundingBoxRight - actualBoundingBoxLeft;\n    if (metricWidth > 0) {\n      if (useExperimentalLetterSpacing) {\n        metricWidth -= letterSpacing;\n        boundsWidth -= letterSpacing;\n      } else {\n        const val = (_CanvasTextMetrics.graphemeSegmenter(text).length - 1) * letterSpacing;\n        metricWidth += val;\n        boundsWidth += val;\n      }\n    }\n    return Math.max(metricWidth, boundsWidth);\n  }\n  /**\n   * Applies newlines to a string to have it optimally fit into the horizontal\n   * bounds set by the Text object's wordWrapWidth property.\n   * @param text - String to apply word wrapping to\n   * @param style - the style to use when wrapping\n   * @param canvas - optional specification of the canvas to use for measuring.\n   * @returns New string with new lines applied where required\n   */\n  static _wordWrap(text, style, canvas = _CanvasTextMetrics._canvas) {\n    const context = canvas.getContext(\"2d\", contextSettings);\n    let width = 0;\n    let line = \"\";\n    let lines = \"\";\n    const cache = /* @__PURE__ */ Object.create(null);\n    const { letterSpacing, whiteSpace } = style;\n    const collapseSpaces = _CanvasTextMetrics._collapseSpaces(whiteSpace);\n    const collapseNewlines = _CanvasTextMetrics._collapseNewlines(whiteSpace);\n    let canPrependSpaces = !collapseSpaces;\n    const wordWrapWidth = style.wordWrapWidth + letterSpacing;\n    const tokens = _CanvasTextMetrics._tokenize(text);\n    for (let i = 0; i < tokens.length; i++) {\n      let token = tokens[i];\n      if (_CanvasTextMetrics._isNewline(token)) {\n        if (!collapseNewlines) {\n          lines += _CanvasTextMetrics._addLine(line);\n          canPrependSpaces = !collapseSpaces;\n          line = \"\";\n          width = 0;\n          continue;\n        }\n        token = \" \";\n      }\n      if (collapseSpaces) {\n        const currIsBreakingSpace = _CanvasTextMetrics.isBreakingSpace(token);\n        const lastIsBreakingSpace = _CanvasTextMetrics.isBreakingSpace(line[line.length - 1]);\n        if (currIsBreakingSpace && lastIsBreakingSpace) {\n          continue;\n        }\n      }\n      const tokenWidth = _CanvasTextMetrics._getFromCache(token, letterSpacing, cache, context);\n      if (tokenWidth > wordWrapWidth) {\n        if (line !== \"\") {\n          lines += _CanvasTextMetrics._addLine(line);\n          line = \"\";\n          width = 0;\n        }\n        if (_CanvasTextMetrics.canBreakWords(token, style.breakWords)) {\n          const characters = _CanvasTextMetrics.wordWrapSplit(token);\n          for (let j = 0; j < characters.length; j++) {\n            let char = characters[j];\n            let lastChar = char;\n            let k = 1;\n            while (characters[j + k]) {\n              const nextChar = characters[j + k];\n              if (!_CanvasTextMetrics.canBreakChars(lastChar, nextChar, token, j, style.breakWords)) {\n                char += nextChar;\n              } else {\n                break;\n              }\n              lastChar = nextChar;\n              k++;\n            }\n            j += k - 1;\n            const characterWidth = _CanvasTextMetrics._getFromCache(char, letterSpacing, cache, context);\n            if (characterWidth + width > wordWrapWidth) {\n              lines += _CanvasTextMetrics._addLine(line);\n              canPrependSpaces = false;\n              line = \"\";\n              width = 0;\n            }\n            line += char;\n            width += characterWidth;\n          }\n        } else {\n          if (line.length > 0) {\n            lines += _CanvasTextMetrics._addLine(line);\n            line = \"\";\n            width = 0;\n          }\n          const isLastToken = i === tokens.length - 1;\n          lines += _CanvasTextMetrics._addLine(token, !isLastToken);\n          canPrependSpaces = false;\n          line = \"\";\n          width = 0;\n        }\n      } else {\n        if (tokenWidth + width > wordWrapWidth) {\n          canPrependSpaces = false;\n          lines += _CanvasTextMetrics._addLine(line);\n          line = \"\";\n          width = 0;\n        }\n        if (line.length > 0 || !_CanvasTextMetrics.isBreakingSpace(token) || canPrependSpaces) {\n          line += token;\n          width += tokenWidth;\n        }\n      }\n    }\n    lines += _CanvasTextMetrics._addLine(line, false);\n    return lines;\n  }\n  /**\n   * Convenience function for logging each line added during the wordWrap method.\n   * @param line    - The line of text to add\n   * @param newLine - Add new line character to end\n   * @returns A formatted line\n   */\n  static _addLine(line, newLine = true) {\n    line = _CanvasTextMetrics._trimRight(line);\n    line = newLine ? `${line}\n` : line;\n    return line;\n  }\n  /**\n   * Gets & sets the widths of calculated characters in a cache object\n   * @param key            - The key\n   * @param letterSpacing  - The letter spacing\n   * @param cache          - The cache\n   * @param context        - The canvas context\n   * @returns The from cache.\n   */\n  static _getFromCache(key, letterSpacing, cache, context) {\n    let width = cache[key];\n    if (typeof width !== \"number\") {\n      width = _CanvasTextMetrics._measureText(key, letterSpacing, context) + letterSpacing;\n      cache[key] = width;\n    }\n    return width;\n  }\n  /**\n   * Determines whether we should collapse breaking spaces.\n   * @param whiteSpace - The TextStyle property whiteSpace\n   * @returns Should collapse\n   */\n  static _collapseSpaces(whiteSpace) {\n    return whiteSpace === \"normal\" || whiteSpace === \"pre-line\";\n  }\n  /**\n   * Determines whether we should collapse newLine chars.\n   * @param whiteSpace - The white space\n   * @returns should collapse\n   */\n  static _collapseNewlines(whiteSpace) {\n    return whiteSpace === \"normal\";\n  }\n  /**\n   * Trims breaking whitespaces from string.\n   * @param text - The text\n   * @returns Trimmed string\n   */\n  static _trimRight(text) {\n    if (typeof text !== \"string\") {\n      return \"\";\n    }\n    for (let i = text.length - 1; i >= 0; i--) {\n      const char = text[i];\n      if (!_CanvasTextMetrics.isBreakingSpace(char)) {\n        break;\n      }\n      text = text.slice(0, -1);\n    }\n    return text;\n  }\n  /**\n   * Determines if char is a newline.\n   * @param char - The character\n   * @returns True if newline, False otherwise.\n   */\n  static _isNewline(char) {\n    if (typeof char !== \"string\") {\n      return false;\n    }\n    return _CanvasTextMetrics._newlines.includes(char.charCodeAt(0));\n  }\n  /**\n   * Determines if char is a breaking whitespace.\n   *\n   * It allows one to determine whether char should be a breaking whitespace\n   * For example certain characters in CJK langs or numbers.\n   * It must return a boolean.\n   * @param char - The character\n   * @param [_nextChar] - The next character\n   * @returns True if whitespace, False otherwise.\n   */\n  static isBreakingSpace(char, _nextChar) {\n    if (typeof char !== \"string\") {\n      return false;\n    }\n    return _CanvasTextMetrics._breakingSpaces.includes(char.charCodeAt(0));\n  }\n  /**\n   * Splits a string into words, breaking-spaces and newLine characters\n   * @param text - The text\n   * @returns A tokenized array\n   */\n  static _tokenize(text) {\n    const tokens = [];\n    let token = \"\";\n    if (typeof text !== \"string\") {\n      return tokens;\n    }\n    for (let i = 0; i < text.length; i++) {\n      const char = text[i];\n      const nextChar = text[i + 1];\n      if (_CanvasTextMetrics.isBreakingSpace(char, nextChar) || _CanvasTextMetrics._isNewline(char)) {\n        if (token !== \"\") {\n          tokens.push(token);\n          token = \"\";\n        }\n        tokens.push(char);\n        continue;\n      }\n      token += char;\n    }\n    if (token !== \"\") {\n      tokens.push(token);\n    }\n    return tokens;\n  }\n  /**\n   * Overridable helper method used internally by TextMetrics, exposed to allow customizing the class's behavior.\n   *\n   * It allows one to customise which words should break\n   * Examples are if the token is CJK or numbers.\n   * It must return a boolean.\n   * @param _token - The token\n   * @param breakWords - The style attr break words\n   * @returns Whether to break word or not\n   */\n  static canBreakWords(_token, breakWords) {\n    return breakWords;\n  }\n  /**\n   * Overridable helper method used internally by TextMetrics, exposed to allow customizing the class's behavior.\n   *\n   * It allows one to determine whether a pair of characters\n   * should be broken by newlines\n   * For example certain characters in CJK langs or numbers.\n   * It must return a boolean.\n   * @param _char - The character\n   * @param _nextChar - The next character\n   * @param _token - The token/word the characters are from\n   * @param _index - The index in the token of the char\n   * @param _breakWords - The style attr break words\n   * @returns whether to break word or not\n   */\n  static canBreakChars(_char, _nextChar, _token, _index, _breakWords) {\n    return true;\n  }\n  /**\n   * Overridable helper method used internally by TextMetrics, exposed to allow customizing the class's behavior.\n   *\n   * It is called when a token (usually a word) has to be split into separate pieces\n   * in order to determine the point to break a word.\n   * It must return an array of characters.\n   * @param token - The token to split\n   * @returns The characters of the token\n   * @see CanvasTextMetrics.graphemeSegmenter\n   */\n  static wordWrapSplit(token) {\n    return _CanvasTextMetrics.graphemeSegmenter(token);\n  }\n  /**\n   * Calculates the ascent, descent and fontSize of a given font-style\n   * @param font - String representing the style of the font\n   * @returns Font properties object\n   */\n  static measureFont(font) {\n    if (_CanvasTextMetrics._fonts[font]) {\n      return _CanvasTextMetrics._fonts[font];\n    }\n    const context = _CanvasTextMetrics._context;\n    context.font = font;\n    const metrics = context.measureText(_CanvasTextMetrics.METRICS_STRING + _CanvasTextMetrics.BASELINE_SYMBOL);\n    const properties = {\n      ascent: metrics.actualBoundingBoxAscent,\n      descent: metrics.actualBoundingBoxDescent,\n      fontSize: metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent\n    };\n    _CanvasTextMetrics._fonts[font] = properties;\n    return properties;\n  }\n  /**\n   * Clear font metrics in metrics cache.\n   * @param {string} [font] - font name. If font name not set then clear cache for all fonts.\n   */\n  static clearMetrics(font = \"\") {\n    if (font) {\n      delete _CanvasTextMetrics._fonts[font];\n    } else {\n      _CanvasTextMetrics._fonts = {};\n    }\n  }\n  /**\n   * Cached canvas element for measuring text\n   * TODO: this should be private, but isn't because of backward compat, will fix later.\n   * @ignore\n   */\n  static get _canvas() {\n    if (!_CanvasTextMetrics.__canvas) {\n      let canvas;\n      try {\n        const c = new OffscreenCanvas(0, 0);\n        const context = c.getContext(\"2d\", contextSettings);\n        if (context?.measureText) {\n          _CanvasTextMetrics.__canvas = c;\n          return c;\n        }\n        canvas = DOMAdapter.get().createCanvas();\n      } catch (_cx) {\n        canvas = DOMAdapter.get().createCanvas();\n      }\n      canvas.width = canvas.height = 10;\n      _CanvasTextMetrics.__canvas = canvas;\n    }\n    return _CanvasTextMetrics.__canvas;\n  }\n  /**\n   * TODO: this should be private, but isn't because of backward compat, will fix later.\n   * @ignore\n   */\n  static get _context() {\n    if (!_CanvasTextMetrics.__context) {\n      _CanvasTextMetrics.__context = _CanvasTextMetrics._canvas.getContext(\"2d\", contextSettings);\n    }\n    return _CanvasTextMetrics.__context;\n  }\n};\n/**\n * String used for calculate font metrics.\n * These characters are all tall to help calculate the height required for text.\n */\n_CanvasTextMetrics.METRICS_STRING = \"|\\xC9q\\xC5\";\n/** Baseline symbol for calculate font metrics. */\n_CanvasTextMetrics.BASELINE_SYMBOL = \"M\";\n/** Baseline multiplier for calculate font metrics. */\n_CanvasTextMetrics.BASELINE_MULTIPLIER = 1.4;\n/** Height multiplier for setting height of canvas to calculate font metrics. */\n_CanvasTextMetrics.HEIGHT_MULTIPLIER = 2;\n/**\n * A Unicode \"character\", or \"grapheme cluster\", can be composed of multiple Unicode code points,\n * such as letters with diacritical marks (e.g. `'\\u0065\\u0301'`, letter e with acute)\n * or emojis with modifiers (e.g. `'\\uD83E\\uDDD1\\u200D\\uD83D\\uDCBB'`, technologist).\n * The new `Intl.Segmenter` API in ES2022 can split the string into grapheme clusters correctly. If it is not available,\n * PixiJS will fallback to use the iterator of String, which can only spilt the string into code points.\n * If you want to get full functionality in environments that don't support `Intl.Segmenter` (such as Firefox),\n * you can use other libraries such as [grapheme-splitter]{@link https://www.npmjs.com/package/grapheme-splitter}\n * or [graphemer]{@link https://www.npmjs.com/package/graphemer} to create a polyfill. Since these libraries can be\n * relatively large in size to handle various Unicode grapheme clusters properly, PixiJS won't use them directly.\n */\n_CanvasTextMetrics.graphemeSegmenter = (() => {\n  if (typeof Intl?.Segmenter === \"function\") {\n    const segmenter = new Intl.Segmenter();\n    return (s) => [...segmenter.segment(s)].map((x) => x.segment);\n  }\n  return (s) => [...s];\n})();\n/**\n * New rendering behavior for letter-spacing which uses Chrome's new native API. This will\n * lead to more accurate letter-spacing results because it does not try to manually draw\n * each character. However, this Chrome API is experimental and may not serve all cases yet.\n * @see TextMetrics.experimentalLetterSpacingSupported\n */\n_CanvasTextMetrics.experimentalLetterSpacing = false;\n/** Cache of {@see TextMetrics.FontMetrics} objects. */\n_CanvasTextMetrics._fonts = {};\n/** Cache of new line chars. */\n_CanvasTextMetrics._newlines = [\n  10,\n  // line feed\n  13\n  // carriage return\n];\n/** Cache of breaking spaces. */\n_CanvasTextMetrics._breakingSpaces = [\n  9,\n  // character tabulation\n  32,\n  // space\n  8192,\n  // en quad\n  8193,\n  // em quad\n  8194,\n  // en space\n  8195,\n  // em space\n  8196,\n  // three-per-em space\n  8197,\n  // four-per-em space\n  8198,\n  // six-per-em space\n  8200,\n  // punctuation space\n  8201,\n  // thin space\n  8202,\n  // hair space\n  8287,\n  // medium mathematical space\n  12288\n  // ideographic space\n];\n_CanvasTextMetrics._measurementCache = {};\nlet CanvasTextMetrics = _CanvasTextMetrics;\n\nexport { CanvasTextMetrics };\n//# sourceMappingURL=CanvasTextMetrics.mjs.map\n","import { Color } from '../../../../color/Color.mjs';\nimport { Matrix } from '../../../../maths/matrix/Matrix.mjs';\nimport { Texture } from '../../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { warn } from '../../../../utils/logging/warn.mjs';\nimport { FillGradient } from '../../../graphics/shared/fill/FillGradient.mjs';\nimport { FillPattern } from '../../../graphics/shared/fill/FillPattern.mjs';\n\n\"use strict\";\nconst PRECISION = 1e5;\nfunction getCanvasFillStyle(fillStyle, context, textMetrics, padding = 0) {\n  if (fillStyle.texture === Texture.WHITE && !fillStyle.fill) {\n    return Color.shared.setValue(fillStyle.color).setAlpha(fillStyle.alpha ?? 1).toHexa();\n  } else if (!fillStyle.fill) {\n    const pattern = context.createPattern(fillStyle.texture.source.resource, \"repeat\");\n    const tempMatrix = fillStyle.matrix.copyTo(Matrix.shared);\n    tempMatrix.scale(fillStyle.texture.frame.width, fillStyle.texture.frame.height);\n    pattern.setTransform(tempMatrix);\n    return pattern;\n  } else if (fillStyle.fill instanceof FillPattern) {\n    const fillPattern = fillStyle.fill;\n    const pattern = context.createPattern(fillPattern.texture.source.resource, \"repeat\");\n    const tempMatrix = fillPattern.transform.copyTo(Matrix.shared);\n    tempMatrix.scale(\n      fillPattern.texture.frame.width,\n      fillPattern.texture.frame.height\n    );\n    pattern.setTransform(tempMatrix);\n    return pattern;\n  } else if (fillStyle.fill instanceof FillGradient) {\n    const fillGradient = fillStyle.fill;\n    const isLinear = fillGradient.type === \"linear\";\n    const isLocal = fillGradient.textureSpace === \"local\";\n    let width = 1;\n    let height = 1;\n    if (isLocal && textMetrics) {\n      width = textMetrics.width + padding;\n      height = textMetrics.height + padding;\n    }\n    let gradient;\n    let isNearlyVertical = false;\n    if (isLinear) {\n      const { start, end } = fillGradient;\n      gradient = context.createLinearGradient(\n        start.x * width,\n        start.y * height,\n        end.x * width,\n        end.y * height\n      );\n      isNearlyVertical = Math.abs(end.x - start.x) < Math.abs((end.y - start.y) * 0.1);\n    } else {\n      const { center, innerRadius, outerCenter, outerRadius } = fillGradient;\n      gradient = context.createRadialGradient(\n        center.x * width,\n        center.y * height,\n        innerRadius * width,\n        outerCenter.x * width,\n        outerCenter.y * height,\n        outerRadius * width\n      );\n    }\n    if (isNearlyVertical && isLocal && textMetrics) {\n      const ratio = textMetrics.lineHeight / height;\n      for (let i = 0; i < textMetrics.lines.length; i++) {\n        const start = (i * textMetrics.lineHeight + padding / 2) / height;\n        fillGradient.colorStops.forEach((stop) => {\n          const globalStop = start + stop.offset * ratio;\n          gradient.addColorStop(\n            // fix to 5 decimal places to avoid floating point precision issues\n            Math.floor(globalStop * PRECISION) / PRECISION,\n            Color.shared.setValue(stop.color).toHex()\n          );\n        });\n      }\n    } else {\n      fillGradient.colorStops.forEach((stop) => {\n        gradient.addColorStop(stop.offset, Color.shared.setValue(stop.color).toHex());\n      });\n    }\n    return gradient;\n  }\n  warn(\"FillStyle not recognised\", fillStyle);\n  return \"red\";\n}\n\nexport { getCanvasFillStyle };\n//# sourceMappingURL=getCanvasFillStyle.mjs.map\n","\"use strict\";\nfunction resolveCharacters(chars) {\n  if (chars === \"\") {\n    return [];\n  }\n  if (typeof chars === \"string\") {\n    chars = [chars];\n  }\n  const result = [];\n  for (let i = 0, j = chars.length; i < j; i++) {\n    const item = chars[i];\n    if (Array.isArray(item)) {\n      if (item.length !== 2) {\n        throw new Error(`[BitmapFont]: Invalid character range length, expecting 2 got ${item.length}.`);\n      }\n      if (item[0].length === 0 || item[1].length === 0) {\n        throw new Error(\"[BitmapFont]: Invalid character delimiter.\");\n      }\n      const startCode = item[0].charCodeAt(0);\n      const endCode = item[1].charCodeAt(0);\n      if (endCode < startCode) {\n        throw new Error(\"[BitmapFont]: Invalid character range.\");\n      }\n      for (let i2 = startCode, j2 = endCode; i2 <= j2; i2++) {\n        result.push(String.fromCharCode(i2));\n      }\n    } else {\n      result.push(...Array.from(item));\n    }\n  }\n  if (result.length === 0) {\n    throw new Error(\"[BitmapFont]: Empty set when resolving characters.\");\n  }\n  return result;\n}\n\nexport { resolveCharacters };\n//# sourceMappingURL=resolveCharacters.mjs.map\n","import { Color } from '../../color/Color.mjs';\nimport { Rectangle } from '../../maths/shapes/Rectangle.mjs';\nimport { CanvasPool } from '../../rendering/renderers/shared/texture/CanvasPool.mjs';\nimport { ImageSource } from '../../rendering/renderers/shared/texture/sources/ImageSource.mjs';\nimport { Texture } from '../../rendering/renderers/shared/texture/Texture.mjs';\nimport { deprecation, v8_0_0 } from '../../utils/logging/deprecation.mjs';\nimport { CanvasTextMetrics } from '../text/canvas/CanvasTextMetrics.mjs';\nimport { fontStringFromTextStyle } from '../text/canvas/utils/fontStringFromTextStyle.mjs';\nimport { getCanvasFillStyle } from '../text/canvas/utils/getCanvasFillStyle.mjs';\nimport { TextStyle } from '../text/TextStyle.mjs';\nimport { AbstractBitmapFont } from './AbstractBitmapFont.mjs';\nimport { resolveCharacters } from './utils/resolveCharacters.mjs';\n\n\"use strict\";\nconst _DynamicBitmapFont = class _DynamicBitmapFont extends AbstractBitmapFont {\n  /**\n   * @param options - The options for the dynamic bitmap font.\n   */\n  constructor(options) {\n    super();\n    /**\n     * this is a resolution modifier for the font size..\n     * texture resolution will also be used to scale texture according to its font size also\n     */\n    this.resolution = 1;\n    /** The pages of the font. */\n    this.pages = [];\n    this._padding = 0;\n    this._measureCache = /* @__PURE__ */ Object.create(null);\n    this._currentChars = [];\n    this._currentX = 0;\n    this._currentY = 0;\n    this._currentPageIndex = -1;\n    this._skipKerning = false;\n    const dynamicOptions = { ..._DynamicBitmapFont.defaultOptions, ...options };\n    this._textureSize = dynamicOptions.textureSize;\n    this._mipmap = dynamicOptions.mipmap;\n    const style = dynamicOptions.style.clone();\n    if (dynamicOptions.overrideFill) {\n      style._fill.color = 16777215;\n      style._fill.alpha = 1;\n      style._fill.texture = Texture.WHITE;\n      style._fill.fill = null;\n    }\n    this.applyFillAsTint = dynamicOptions.overrideFill;\n    const requestedFontSize = style.fontSize;\n    style.fontSize = this.baseMeasurementFontSize;\n    const font = fontStringFromTextStyle(style);\n    if (dynamicOptions.overrideSize) {\n      if (style._stroke) {\n        style._stroke.width *= this.baseRenderedFontSize / requestedFontSize;\n      }\n    } else {\n      style.fontSize = this.baseRenderedFontSize = requestedFontSize;\n    }\n    this._style = style;\n    this._skipKerning = dynamicOptions.skipKerning ?? false;\n    this.resolution = dynamicOptions.resolution ?? 1;\n    this._padding = dynamicOptions.padding ?? 4;\n    this.fontMetrics = CanvasTextMetrics.measureFont(font);\n    this.lineHeight = style.lineHeight || this.fontMetrics.fontSize || style.fontSize;\n  }\n  ensureCharacters(chars) {\n    const charList = resolveCharacters(chars).filter((char) => !this._currentChars.includes(char)).filter((char, index, self) => self.indexOf(char) === index);\n    if (!charList.length)\n      return;\n    this._currentChars = [...this._currentChars, ...charList];\n    let pageData;\n    if (this._currentPageIndex === -1) {\n      pageData = this._nextPage();\n    } else {\n      pageData = this.pages[this._currentPageIndex];\n    }\n    let { canvas, context } = pageData.canvasAndContext;\n    let textureSource = pageData.texture.source;\n    const style = this._style;\n    let currentX = this._currentX;\n    let currentY = this._currentY;\n    const fontScale = this.baseRenderedFontSize / this.baseMeasurementFontSize;\n    const padding = this._padding * fontScale;\n    let maxCharHeight = 0;\n    let skipTexture = false;\n    const maxTextureWidth = canvas.width / this.resolution;\n    const maxTextureHeight = canvas.height / this.resolution;\n    for (let i = 0; i < charList.length; i++) {\n      const char = charList[i];\n      const metrics = CanvasTextMetrics.measureText(char, style, canvas, false);\n      metrics.lineHeight = metrics.height;\n      const width = metrics.width * fontScale;\n      const textureGlyphWidth = Math.ceil((style.fontStyle === \"italic\" ? 2 : 1) * width);\n      const height = metrics.height * fontScale;\n      const paddedWidth = textureGlyphWidth + padding * 2;\n      const paddedHeight = height + padding * 2;\n      skipTexture = false;\n      if (char !== \"\\n\" && char !== \"\\r\" && char !== \"\t\" && char !== \" \") {\n        skipTexture = true;\n        maxCharHeight = Math.ceil(Math.max(paddedHeight, maxCharHeight));\n      }\n      if (currentX + paddedWidth > maxTextureWidth) {\n        currentY += maxCharHeight;\n        maxCharHeight = paddedHeight;\n        currentX = 0;\n        if (currentY + maxCharHeight > maxTextureHeight) {\n          textureSource.update();\n          const pageData2 = this._nextPage();\n          canvas = pageData2.canvasAndContext.canvas;\n          context = pageData2.canvasAndContext.context;\n          textureSource = pageData2.texture.source;\n          currentY = 0;\n        }\n      }\n      const xAdvance = width / fontScale - (style.dropShadow?.distance ?? 0) - (style._stroke?.width ?? 0);\n      this.chars[char] = {\n        id: char.codePointAt(0),\n        xOffset: -this._padding,\n        yOffset: -this._padding,\n        xAdvance,\n        kerning: {}\n      };\n      if (skipTexture) {\n        this._drawGlyph(\n          context,\n          metrics,\n          currentX + padding,\n          currentY + padding,\n          fontScale,\n          style\n        );\n        const px = textureSource.width * fontScale;\n        const py = textureSource.height * fontScale;\n        const frame = new Rectangle(\n          currentX / px * textureSource.width,\n          currentY / py * textureSource.height,\n          paddedWidth / px * textureSource.width,\n          paddedHeight / py * textureSource.height\n        );\n        this.chars[char].texture = new Texture({\n          source: textureSource,\n          frame\n        });\n        currentX += Math.ceil(paddedWidth);\n      }\n    }\n    textureSource.update();\n    this._currentX = currentX;\n    this._currentY = currentY;\n    this._skipKerning && this._applyKerning(charList, context);\n  }\n  /**\n   * @deprecated since 8.0.0\n   * The map of base page textures (i.e., sheets of glyphs).\n   */\n  get pageTextures() {\n    deprecation(v8_0_0, \"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead.\");\n    return this.pages;\n  }\n  _applyKerning(newChars, context) {\n    const measureCache = this._measureCache;\n    for (let i = 0; i < newChars.length; i++) {\n      const first = newChars[i];\n      for (let j = 0; j < this._currentChars.length; j++) {\n        const second = this._currentChars[j];\n        let c1 = measureCache[first];\n        if (!c1)\n          c1 = measureCache[first] = context.measureText(first).width;\n        let c2 = measureCache[second];\n        if (!c2)\n          c2 = measureCache[second] = context.measureText(second).width;\n        let total = context.measureText(first + second).width;\n        let amount = total - (c1 + c2);\n        if (amount) {\n          this.chars[first].kerning[second] = amount;\n        }\n        total = context.measureText(first + second).width;\n        amount = total - (c1 + c2);\n        if (amount) {\n          this.chars[second].kerning[first] = amount;\n        }\n      }\n    }\n  }\n  _nextPage() {\n    this._currentPageIndex++;\n    const textureResolution = this.resolution;\n    const canvasAndContext = CanvasPool.getOptimalCanvasAndContext(\n      this._textureSize,\n      this._textureSize,\n      textureResolution\n    );\n    this._setupContext(canvasAndContext.context, this._style, textureResolution);\n    const resolution = textureResolution * (this.baseRenderedFontSize / this.baseMeasurementFontSize);\n    const texture = new Texture({\n      source: new ImageSource({\n        resource: canvasAndContext.canvas,\n        resolution,\n        alphaMode: \"premultiply-alpha-on-upload\",\n        autoGenerateMipmaps: this._mipmap\n      })\n    });\n    const pageData = {\n      canvasAndContext,\n      texture\n    };\n    this.pages[this._currentPageIndex] = pageData;\n    return pageData;\n  }\n  // canvas style!\n  _setupContext(context, style, resolution) {\n    style.fontSize = this.baseRenderedFontSize;\n    context.scale(resolution, resolution);\n    context.font = fontStringFromTextStyle(style);\n    style.fontSize = this.baseMeasurementFontSize;\n    context.textBaseline = style.textBaseline;\n    const stroke = style._stroke;\n    const strokeThickness = stroke?.width ?? 0;\n    if (stroke) {\n      context.lineWidth = strokeThickness;\n      context.lineJoin = stroke.join;\n      context.miterLimit = stroke.miterLimit;\n      context.strokeStyle = getCanvasFillStyle(stroke, context);\n    }\n    if (style._fill) {\n      context.fillStyle = getCanvasFillStyle(style._fill, context);\n    }\n    if (style.dropShadow) {\n      const shadowOptions = style.dropShadow;\n      const rgb = Color.shared.setValue(shadowOptions.color).toArray();\n      const dropShadowBlur = shadowOptions.blur * resolution;\n      const dropShadowDistance = shadowOptions.distance * resolution;\n      context.shadowColor = `rgba(${rgb[0] * 255},${rgb[1] * 255},${rgb[2] * 255},${shadowOptions.alpha})`;\n      context.shadowBlur = dropShadowBlur;\n      context.shadowOffsetX = Math.cos(shadowOptions.angle) * dropShadowDistance;\n      context.shadowOffsetY = Math.sin(shadowOptions.angle) * dropShadowDistance;\n    } else {\n      context.shadowColor = \"black\";\n      context.shadowBlur = 0;\n      context.shadowOffsetX = 0;\n      context.shadowOffsetY = 0;\n    }\n  }\n  _drawGlyph(context, metrics, x, y, fontScale, style) {\n    const char = metrics.text;\n    const fontProperties = metrics.fontProperties;\n    const stroke = style._stroke;\n    const strokeThickness = (stroke?.width ?? 0) * fontScale;\n    const tx = x + strokeThickness / 2;\n    const ty = y - strokeThickness / 2;\n    const descent = fontProperties.descent * fontScale;\n    const lineHeight = metrics.lineHeight * fontScale;\n    if (style.stroke && strokeThickness) {\n      context.strokeText(char, tx, ty + lineHeight - descent);\n    }\n    if (style._fill) {\n      context.fillText(char, tx, ty + lineHeight - descent);\n    }\n  }\n  destroy() {\n    super.destroy();\n    for (let i = 0; i < this.pages.length; i++) {\n      const { canvasAndContext, texture } = this.pages[i];\n      CanvasPool.returnCanvasAndContext(canvasAndContext);\n      texture.destroy(true);\n    }\n    this.pages = null;\n  }\n};\n_DynamicBitmapFont.defaultOptions = {\n  textureSize: 512,\n  style: new TextStyle(),\n  mipmap: true\n};\nlet DynamicBitmapFont = _DynamicBitmapFont;\n\nexport { DynamicBitmapFont };\n//# sourceMappingURL=DynamicBitmapFont.mjs.map\n","\"use strict\";\nfunction getBitmapTextLayout(chars, style, font, trimEnd) {\n  const layoutData = {\n    width: 0,\n    height: 0,\n    offsetY: 0,\n    scale: style.fontSize / font.baseMeasurementFontSize,\n    lines: [{\n      width: 0,\n      charPositions: [],\n      spaceWidth: 0,\n      spacesIndex: [],\n      chars: []\n    }]\n  };\n  layoutData.offsetY = font.baseLineOffset;\n  let currentLine = layoutData.lines[0];\n  let previousChar = null;\n  let firstWord = true;\n  const currentWord = {\n    spaceWord: false,\n    width: 0,\n    start: 0,\n    index: 0,\n    // use index to not modify the array as we use it a lot!\n    positions: [],\n    chars: []\n  };\n  const nextWord = (word) => {\n    const start = currentLine.width;\n    for (let j = 0; j < currentWord.index; j++) {\n      const position = word.positions[j];\n      currentLine.chars.push(word.chars[j]);\n      currentLine.charPositions.push(position + start);\n    }\n    currentLine.width += word.width;\n    firstWord = false;\n    currentWord.width = 0;\n    currentWord.index = 0;\n    currentWord.chars.length = 0;\n  };\n  const nextLine = () => {\n    let index = currentLine.chars.length - 1;\n    if (trimEnd) {\n      let lastChar = currentLine.chars[index];\n      while (lastChar === \" \") {\n        currentLine.width -= font.chars[lastChar].xAdvance;\n        lastChar = currentLine.chars[--index];\n      }\n    }\n    layoutData.width = Math.max(layoutData.width, currentLine.width);\n    currentLine = {\n      width: 0,\n      charPositions: [],\n      chars: [],\n      spaceWidth: 0,\n      spacesIndex: []\n    };\n    firstWord = true;\n    layoutData.lines.push(currentLine);\n    layoutData.height += font.lineHeight;\n  };\n  const scale = font.baseMeasurementFontSize / style.fontSize;\n  const adjustedLetterSpacing = style.letterSpacing * scale;\n  const adjustedWordWrapWidth = style.wordWrapWidth * scale;\n  for (let i = 0; i < chars.length + 1; i++) {\n    let char;\n    const isEnd = i === chars.length;\n    if (!isEnd) {\n      char = chars[i];\n    }\n    const charData = font.chars[char] || font.chars[\" \"];\n    const isSpace = /(?:\\s)/.test(char);\n    const isWordBreak = isSpace || char === \"\\r\" || char === \"\\n\" || isEnd;\n    if (isWordBreak) {\n      const addWordToNextLine = !firstWord && style.wordWrap && currentLine.width + currentWord.width - adjustedLetterSpacing > adjustedWordWrapWidth;\n      if (addWordToNextLine) {\n        nextLine();\n        nextWord(currentWord);\n        if (!isEnd) {\n          currentLine.charPositions.push(0);\n        }\n      } else {\n        currentWord.start = currentLine.width;\n        nextWord(currentWord);\n        if (!isEnd) {\n          currentLine.charPositions.push(0);\n        }\n      }\n      if (char === \"\\r\" || char === \"\\n\") {\n        if (currentLine.width !== 0) {\n          nextLine();\n        }\n      } else if (!isEnd) {\n        const spaceWidth = charData.xAdvance + (charData.kerning[previousChar] || 0) + adjustedLetterSpacing;\n        currentLine.width += spaceWidth;\n        currentLine.spaceWidth = spaceWidth;\n        currentLine.spacesIndex.push(currentLine.charPositions.length);\n        currentLine.chars.push(char);\n      }\n    } else {\n      const kerning = charData.kerning[previousChar] || 0;\n      const nextCharWidth = charData.xAdvance + kerning + adjustedLetterSpacing;\n      currentWord.positions[currentWord.index++] = currentWord.width + kerning;\n      currentWord.chars.push(char);\n      currentWord.width += nextCharWidth;\n    }\n    previousChar = char;\n  }\n  nextLine();\n  if (style.align === \"center\") {\n    alignCenter(layoutData);\n  } else if (style.align === \"right\") {\n    alignRight(layoutData);\n  } else if (style.align === \"justify\") {\n    alignJustify(layoutData);\n  }\n  return layoutData;\n}\nfunction alignCenter(measurementData) {\n  for (let i = 0; i < measurementData.lines.length; i++) {\n    const line = measurementData.lines[i];\n    const offset = measurementData.width / 2 - line.width / 2;\n    for (let j = 0; j < line.charPositions.length; j++) {\n      line.charPositions[j] += offset;\n    }\n  }\n}\nfunction alignRight(measurementData) {\n  for (let i = 0; i < measurementData.lines.length; i++) {\n    const line = measurementData.lines[i];\n    const offset = measurementData.width - line.width;\n    for (let j = 0; j < line.charPositions.length; j++) {\n      line.charPositions[j] += offset;\n    }\n  }\n}\nfunction alignJustify(measurementData) {\n  const width = measurementData.width;\n  for (let i = 0; i < measurementData.lines.length; i++) {\n    const line = measurementData.lines[i];\n    let indy = 0;\n    let spaceIndex = line.spacesIndex[indy++];\n    let offset = 0;\n    const totalSpaces = line.spacesIndex.length;\n    const newSpaceWidth = (width - line.width) / totalSpaces;\n    const spaceWidth = newSpaceWidth;\n    for (let j = 0; j < line.charPositions.length; j++) {\n      if (j === spaceIndex) {\n        spaceIndex = line.spacesIndex[indy++];\n        offset += spaceWidth;\n      }\n      line.charPositions[j] += offset;\n    }\n  }\n}\n\nexport { getBitmapTextLayout };\n//# sourceMappingURL=getBitmapTextLayout.mjs.map\n","import { Cache } from '../../assets/cache/Cache.mjs';\nimport { deprecation, v8_0_0 } from '../../utils/logging/deprecation.mjs';\nimport { warn } from '../../utils/logging/warn.mjs';\nimport { TextStyle } from '../text/TextStyle.mjs';\nimport { DynamicBitmapFont } from './DynamicBitmapFont.mjs';\nimport { getBitmapTextLayout } from './utils/getBitmapTextLayout.mjs';\nimport { resolveCharacters } from './utils/resolveCharacters.mjs';\n\n\"use strict\";\nlet fontCount = 0;\nclass BitmapFontManagerClass {\n  constructor() {\n    /**\n     * This character set includes all the letters in the alphabet (both lower- and upper- case).\n     * @type {string[][]}\n     * @example\n     * BitmapFont.from('ExampleFont', style, { chars: BitmapFont.ALPHA })\n     */\n    this.ALPHA = [[\"a\", \"z\"], [\"A\", \"Z\"], \" \"];\n    /**\n     * This character set includes all decimal digits (from 0 to 9).\n     * @type {string[][]}\n     * @example\n     * BitmapFont.from('ExampleFont', style, { chars: BitmapFont.NUMERIC })\n     */\n    this.NUMERIC = [[\"0\", \"9\"]];\n    /**\n     * This character set is the union of `BitmapFont.ALPHA` and `BitmapFont.NUMERIC`.\n     * @type {string[][]}\n     */\n    this.ALPHANUMERIC = [[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"], \" \"];\n    /**\n     * This character set consists of all the ASCII table.\n     * @member {string[][]}\n     * @see http://www.asciitable.com/\n     */\n    this.ASCII = [[\" \", \"~\"]];\n    /** Default options for installing a new BitmapFont. */\n    this.defaultOptions = {\n      chars: this.ALPHANUMERIC,\n      resolution: 1,\n      padding: 4,\n      skipKerning: false\n    };\n  }\n  /**\n   * Get a font for the specified text and style.\n   * @param text - The text to get the font for\n   * @param style - The style to use\n   */\n  getFont(text, style) {\n    let fontFamilyKey = `${style.fontFamily}-bitmap`;\n    let overrideFill = true;\n    if (style._fill.fill && !style._stroke) {\n      fontFamilyKey += style._fill.fill.styleKey;\n      overrideFill = false;\n    } else if (style._stroke || style.dropShadow) {\n      let key = style.styleKey;\n      key = key.substring(0, key.lastIndexOf(\"-\"));\n      fontFamilyKey = `${key}-bitmap`;\n      overrideFill = false;\n    }\n    if (!Cache.has(fontFamilyKey)) {\n      const fnt = new DynamicBitmapFont({\n        style,\n        overrideFill,\n        overrideSize: true,\n        ...this.defaultOptions\n      });\n      fontCount++;\n      if (fontCount > 50) {\n        warn(\"BitmapText\", `You have dynamically created ${fontCount} bitmap fonts, this can be inefficient. Try pre installing your font styles using \\`BitmapFont.install({name:\"style1\", style})\\``);\n      }\n      fnt.once(\"destroy\", () => {\n        fontCount--;\n        Cache.remove(fontFamilyKey);\n      });\n      Cache.set(\n        fontFamilyKey,\n        fnt\n      );\n    }\n    const dynamicFont = Cache.get(fontFamilyKey);\n    dynamicFont.ensureCharacters?.(text);\n    return dynamicFont;\n  }\n  /**\n   * Get the layout of a text for the specified style.\n   * @param text - The text to get the layout for\n   * @param style - The style to use\n   * @param trimEnd - Whether to ignore whitespaces at the end of each line\n   */\n  getLayout(text, style, trimEnd = true) {\n    const bitmapFont = this.getFont(text, style);\n    return getBitmapTextLayout([...text], style, bitmapFont, trimEnd);\n  }\n  /**\n   * Measure the text using the specified style.\n   * @param text - The text to measure\n   * @param style - The style to use\n   * @param trimEnd - Whether to ignore whitespaces at the end of each line\n   */\n  measureText(text, style, trimEnd = true) {\n    return this.getLayout(text, style, trimEnd);\n  }\n  // eslint-disable-next-line max-len\n  install(...args) {\n    let options = args[0];\n    if (typeof options === \"string\") {\n      options = {\n        name: options,\n        style: args[1],\n        chars: args[2]?.chars,\n        resolution: args[2]?.resolution,\n        padding: args[2]?.padding,\n        skipKerning: args[2]?.skipKerning\n      };\n      deprecation(v8_0_0, \"BitmapFontManager.install(name, style, options) is deprecated, use BitmapFontManager.install({name, style, ...options})\");\n    }\n    const name = options?.name;\n    if (!name) {\n      throw new Error(\"[BitmapFontManager] Property `name` is required.\");\n    }\n    options = { ...this.defaultOptions, ...options };\n    const textStyle = options.style;\n    const style = textStyle instanceof TextStyle ? textStyle : new TextStyle(textStyle);\n    const overrideFill = style._fill.fill !== null && style._fill.fill !== void 0;\n    const font = new DynamicBitmapFont({\n      style,\n      overrideFill,\n      skipKerning: options.skipKerning,\n      padding: options.padding,\n      resolution: options.resolution,\n      overrideSize: false\n    });\n    const flatChars = resolveCharacters(options.chars);\n    font.ensureCharacters(flatChars.join(\"\"));\n    Cache.set(`${name}-bitmap`, font);\n    font.once(\"destroy\", () => Cache.remove(`${name}-bitmap`));\n    return font;\n  }\n  /**\n   * Uninstalls a bitmap font from the cache.\n   * @param {string} name - The name of the bitmap font to uninstall.\n   */\n  uninstall(name) {\n    const cacheKey = `${name}-bitmap`;\n    const font = Cache.get(cacheKey);\n    if (font) {\n      font.destroy();\n    }\n  }\n}\nconst BitmapFontManager = new BitmapFontManagerClass();\n\nexport { BitmapFontManager };\n//# sourceMappingURL=BitmapFontManager.mjs.map\n","\"use strict\";\nfunction pointInTriangle(px, py, x1, y1, x2, y2, x3, y3) {\n  const v2x = x3 - x1;\n  const v2y = y3 - y1;\n  const v1x = x2 - x1;\n  const v1y = y2 - y1;\n  const v0x = px - x1;\n  const v0y = py - y1;\n  const dot00 = v2x * v2x + v2y * v2y;\n  const dot01 = v2x * v1x + v2y * v1y;\n  const dot02 = v2x * v0x + v2y * v0y;\n  const dot11 = v1x * v1x + v1y * v1y;\n  const dot12 = v1x * v0x + v1y * v0y;\n  const invDenom = 1 / (dot00 * dot11 - dot01 * dot01);\n  const u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n  const v = (dot00 * dot12 - dot01 * dot02) * invDenom;\n  return u >= 0 && v >= 0 && u + v < 1;\n}\n\nexport { pointInTriangle };\n//# sourceMappingURL=pointInTriangle.mjs.map\n","import { deprecation, v8_0_0 } from '../../../utils/logging/deprecation.mjs';\nimport { ViewContainer } from '../../view/ViewContainer.mjs';\nimport { GraphicsContext } from './GraphicsContext.mjs';\n\n\"use strict\";\nclass Graphics extends ViewContainer {\n  /**\n   * @param options - Options for the Graphics.\n   */\n  constructor(options) {\n    if (options instanceof GraphicsContext) {\n      options = { context: options };\n    }\n    const { context, roundPixels, ...rest } = options || {};\n    super({\n      label: \"Graphics\",\n      ...rest\n    });\n    this.renderPipeId = \"graphics\";\n    if (!context) {\n      this._context = this._ownedContext = new GraphicsContext();\n    } else {\n      this._context = context;\n    }\n    this._context.on(\"update\", this.onViewUpdate, this);\n    this.allowChildren = false;\n    this.roundPixels = roundPixels ?? false;\n  }\n  set context(context) {\n    if (context === this._context)\n      return;\n    this._context.off(\"update\", this.onViewUpdate, this);\n    this._context = context;\n    this._context.on(\"update\", this.onViewUpdate, this);\n    this.onViewUpdate();\n  }\n  get context() {\n    return this._context;\n  }\n  /**\n   * The local bounds of the graphic.\n   * @type {rendering.Bounds}\n   */\n  get bounds() {\n    return this._context.bounds;\n  }\n  /**\n   * Graphics objects do not need to update their bounds as the context handles this.\n   * @private\n   */\n  updateBounds() {\n  }\n  /**\n   * Checks if the object contains the given point.\n   * @param point - The point to check\n   */\n  containsPoint(point) {\n    return this._context.containsPoint(point);\n  }\n  /**\n   * Destroys this graphics renderable and optionally its context.\n   * @param options - Options parameter. A boolean will act as if all options\n   *\n   * If the context was created by this graphics and `destroy(false)` or `destroy()` is called\n   * then the context will still be destroyed.\n   *\n   * If you want to explicitly not destroy this context that this graphics created,\n   * then you should pass destroy({ context: false })\n   *\n   * If the context was passed in as an argument to the constructor then it will not be destroyed\n   * @param {boolean} [options.texture=false] - Should destroy the texture of the graphics context\n   * @param {boolean} [options.textureSource=false] - Should destroy the texture source of the graphics context\n   * @param {boolean} [options.context=false] - Should destroy the context\n   */\n  destroy(options) {\n    if (this._ownedContext && !options) {\n      this._ownedContext.destroy(options);\n    } else if (options === true || options?.context === true) {\n      this._context.destroy(options);\n    }\n    this._ownedContext = null;\n    this._context = null;\n    super.destroy(options);\n  }\n  _callContextMethod(method, args) {\n    this.context[method](...args);\n    return this;\n  }\n  // --------------------------------------- GraphicsContext methods ---------------------------------------\n  /**\n   * Sets the current fill style of the graphics context. The fill style can be a color, gradient,\n   * pattern, or a more complex style defined by a FillStyle object.\n   * @param {FillInput} args - The fill style to apply. This can be a simple color, a gradient or\n   * pattern object, or a FillStyle or ConvertedFillStyle object.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  setFillStyle(...args) {\n    return this._callContextMethod(\"setFillStyle\", args);\n  }\n  /**\n   * Sets the current stroke style of the graphics context. Similar to fill styles, stroke styles can\n   * encompass colors, gradients, patterns, or more detailed configurations via a StrokeStyle object.\n   * @param {StrokeInput} args - The stroke style to apply. Can be defined as a color, a gradient or pattern,\n   * or a StrokeStyle or ConvertedStrokeStyle object.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  setStrokeStyle(...args) {\n    return this._callContextMethod(\"setStrokeStyle\", args);\n  }\n  fill(...args) {\n    return this._callContextMethod(\"fill\", args);\n  }\n  /**\n   * Strokes the current path with the current stroke style. This method can take an optional\n   * FillStyle parameter to define the stroke's appearance, including its color, width, and other properties.\n   * @param {FillStyle} args - (Optional) The stroke style to apply. Can be defined as a simple color or a more\n   * complex style object. If omitted, uses the current stroke style.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  stroke(...args) {\n    return this._callContextMethod(\"stroke\", args);\n  }\n  texture(...args) {\n    return this._callContextMethod(\"texture\", args);\n  }\n  /**\n   * Resets the current path. Any previous path and its commands are discarded and a new path is\n   * started. This is typically called before beginning a new shape or series of drawing commands.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  beginPath() {\n    return this._callContextMethod(\"beginPath\", []);\n  }\n  /**\n   * Applies a cutout to the last drawn shape. This is used to create holes or complex shapes by\n   * subtracting a path from the previously drawn path. If a hole is not completely in a shape, it will\n   * fail to cut correctly!\n   */\n  cut() {\n    return this._callContextMethod(\"cut\", []);\n  }\n  arc(...args) {\n    return this._callContextMethod(\"arc\", args);\n  }\n  arcTo(...args) {\n    return this._callContextMethod(\"arcTo\", args);\n  }\n  arcToSvg(...args) {\n    return this._callContextMethod(\"arcToSvg\", args);\n  }\n  bezierCurveTo(...args) {\n    return this._callContextMethod(\"bezierCurveTo\", args);\n  }\n  /**\n   * Closes the current path by drawing a straight line back to the start.\n   * If the shape is already closed or there are no points in the path, this method does nothing.\n   * @returns The instance of the current object for chaining.\n   */\n  closePath() {\n    return this._callContextMethod(\"closePath\", []);\n  }\n  ellipse(...args) {\n    return this._callContextMethod(\"ellipse\", args);\n  }\n  circle(...args) {\n    return this._callContextMethod(\"circle\", args);\n  }\n  path(...args) {\n    return this._callContextMethod(\"path\", args);\n  }\n  lineTo(...args) {\n    return this._callContextMethod(\"lineTo\", args);\n  }\n  moveTo(...args) {\n    return this._callContextMethod(\"moveTo\", args);\n  }\n  quadraticCurveTo(...args) {\n    return this._callContextMethod(\"quadraticCurveTo\", args);\n  }\n  rect(...args) {\n    return this._callContextMethod(\"rect\", args);\n  }\n  roundRect(...args) {\n    return this._callContextMethod(\"roundRect\", args);\n  }\n  poly(...args) {\n    return this._callContextMethod(\"poly\", args);\n  }\n  regularPoly(...args) {\n    return this._callContextMethod(\"regularPoly\", args);\n  }\n  roundPoly(...args) {\n    return this._callContextMethod(\"roundPoly\", args);\n  }\n  roundShape(...args) {\n    return this._callContextMethod(\"roundShape\", args);\n  }\n  filletRect(...args) {\n    return this._callContextMethod(\"filletRect\", args);\n  }\n  chamferRect(...args) {\n    return this._callContextMethod(\"chamferRect\", args);\n  }\n  star(...args) {\n    return this._callContextMethod(\"star\", args);\n  }\n  svg(...args) {\n    return this._callContextMethod(\"svg\", args);\n  }\n  restore(...args) {\n    return this._callContextMethod(\"restore\", args);\n  }\n  /** Saves the current graphics state, including transformations, fill styles, and stroke styles, onto a stack. */\n  save() {\n    return this._callContextMethod(\"save\", []);\n  }\n  /**\n   * Returns the current transformation matrix of the graphics context.\n   * @returns The current transformation matrix.\n   */\n  getTransform() {\n    return this.context.getTransform();\n  }\n  /**\n   * Resets the current transformation matrix to the identity matrix, effectively removing\n   * any transformations (rotation, scaling, translation) previously applied.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  resetTransform() {\n    return this._callContextMethod(\"resetTransform\", []);\n  }\n  rotateTransform(...args) {\n    return this._callContextMethod(\"rotate\", args);\n  }\n  scaleTransform(...args) {\n    return this._callContextMethod(\"scale\", args);\n  }\n  setTransform(...args) {\n    return this._callContextMethod(\"setTransform\", args);\n  }\n  transform(...args) {\n    return this._callContextMethod(\"transform\", args);\n  }\n  translateTransform(...args) {\n    return this._callContextMethod(\"translate\", args);\n  }\n  /**\n   * Clears all drawing commands from the graphics context, effectively resetting it. This includes clearing the path,\n   * and optionally resetting transformations to the identity matrix.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  clear() {\n    return this._callContextMethod(\"clear\", []);\n  }\n  /**\n   * The fill style to use.\n   * @type {ConvertedFillStyle}\n   */\n  get fillStyle() {\n    return this._context.fillStyle;\n  }\n  set fillStyle(value) {\n    this._context.fillStyle = value;\n  }\n  /**\n   * The stroke style to use.\n   * @type {ConvertedStrokeStyle}\n   */\n  get strokeStyle() {\n    return this._context.strokeStyle;\n  }\n  set strokeStyle(value) {\n    this._context.strokeStyle = value;\n  }\n  /**\n   * Creates a new Graphics object.\n   * Note that only the context of the object is cloned, not its transform (position,scale,etc)\n   * @param deep - Whether to create a deep clone of the graphics object. If false, the context\n   * will be shared between the two objects (default false). If true, the context will be\n   * cloned (recommended if you need to modify the context in any way).\n   * @returns - A clone of the graphics object\n   */\n  clone(deep = false) {\n    if (deep) {\n      return new Graphics(this._context.clone());\n    }\n    this._ownedContext = null;\n    const clone = new Graphics(this._context);\n    return clone;\n  }\n  // -------- v7 deprecations ---------\n  /**\n   * @param width\n   * @param color\n   * @param alpha\n   * @deprecated since 8.0.0 Use {@link Graphics#setStrokeStyle} instead\n   */\n  lineStyle(width, color, alpha) {\n    deprecation(v8_0_0, \"Graphics#lineStyle is no longer needed. Use Graphics#setStrokeStyle to set the stroke style.\");\n    const strokeStyle = {};\n    width && (strokeStyle.width = width);\n    color && (strokeStyle.color = color);\n    alpha && (strokeStyle.alpha = alpha);\n    this.context.strokeStyle = strokeStyle;\n    return this;\n  }\n  /**\n   * @param color\n   * @param alpha\n   * @deprecated since 8.0.0 Use {@link Graphics#fill} instead\n   */\n  beginFill(color, alpha) {\n    deprecation(v8_0_0, \"Graphics#beginFill is no longer needed. Use Graphics#fill to fill the shape with the desired style.\");\n    const fillStyle = {};\n    if (color !== void 0)\n      fillStyle.color = color;\n    if (alpha !== void 0)\n      fillStyle.alpha = alpha;\n    this.context.fillStyle = fillStyle;\n    return this;\n  }\n  /**\n   * @deprecated since 8.0.0 Use {@link Graphics#fill} instead\n   */\n  endFill() {\n    deprecation(v8_0_0, \"Graphics#endFill is no longer needed. Use Graphics#fill to fill the shape with the desired style.\");\n    this.context.fill();\n    const strokeStyle = this.context.strokeStyle;\n    if (strokeStyle.width !== GraphicsContext.defaultStrokeStyle.width || strokeStyle.color !== GraphicsContext.defaultStrokeStyle.color || strokeStyle.alpha !== GraphicsContext.defaultStrokeStyle.alpha) {\n      this.context.stroke();\n    }\n    return this;\n  }\n  /**\n   * @param {...any} args\n   * @deprecated since 8.0.0 Use {@link Graphics#circle} instead\n   */\n  drawCircle(...args) {\n    deprecation(v8_0_0, \"Graphics#drawCircle has been renamed to Graphics#circle\");\n    return this._callContextMethod(\"circle\", args);\n  }\n  /**\n   * @param {...any} args\n   * @deprecated since 8.0.0 Use {@link Graphics#ellipse} instead\n   */\n  drawEllipse(...args) {\n    deprecation(v8_0_0, \"Graphics#drawEllipse has been renamed to Graphics#ellipse\");\n    return this._callContextMethod(\"ellipse\", args);\n  }\n  /**\n   * @param {...any} args\n   * @deprecated since 8.0.0 Use {@link Graphics#poly} instead\n   */\n  drawPolygon(...args) {\n    deprecation(v8_0_0, \"Graphics#drawPolygon has been renamed to Graphics#poly\");\n    return this._callContextMethod(\"poly\", args);\n  }\n  /**\n   * @param {...any} args\n   * @deprecated since 8.0.0 Use {@link Graphics#rect} instead\n   */\n  drawRect(...args) {\n    deprecation(v8_0_0, \"Graphics#drawRect has been renamed to Graphics#rect\");\n    return this._callContextMethod(\"rect\", args);\n  }\n  /**\n   * @param {...any} args\n   * @deprecated since 8.0.0 Use {@link Graphics#roundRect} instead\n   */\n  drawRoundedRect(...args) {\n    deprecation(v8_0_0, \"Graphics#drawRoundedRect has been renamed to Graphics#roundRect\");\n    return this._callContextMethod(\"roundRect\", args);\n  }\n  /**\n   * @param {...any} args\n   * @deprecated since 8.0.0 Use {@link Graphics#star} instead\n   */\n  drawStar(...args) {\n    deprecation(v8_0_0, \"Graphics#drawStar has been renamed to Graphics#star\");\n    return this._callContextMethod(\"star\", args);\n  }\n}\n\nexport { Graphics };\n//# sourceMappingURL=Graphics.mjs.map\n","import { Buffer } from '../../../rendering/renderers/shared/buffer/Buffer.mjs';\nimport { BufferUsage } from '../../../rendering/renderers/shared/buffer/const.mjs';\nimport { Geometry } from '../../../rendering/renderers/shared/geometry/Geometry.mjs';\nimport { deprecation, v8_0_0 } from '../../../utils/logging/deprecation.mjs';\n\n\"use strict\";\nconst _MeshGeometry = class _MeshGeometry extends Geometry {\n  constructor(...args) {\n    let options = args[0] ?? {};\n    if (options instanceof Float32Array) {\n      deprecation(v8_0_0, \"use new MeshGeometry({ positions, uvs, indices }) instead\");\n      options = {\n        positions: options,\n        uvs: args[1],\n        indices: args[2]\n      };\n    }\n    options = { ..._MeshGeometry.defaultOptions, ...options };\n    const positions = options.positions || new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]);\n    let uvs = options.uvs;\n    if (!uvs) {\n      if (options.positions) {\n        uvs = new Float32Array(positions.length);\n      } else {\n        uvs = new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]);\n      }\n    }\n    const indices = options.indices || new Uint32Array([0, 1, 2, 0, 2, 3]);\n    const shrinkToFit = options.shrinkBuffersToFit;\n    const positionBuffer = new Buffer({\n      data: positions,\n      label: \"attribute-mesh-positions\",\n      shrinkToFit,\n      usage: BufferUsage.VERTEX | BufferUsage.COPY_DST\n    });\n    const uvBuffer = new Buffer({\n      data: uvs,\n      label: \"attribute-mesh-uvs\",\n      shrinkToFit,\n      usage: BufferUsage.VERTEX | BufferUsage.COPY_DST\n    });\n    const indexBuffer = new Buffer({\n      data: indices,\n      label: \"index-mesh-buffer\",\n      shrinkToFit,\n      usage: BufferUsage.INDEX | BufferUsage.COPY_DST\n    });\n    super({\n      attributes: {\n        aPosition: {\n          buffer: positionBuffer,\n          format: \"float32x2\",\n          stride: 2 * 4,\n          offset: 0\n        },\n        aUV: {\n          buffer: uvBuffer,\n          format: \"float32x2\",\n          stride: 2 * 4,\n          offset: 0\n        }\n      },\n      indexBuffer,\n      topology: options.topology\n    });\n    this.batchMode = \"auto\";\n  }\n  /** The positions of the mesh. */\n  get positions() {\n    return this.attributes.aPosition.buffer.data;\n  }\n  /**\n   * Set the positions of the mesh.\n   * When setting the positions, its important that the uvs array is at least as long as the positions array.\n   * otherwise the geometry will not be valid.\n   * @param {Float32Array} value - The positions of the mesh.\n   */\n  set positions(value) {\n    this.attributes.aPosition.buffer.data = value;\n  }\n  /** The UVs of the mesh. */\n  get uvs() {\n    return this.attributes.aUV.buffer.data;\n  }\n  /**\n   * Set the UVs of the mesh.\n   * Its important that the uvs array you set is at least as long as the positions array.\n   * otherwise the geometry will not be valid.\n   * @param {Float32Array} value - The UVs of the mesh.\n   */\n  set uvs(value) {\n    this.attributes.aUV.buffer.data = value;\n  }\n  /** The indices of the mesh. */\n  get indices() {\n    return this.indexBuffer.data;\n  }\n  set indices(value) {\n    this.indexBuffer.data = value;\n  }\n};\n_MeshGeometry.defaultOptions = {\n  topology: \"triangle-list\",\n  shrinkBuffersToFit: false\n};\nlet MeshGeometry = _MeshGeometry;\n\nexport { MeshGeometry };\n//# sourceMappingURL=MeshGeometry.mjs.map\n","import { pointInTriangle } from '../../../maths/point/pointInTriangle.mjs';\nimport { Geometry } from '../../../rendering/renderers/shared/geometry/Geometry.mjs';\nimport { State } from '../../../rendering/renderers/shared/state/State.mjs';\nimport { Texture } from '../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { deprecation, v8_0_0 } from '../../../utils/logging/deprecation.mjs';\nimport { ViewContainer } from '../../view/ViewContainer.mjs';\nimport { MeshGeometry } from './MeshGeometry.mjs';\n\n\"use strict\";\nclass Mesh extends ViewContainer {\n  constructor(...args) {\n    let options = args[0];\n    if (options instanceof Geometry) {\n      deprecation(v8_0_0, \"Mesh: use new Mesh({ geometry, shader }) instead\");\n      options = {\n        geometry: options,\n        shader: args[1]\n      };\n      if (args[3]) {\n        deprecation(v8_0_0, \"Mesh: drawMode argument has been removed, use geometry.topology instead\");\n        options.geometry.topology = args[3];\n      }\n    }\n    const { geometry, shader, texture, roundPixels, state, ...rest } = options;\n    super({\n      label: \"Mesh\",\n      ...rest\n    });\n    this.renderPipeId = \"mesh\";\n    /** @ignore */\n    this._shader = null;\n    this.allowChildren = false;\n    this.shader = shader ?? null;\n    this.texture = texture ?? shader?.texture ?? Texture.WHITE;\n    this.state = state ?? State.for2d();\n    this._geometry = geometry;\n    this._geometry.on(\"update\", this.onViewUpdate, this);\n    this.roundPixels = roundPixels ?? false;\n  }\n  /** Alias for {@link scene.Mesh#shader}. */\n  get material() {\n    deprecation(v8_0_0, \"mesh.material property has been removed, use mesh.shader instead\");\n    return this._shader;\n  }\n  /**\n   * Represents the vertex and fragment shaders that processes the geometry and runs on the GPU.\n   * Can be shared between multiple Mesh objects.\n   */\n  set shader(value) {\n    if (this._shader === value)\n      return;\n    this._shader = value;\n    this.onViewUpdate();\n  }\n  get shader() {\n    return this._shader;\n  }\n  /**\n   * Includes vertex positions, face indices, colors, UVs, and\n   * custom attributes within buffers, reducing the cost of passing all\n   * this data to the GPU. Can be shared between multiple Mesh objects.\n   */\n  set geometry(value) {\n    if (this._geometry === value)\n      return;\n    this._geometry?.off(\"update\", this.onViewUpdate, this);\n    value.on(\"update\", this.onViewUpdate, this);\n    this._geometry = value;\n    this.onViewUpdate();\n  }\n  get geometry() {\n    return this._geometry;\n  }\n  /** The texture that the Mesh uses. Null for non-MeshMaterial shaders */\n  set texture(value) {\n    value || (value = Texture.EMPTY);\n    const currentTexture = this._texture;\n    if (currentTexture === value)\n      return;\n    if (currentTexture && currentTexture.dynamic)\n      currentTexture.off(\"update\", this.onViewUpdate, this);\n    if (value.dynamic)\n      value.on(\"update\", this.onViewUpdate, this);\n    if (this.shader) {\n      this.shader.texture = value;\n    }\n    this._texture = value;\n    this.onViewUpdate();\n  }\n  get texture() {\n    return this._texture;\n  }\n  get batched() {\n    if (this._shader)\n      return false;\n    if ((this.state.data & 12) !== 0)\n      return false;\n    if (this._geometry instanceof MeshGeometry) {\n      if (this._geometry.batchMode === \"auto\") {\n        return this._geometry.positions.length / 2 <= 100;\n      }\n      return this._geometry.batchMode === \"batch\";\n    }\n    return false;\n  }\n  /**\n   * The local bounds of the mesh.\n   * @type {rendering.Bounds}\n   */\n  get bounds() {\n    return this._geometry.bounds;\n  }\n  /**\n   * Update local bounds of the mesh.\n   * @private\n   */\n  updateBounds() {\n    this._bounds = this._geometry.bounds;\n  }\n  /**\n   * Checks if the object contains the given point.\n   * @param point - The point to check\n   */\n  containsPoint(point) {\n    const { x, y } = point;\n    if (!this.bounds.containsPoint(x, y))\n      return false;\n    const vertices = this.geometry.getBuffer(\"aPosition\").data;\n    const step = this.geometry.topology === \"triangle-strip\" ? 3 : 1;\n    if (this.geometry.getIndex()) {\n      const indices = this.geometry.getIndex().data;\n      const len = indices.length;\n      for (let i = 0; i + 2 < len; i += step) {\n        const ind0 = indices[i] * 2;\n        const ind1 = indices[i + 1] * 2;\n        const ind2 = indices[i + 2] * 2;\n        if (pointInTriangle(\n          x,\n          y,\n          vertices[ind0],\n          vertices[ind0 + 1],\n          vertices[ind1],\n          vertices[ind1 + 1],\n          vertices[ind2],\n          vertices[ind2 + 1]\n        )) {\n          return true;\n        }\n      }\n    } else {\n      const len = vertices.length / 2;\n      for (let i = 0; i + 2 < len; i += step) {\n        const ind0 = i * 2;\n        const ind1 = (i + 1) * 2;\n        const ind2 = (i + 2) * 2;\n        if (pointInTriangle(\n          x,\n          y,\n          vertices[ind0],\n          vertices[ind0 + 1],\n          vertices[ind1],\n          vertices[ind1 + 1],\n          vertices[ind2],\n          vertices[ind2 + 1]\n        )) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  /**\n   * Destroys this sprite renderable and optionally its texture.\n   * @param options - Options parameter. A boolean will act as if all options\n   *  have been set to that value\n   * @param {boolean} [options.texture=false] - Should it destroy the current texture of the renderable as well\n   * @param {boolean} [options.textureSource=false] - Should it destroy the textureSource of the renderable as well\n   */\n  destroy(options) {\n    super.destroy(options);\n    const destroyTexture = typeof options === \"boolean\" ? options : options?.texture;\n    if (destroyTexture) {\n      const destroyTextureSource = typeof options === \"boolean\" ? options : options?.textureSource;\n      this._texture.destroy(destroyTextureSource);\n    }\n    this._geometry?.off(\"update\", this.onViewUpdate, this);\n    this._texture = null;\n    this._geometry = null;\n    this._shader = null;\n  }\n}\n\nexport { Mesh };\n//# sourceMappingURL=Mesh.mjs.map\n","import { Texture } from '../../rendering/renderers/shared/texture/Texture.mjs';\nimport { UPDATE_PRIORITY } from '../../ticker/const.mjs';\nimport { Ticker } from '../../ticker/Ticker.mjs';\nimport { Sprite } from '../sprite/Sprite.mjs';\n\n\"use strict\";\nclass AnimatedSprite extends Sprite {\n  /** @ignore */\n  constructor(...args) {\n    let options = args[0];\n    if (Array.isArray(args[0])) {\n      options = {\n        textures: args[0],\n        autoUpdate: args[1]\n      };\n    }\n    const {\n      animationSpeed = 1,\n      autoPlay = false,\n      autoUpdate = true,\n      loop = true,\n      onComplete = null,\n      onFrameChange = null,\n      onLoop = null,\n      textures,\n      updateAnchor = false,\n      ...rest\n    } = options;\n    const [firstFrame] = textures;\n    super({\n      ...rest,\n      texture: firstFrame instanceof Texture ? firstFrame : firstFrame.texture\n    });\n    this._textures = null;\n    this._durations = null;\n    this._autoUpdate = autoUpdate;\n    this._isConnectedToTicker = false;\n    this.animationSpeed = animationSpeed;\n    this.loop = loop;\n    this.updateAnchor = updateAnchor;\n    this.onComplete = onComplete;\n    this.onFrameChange = onFrameChange;\n    this.onLoop = onLoop;\n    this._currentTime = 0;\n    this._playing = false;\n    this._previousFrame = null;\n    this.textures = textures;\n    if (autoPlay) {\n      this.play();\n    }\n  }\n  /** Stops the AnimatedSprite. */\n  stop() {\n    if (!this._playing) {\n      return;\n    }\n    this._playing = false;\n    if (this._autoUpdate && this._isConnectedToTicker) {\n      Ticker.shared.remove(this.update, this);\n      this._isConnectedToTicker = false;\n    }\n  }\n  /** Plays the AnimatedSprite. */\n  play() {\n    if (this._playing) {\n      return;\n    }\n    this._playing = true;\n    if (this._autoUpdate && !this._isConnectedToTicker) {\n      Ticker.shared.add(this.update, this, UPDATE_PRIORITY.HIGH);\n      this._isConnectedToTicker = true;\n    }\n  }\n  /**\n   * Stops the AnimatedSprite and goes to a specific frame.\n   * @param frameNumber - Frame index to stop at.\n   */\n  gotoAndStop(frameNumber) {\n    this.stop();\n    this.currentFrame = frameNumber;\n  }\n  /**\n   * Goes to a specific frame and begins playing the AnimatedSprite.\n   * @param frameNumber - Frame index to start at.\n   */\n  gotoAndPlay(frameNumber) {\n    this.currentFrame = frameNumber;\n    this.play();\n  }\n  /**\n   * Updates the object transform for rendering.\n   * @param ticker - the ticker to use to update the object.\n   */\n  update(ticker) {\n    if (!this._playing) {\n      return;\n    }\n    const deltaTime = ticker.deltaTime;\n    const elapsed = this.animationSpeed * deltaTime;\n    const previousFrame = this.currentFrame;\n    if (this._durations !== null) {\n      let lag = this._currentTime % 1 * this._durations[this.currentFrame];\n      lag += elapsed / 60 * 1e3;\n      while (lag < 0) {\n        this._currentTime--;\n        lag += this._durations[this.currentFrame];\n      }\n      const sign = Math.sign(this.animationSpeed * deltaTime);\n      this._currentTime = Math.floor(this._currentTime);\n      while (lag >= this._durations[this.currentFrame]) {\n        lag -= this._durations[this.currentFrame] * sign;\n        this._currentTime += sign;\n      }\n      this._currentTime += lag / this._durations[this.currentFrame];\n    } else {\n      this._currentTime += elapsed;\n    }\n    if (this._currentTime < 0 && !this.loop) {\n      this.gotoAndStop(0);\n      if (this.onComplete) {\n        this.onComplete();\n      }\n    } else if (this._currentTime >= this._textures.length && !this.loop) {\n      this.gotoAndStop(this._textures.length - 1);\n      if (this.onComplete) {\n        this.onComplete();\n      }\n    } else if (previousFrame !== this.currentFrame) {\n      if (this.loop && this.onLoop) {\n        if (this.animationSpeed > 0 && this.currentFrame < previousFrame || this.animationSpeed < 0 && this.currentFrame > previousFrame) {\n          this.onLoop();\n        }\n      }\n      this._updateTexture();\n    }\n  }\n  /** Updates the displayed texture to match the current frame index. */\n  _updateTexture() {\n    const currentFrame = this.currentFrame;\n    if (this._previousFrame === currentFrame) {\n      return;\n    }\n    this._previousFrame = currentFrame;\n    this.texture = this._textures[currentFrame];\n    if (this.updateAnchor && this.texture.defaultAnchor) {\n      this.anchor.copyFrom(this.texture.defaultAnchor);\n    }\n    if (this.onFrameChange) {\n      this.onFrameChange(this.currentFrame);\n    }\n  }\n  /** Stops the AnimatedSprite and destroys it. */\n  destroy() {\n    this.stop();\n    super.destroy();\n    this.onComplete = null;\n    this.onFrameChange = null;\n    this.onLoop = null;\n  }\n  /**\n   * A short hand way of creating an AnimatedSprite from an array of frame ids.\n   * @param frames - The array of frames ids the AnimatedSprite will use as its texture frames.\n   * @returns - The new animated sprite with the specified frames.\n   */\n  static fromFrames(frames) {\n    const textures = [];\n    for (let i = 0; i < frames.length; ++i) {\n      textures.push(Texture.from(frames[i]));\n    }\n    return new AnimatedSprite(textures);\n  }\n  /**\n   * A short hand way of creating an AnimatedSprite from an array of image ids.\n   * @param images - The array of image urls the AnimatedSprite will use as its texture frames.\n   * @returns The new animate sprite with the specified images as frames.\n   */\n  static fromImages(images) {\n    const textures = [];\n    for (let i = 0; i < images.length; ++i) {\n      textures.push(Texture.from(images[i]));\n    }\n    return new AnimatedSprite(textures);\n  }\n  /**\n   * The total number of frames in the AnimatedSprite. This is the same as number of textures\n   * assigned to the AnimatedSprite.\n   * @readonly\n   * @default 0\n   */\n  get totalFrames() {\n    return this._textures.length;\n  }\n  /** The array of textures used for this AnimatedSprite. */\n  get textures() {\n    return this._textures;\n  }\n  set textures(value) {\n    if (value[0] instanceof Texture) {\n      this._textures = value;\n      this._durations = null;\n    } else {\n      this._textures = [];\n      this._durations = [];\n      for (let i = 0; i < value.length; i++) {\n        this._textures.push(value[i].texture);\n        this._durations.push(value[i].time);\n      }\n    }\n    this._previousFrame = null;\n    this.gotoAndStop(0);\n    this._updateTexture();\n  }\n  /** The AnimatedSprite's current frame index. */\n  get currentFrame() {\n    let currentFrame = Math.floor(this._currentTime) % this._textures.length;\n    if (currentFrame < 0) {\n      currentFrame += this._textures.length;\n    }\n    return currentFrame;\n  }\n  set currentFrame(value) {\n    if (value < 0 || value > this.totalFrames - 1) {\n      throw new Error(`[AnimatedSprite]: Invalid frame index value ${value}, expected to be between 0 and totalFrames ${this.totalFrames}.`);\n    }\n    const previousFrame = this.currentFrame;\n    this._currentTime = value;\n    if (previousFrame !== this.currentFrame) {\n      this._updateTexture();\n    }\n  }\n  /**\n   * Indicates if the AnimatedSprite is currently playing.\n   * @readonly\n   */\n  get playing() {\n    return this._playing;\n  }\n  /** Whether to use Ticker.shared to auto update animation time. */\n  get autoUpdate() {\n    return this._autoUpdate;\n  }\n  set autoUpdate(value) {\n    if (value !== this._autoUpdate) {\n      this._autoUpdate = value;\n      if (!this._autoUpdate && this._isConnectedToTicker) {\n        Ticker.shared.remove(this.update, this);\n        this._isConnectedToTicker = false;\n      } else if (this._autoUpdate && !this._isConnectedToTicker && this._playing) {\n        Ticker.shared.add(this.update, this);\n        this._isConnectedToTicker = true;\n      }\n    }\n  }\n}\n\nexport { AnimatedSprite };\n//# sourceMappingURL=AnimatedSprite.mjs.map\n","import { Matrix } from '../../maths/matrix/Matrix.mjs';\nimport { ObservablePoint } from '../../maths/point/ObservablePoint.mjs';\n\n\"use strict\";\nclass Transform {\n  /**\n   * @param options - Options for the transform.\n   * @param options.matrix - The matrix to use.\n   * @param options.observer - The observer to use.\n   */\n  constructor({ matrix, observer } = {}) {\n    this.dirty = true;\n    this._matrix = matrix ?? new Matrix();\n    this.observer = observer;\n    this.position = new ObservablePoint(this, 0, 0);\n    this.scale = new ObservablePoint(this, 1, 1);\n    this.pivot = new ObservablePoint(this, 0, 0);\n    this.skew = new ObservablePoint(this, 0, 0);\n    this._rotation = 0;\n    this._cx = 1;\n    this._sx = 0;\n    this._cy = 0;\n    this._sy = 1;\n  }\n  /**\n   * This matrix is computed by combining this Transforms position, scale, rotation, skew, and pivot\n   * properties into a single matrix.\n   * @readonly\n   */\n  get matrix() {\n    const lt = this._matrix;\n    if (!this.dirty)\n      return lt;\n    lt.a = this._cx * this.scale.x;\n    lt.b = this._sx * this.scale.x;\n    lt.c = this._cy * this.scale.y;\n    lt.d = this._sy * this.scale.y;\n    lt.tx = this.position.x - (this.pivot.x * lt.a + this.pivot.y * lt.c);\n    lt.ty = this.position.y - (this.pivot.x * lt.b + this.pivot.y * lt.d);\n    this.dirty = false;\n    return lt;\n  }\n  /**\n   * Called when a value changes.\n   * @param point\n   * @internal\n   * @private\n   */\n  _onUpdate(point) {\n    this.dirty = true;\n    if (point === this.skew) {\n      this.updateSkew();\n    }\n    this.observer?._onUpdate(this);\n  }\n  /** Called when the skew or the rotation changes. */\n  updateSkew() {\n    this._cx = Math.cos(this._rotation + this.skew.y);\n    this._sx = Math.sin(this._rotation + this.skew.y);\n    this._cy = -Math.sin(this._rotation - this.skew.x);\n    this._sy = Math.cos(this._rotation - this.skew.x);\n    this.dirty = true;\n  }\n  toString() {\n    return `[pixi.js/math:Transform position=(${this.position.x}, ${this.position.y}) rotation=${this.rotation} scale=(${this.scale.x}, ${this.scale.y}) skew=(${this.skew.x}, ${this.skew.y}) ]`;\n  }\n  /**\n   * Decomposes a matrix and sets the transforms properties based on it.\n   * @param matrix - The matrix to decompose\n   */\n  setFromMatrix(matrix) {\n    matrix.decompose(this);\n    this.dirty = true;\n  }\n  /** The rotation of the object in radians. */\n  get rotation() {\n    return this._rotation;\n  }\n  set rotation(value) {\n    if (this._rotation !== value) {\n      this._rotation = value;\n      this._onUpdate(this.skew);\n    }\n  }\n}\n\nexport { Transform };\n//# sourceMappingURL=Transform.mjs.map\n","import { Cache } from '../../assets/cache/Cache.mjs';\nimport { ObservablePoint } from '../../maths/point/ObservablePoint.mjs';\nimport { Texture } from '../../rendering/renderers/shared/texture/Texture.mjs';\nimport { deprecation, v8_0_0 } from '../../utils/logging/deprecation.mjs';\nimport { warn } from '../../utils/logging/warn.mjs';\nimport { Transform } from '../../utils/misc/Transform.mjs';\nimport { ViewContainer } from '../view/ViewContainer.mjs';\n\n\"use strict\";\nconst _TilingSprite = class _TilingSprite extends ViewContainer {\n  constructor(...args) {\n    let options = args[0] || {};\n    if (options instanceof Texture) {\n      options = { texture: options };\n    }\n    if (args.length > 1) {\n      deprecation(v8_0_0, \"use new TilingSprite({ texture, width:100, height:100 }) instead\");\n      options.width = args[1];\n      options.height = args[2];\n    }\n    options = { ..._TilingSprite.defaultOptions, ...options };\n    const {\n      texture,\n      anchor,\n      tilePosition,\n      tileScale,\n      tileRotation,\n      width,\n      height,\n      applyAnchorToTexture,\n      roundPixels,\n      ...rest\n    } = options ?? {};\n    super({\n      label: \"TilingSprite\",\n      ...rest\n    });\n    this.renderPipeId = \"tilingSprite\";\n    this.batched = true;\n    this.allowChildren = false;\n    this._anchor = new ObservablePoint(\n      {\n        _onUpdate: () => {\n          this.onViewUpdate();\n        }\n      }\n    );\n    this.applyAnchorToTexture = applyAnchorToTexture;\n    this.texture = texture;\n    this._width = width ?? texture.width;\n    this._height = height ?? texture.height;\n    this._tileTransform = new Transform({\n      observer: {\n        _onUpdate: () => this.onViewUpdate()\n      }\n    });\n    if (anchor)\n      this.anchor = anchor;\n    this.tilePosition = tilePosition;\n    this.tileScale = tileScale;\n    this.tileRotation = tileRotation;\n    this.roundPixels = roundPixels ?? false;\n  }\n  /**\n   * Creates a new tiling sprite.\n   * @param source - The source to create the texture from.\n   * @param options - The options for creating the tiling sprite.\n   * @returns A new tiling sprite.\n   */\n  static from(source, options = {}) {\n    if (typeof source === \"string\") {\n      return new _TilingSprite({\n        texture: Cache.get(source),\n        ...options\n      });\n    }\n    return new _TilingSprite({\n      texture: source,\n      ...options\n    });\n  }\n  /**\n   * @see {@link scene.TilingSpriteOptions.applyAnchorToTexture}\n   * @deprecated since 8.0.0\n   */\n  get uvRespectAnchor() {\n    warn(\"uvRespectAnchor is deprecated, please use applyAnchorToTexture instead\");\n    return this.applyAnchorToTexture;\n  }\n  set uvRespectAnchor(value) {\n    warn(\"uvRespectAnchor is deprecated, please use applyAnchorToTexture instead\");\n    this.applyAnchorToTexture = value;\n  }\n  /**\n   * Changes frame clamping in corresponding textureMatrix\n   * Change to -0.5 to add a pixel to the edge, recommended for transparent trimmed textures in atlas\n   * @default 0.5\n   * @member {number}\n   */\n  get clampMargin() {\n    return this._texture.textureMatrix.clampMargin;\n  }\n  set clampMargin(value) {\n    this._texture.textureMatrix.clampMargin = value;\n  }\n  /**\n   * The anchor sets the origin point of the sprite. The default value is taken from the {@link Texture}\n   * and passed to the constructor.\n   *\n   * The default is `(0,0)`, this means the sprite's origin is the top left.\n   *\n   * Setting the anchor to `(0.5,0.5)` means the sprite's origin is centered.\n   *\n   * Setting the anchor to `(1,1)` would mean the sprite's origin point will be the bottom right corner.\n   *\n   * If you pass only single parameter, it will set both x and y to the same value as shown in the example below.\n   * @example\n   * import { TilingSprite } from 'pixi.js';\n   *\n   * const sprite = new TilingSprite({texture: Texture.WHITE});\n   * sprite.anchor.set(0.5); // This will set the origin to center. (0.5) is same as (0.5, 0.5).\n   */\n  get anchor() {\n    return this._anchor;\n  }\n  set anchor(value) {\n    typeof value === \"number\" ? this._anchor.set(value) : this._anchor.copyFrom(value);\n  }\n  /** The offset of the image that is being tiled. */\n  get tilePosition() {\n    return this._tileTransform.position;\n  }\n  set tilePosition(value) {\n    this._tileTransform.position.copyFrom(value);\n  }\n  /** The scaling of the image that is being tiled. */\n  get tileScale() {\n    return this._tileTransform.scale;\n  }\n  set tileScale(value) {\n    typeof value === \"number\" ? this._tileTransform.scale.set(value) : this._tileTransform.scale.copyFrom(value);\n  }\n  set tileRotation(value) {\n    this._tileTransform.rotation = value;\n  }\n  /** The rotation of the image that is being tiled. */\n  get tileRotation() {\n    return this._tileTransform.rotation;\n  }\n  /** The transform of the image that is being tiled. */\n  get tileTransform() {\n    return this._tileTransform;\n  }\n  set texture(value) {\n    value || (value = Texture.EMPTY);\n    const currentTexture = this._texture;\n    if (currentTexture === value)\n      return;\n    if (currentTexture && currentTexture.dynamic)\n      currentTexture.off(\"update\", this.onViewUpdate, this);\n    if (value.dynamic)\n      value.on(\"update\", this.onViewUpdate, this);\n    this._texture = value;\n    this.onViewUpdate();\n  }\n  /** The texture that the sprite is using. */\n  get texture() {\n    return this._texture;\n  }\n  /** The width of the tiling area. */\n  set width(value) {\n    this._width = value;\n    this.onViewUpdate();\n  }\n  get width() {\n    return this._width;\n  }\n  set height(value) {\n    this._height = value;\n    this.onViewUpdate();\n  }\n  /** The height of the tiling area. */\n  get height() {\n    return this._height;\n  }\n  /**\n   * Sets the size of the TilingSprite to the specified width and height.\n   * This is faster than setting the width and height separately.\n   * @param value - This can be either a number or a [Size]{@link Size} object.\n   * @param height - The height to set. Defaults to the value of `width` if not provided.\n   */\n  setSize(value, height) {\n    if (typeof value === \"object\") {\n      height = value.height ?? value.width;\n      value = value.width;\n    }\n    this._width = value;\n    this._height = height ?? value;\n    this.onViewUpdate();\n  }\n  /**\n   * Retrieves the size of the TilingSprite as a [Size]{@link Size} object.\n   * This is faster than get the width and height separately.\n   * @param out - Optional object to store the size in.\n   * @returns - The size of the TilingSprite.\n   */\n  getSize(out) {\n    out || (out = {});\n    out.width = this._width;\n    out.height = this._height;\n    return out;\n  }\n  /**\n   * @private\n   */\n  updateBounds() {\n    const bounds = this._bounds;\n    const anchor = this._anchor;\n    const width = this._width;\n    const height = this._height;\n    bounds.minX = -anchor._x * width;\n    bounds.maxX = bounds.minX + width;\n    bounds.minY = -anchor._y * height;\n    bounds.maxY = bounds.minY + height;\n  }\n  /**\n   * Checks if the object contains the given point.\n   * @param point - The point to check\n   */\n  containsPoint(point) {\n    const width = this._width;\n    const height = this._height;\n    const x1 = -width * this._anchor._x;\n    let y1 = 0;\n    if (point.x >= x1 && point.x <= x1 + width) {\n      y1 = -height * this._anchor._y;\n      if (point.y >= y1 && point.y <= y1 + height)\n        return true;\n    }\n    return false;\n  }\n  /**\n   * Destroys this sprite renderable and optionally its texture.\n   * @param options - Options parameter. A boolean will act as if all options\n   *  have been set to that value\n   * @param {boolean} [options.texture=false] - Should it destroy the current texture of the renderable as well\n   * @param {boolean} [options.textureSource=false] - Should it destroy the textureSource of the renderable as well\n   */\n  destroy(options = false) {\n    super.destroy(options);\n    this._anchor = null;\n    this._tileTransform = null;\n    this._bounds = null;\n    const destroyTexture = typeof options === \"boolean\" ? options : options?.texture;\n    if (destroyTexture) {\n      const destroyTextureSource = typeof options === \"boolean\" ? options : options?.textureSource;\n      this._texture.destroy(destroyTextureSource);\n    }\n    this._texture = null;\n  }\n};\n/** default options for the TilingSprite */\n_TilingSprite.defaultOptions = {\n  /** The texture to use for the sprite. */\n  texture: Texture.EMPTY,\n  /** The anchor point of the sprite */\n  anchor: { x: 0, y: 0 },\n  /** The offset of the image that is being tiled. */\n  tilePosition: { x: 0, y: 0 },\n  /** Scaling of the image that is being tiled. */\n  tileScale: { x: 1, y: 1 },\n  /** The rotation of the image that is being tiled. */\n  tileRotation: 0,\n  /**\n   * Flags whether the tiling pattern should originate from the origin instead of the top-left corner in\n   * local space.\n   *\n   * This will make the texture coordinates assigned to each vertex dependent on the value of the anchor. Without\n   * this, the top-left corner always gets the (0, 0) texture coordinate.\n   * @default false\n   */\n  applyAnchorToTexture: false\n};\nlet TilingSprite = _TilingSprite;\n\nexport { TilingSprite };\n//# sourceMappingURL=TilingSprite.mjs.map\n","import { ObservablePoint } from '../../maths/point/ObservablePoint.mjs';\nimport { deprecation, v8_0_0 } from '../../utils/logging/deprecation.mjs';\nimport { ViewContainer } from '../view/ViewContainer.mjs';\n\n\"use strict\";\nclass AbstractText extends ViewContainer {\n  constructor(options, styleClass) {\n    const { text, resolution, style, anchor, width, height, roundPixels, ...rest } = options;\n    super({\n      ...rest\n    });\n    this.batched = true;\n    this._resolution = null;\n    this._autoResolution = true;\n    this._didTextUpdate = true;\n    this._styleClass = styleClass;\n    this.text = text ?? \"\";\n    this.style = style;\n    this.resolution = resolution ?? null;\n    this.allowChildren = false;\n    this._anchor = new ObservablePoint(\n      {\n        _onUpdate: () => {\n          this.onViewUpdate();\n        }\n      }\n    );\n    if (anchor)\n      this.anchor = anchor;\n    this.roundPixels = roundPixels ?? false;\n    if (width !== void 0)\n      this.width = width;\n    if (height !== void 0)\n      this.height = height;\n  }\n  /**\n   * The anchor sets the origin point of the text.\n   * The default is `(0,0)`, this means the text's origin is the top left.\n   *\n   * Setting the anchor to `(0.5,0.5)` means the text's origin is centered.\n   *\n   * Setting the anchor to `(1,1)` would mean the text's origin point will be the bottom right corner.\n   *\n   * If you pass only single parameter, it will set both x and y to the same value as shown in the example below.\n   * @example\n   * import { Text } from 'pixi.js';\n   *\n   * const text = new Text('hello world');\n   * text.anchor.set(0.5); // This will set the origin to center. (0.5) is same as (0.5, 0.5).\n   */\n  get anchor() {\n    return this._anchor;\n  }\n  set anchor(value) {\n    typeof value === \"number\" ? this._anchor.set(value) : this._anchor.copyFrom(value);\n  }\n  /** Set the copy for the text object. To split a line you can use '\\n'. */\n  set text(value) {\n    value = value.toString();\n    if (this._text === value)\n      return;\n    this._text = value;\n    this.onViewUpdate();\n  }\n  get text() {\n    return this._text;\n  }\n  /**\n   * The resolution / device pixel ratio of the canvas.\n   * @default 1\n   */\n  set resolution(value) {\n    this._autoResolution = value === null;\n    this._resolution = value;\n    this.onViewUpdate();\n  }\n  get resolution() {\n    return this._resolution;\n  }\n  get style() {\n    return this._style;\n  }\n  /**\n   * Set the style of the text.\n   *\n   * Set up an event listener to listen for changes on the style object and mark the text as dirty.\n   *\n   * If setting the `style` can also be partial {@link AnyTextStyleOptions}.\n   * @type {\n   * text.TextStyle |\n   * Partial<text.TextStyle> |\n   * text.TextStyleOptions |\n   * text.HTMLTextStyle |\n   * Partial<text.HTMLTextStyle> |\n   * text.HTMLTextStyleOptions\n   * }\n   */\n  set style(style) {\n    style || (style = {});\n    this._style?.off(\"update\", this.onViewUpdate, this);\n    if (style instanceof this._styleClass) {\n      this._style = style;\n    } else {\n      this._style = new this._styleClass(style);\n    }\n    this._style.on(\"update\", this.onViewUpdate, this);\n    this.onViewUpdate();\n  }\n  /** The width of the sprite, setting this will actually modify the scale to achieve the value set. */\n  get width() {\n    return Math.abs(this.scale.x) * this.bounds.width;\n  }\n  set width(value) {\n    this._setWidth(value, this.bounds.width);\n  }\n  /** The height of the sprite, setting this will actually modify the scale to achieve the value set. */\n  get height() {\n    return Math.abs(this.scale.y) * this.bounds.height;\n  }\n  set height(value) {\n    this._setHeight(value, this.bounds.height);\n  }\n  /**\n   * Retrieves the size of the Text as a [Size]{@link Size} object.\n   * This is faster than get the width and height separately.\n   * @param out - Optional object to store the size in.\n   * @returns - The size of the Text.\n   */\n  getSize(out) {\n    out || (out = {});\n    out.width = Math.abs(this.scale.x) * this.bounds.width;\n    out.height = Math.abs(this.scale.y) * this.bounds.height;\n    return out;\n  }\n  /**\n   * Sets the size of the Text to the specified width and height.\n   * This is faster than setting the width and height separately.\n   * @param value - This can be either a number or a [Size]{@link Size} object.\n   * @param height - The height to set. Defaults to the value of `width` if not provided.\n   */\n  setSize(value, height) {\n    if (typeof value === \"object\") {\n      height = value.height ?? value.width;\n      value = value.width;\n    } else {\n      height ?? (height = value);\n    }\n    value !== void 0 && this._setWidth(value, this.bounds.width);\n    height !== void 0 && this._setHeight(height, this.bounds.height);\n  }\n  /**\n   * Checks if the text contains the given point.\n   * @param point - The point to check\n   */\n  containsPoint(point) {\n    const width = this.bounds.width;\n    const height = this.bounds.height;\n    const x1 = -width * this.anchor.x;\n    let y1 = 0;\n    if (point.x >= x1 && point.x <= x1 + width) {\n      y1 = -height * this.anchor.y;\n      if (point.y >= y1 && point.y <= y1 + height)\n        return true;\n    }\n    return false;\n  }\n  onViewUpdate() {\n    if (!this.didViewUpdate)\n      this._didTextUpdate = true;\n    super.onViewUpdate();\n  }\n  _getKey() {\n    return `${this.text}:${this._style.styleKey}:${this._resolution}`;\n  }\n  /**\n   * Destroys this text renderable and optionally its style texture.\n   * @param options - Options parameter. A boolean will act as if all options\n   *  have been set to that value\n   * @param {boolean} [options.texture=false] - Should it destroy the texture of the text style\n   * @param {boolean} [options.textureSource=false] - Should it destroy the textureSource of the text style\n   * @param {boolean} [options.style=false] - Should it destroy the style of the text\n   */\n  destroy(options = false) {\n    super.destroy(options);\n    this.owner = null;\n    this._bounds = null;\n    this._anchor = null;\n    if (typeof options === \"boolean\" ? options : options?.style) {\n      this._style.destroy(options);\n    }\n    this._style = null;\n    this._text = null;\n  }\n}\nfunction ensureTextOptions(args, name) {\n  let options = args[0] ?? {};\n  if (typeof options === \"string\" || args[1]) {\n    deprecation(v8_0_0, `use new ${name}({ text: \"hi!\", style }) instead`);\n    options = {\n      text: options,\n      style: args[1]\n    };\n  }\n  return options;\n}\n\nexport { AbstractText, ensureTextOptions };\n//# sourceMappingURL=AbstractText.mjs.map\n","import { AbstractText, ensureTextOptions } from './AbstractText.mjs';\nimport { CanvasTextMetrics } from './canvas/CanvasTextMetrics.mjs';\nimport { TextStyle } from './TextStyle.mjs';\n\n\"use strict\";\nclass Text extends AbstractText {\n  constructor(...args) {\n    const options = ensureTextOptions(args, \"Text\");\n    super(options, TextStyle);\n    this.renderPipeId = \"text\";\n  }\n  /** @private */\n  updateBounds() {\n    const bounds = this._bounds;\n    const anchor = this._anchor;\n    const canvasMeasurement = CanvasTextMetrics.measureText(\n      this._text,\n      this._style\n    );\n    const { width, height } = canvasMeasurement;\n    bounds.minX = -anchor._x * width;\n    bounds.maxX = bounds.minX + width;\n    bounds.minY = -anchor._y * height;\n    bounds.maxY = bounds.minY + height;\n  }\n}\n\nexport { Text };\n//# sourceMappingURL=Text.mjs.map\n","import { warn } from '../../utils/logging/warn.mjs';\nimport { AbstractText, ensureTextOptions } from '../text/AbstractText.mjs';\nimport { TextStyle } from '../text/TextStyle.mjs';\nimport { BitmapFontManager } from './BitmapFontManager.mjs';\n\n\"use strict\";\nclass BitmapText extends AbstractText {\n  constructor(...args) {\n    var _a;\n    const options = ensureTextOptions(args, \"BitmapText\");\n    options.style ?? (options.style = options.style || {});\n    (_a = options.style).fill ?? (_a.fill = 16777215);\n    super(options, TextStyle);\n    this.renderPipeId = \"bitmapText\";\n  }\n  /** @private */\n  updateBounds() {\n    const bounds = this._bounds;\n    const anchor = this._anchor;\n    const bitmapMeasurement = BitmapFontManager.measureText(this.text, this._style);\n    const scale = bitmapMeasurement.scale;\n    const offset = bitmapMeasurement.offsetY * scale;\n    let width = bitmapMeasurement.width * scale;\n    let height = bitmapMeasurement.height * scale;\n    const stroke = this._style._stroke;\n    if (stroke) {\n      width += stroke.width;\n      height += stroke.width;\n    }\n    bounds.minX = -anchor._x * width;\n    bounds.maxX = bounds.minX + width;\n    bounds.minY = -anchor._y * (height + offset);\n    bounds.maxY = bounds.minY + height;\n  }\n  /**\n   * The resolution / device pixel ratio of the canvas.\n   * @default 1\n   */\n  set resolution(value) {\n    if (value !== null) {\n      warn(\n        // eslint-disable-next-line max-len\n        \"[BitmapText] dynamically updating the resolution is not supported. Resolution should be managed by the BitmapFont.\"\n      );\n    }\n  }\n  get resolution() {\n    return this._resolution;\n  }\n}\n\nexport { BitmapText };\n//# sourceMappingURL=BitmapText.mjs.map\n","import { deprecation, v8_0_0 } from '../../utils/logging/deprecation.mjs';\nimport { MeshGeometry } from '../mesh/shared/MeshGeometry.mjs';\n\n\"use strict\";\nconst _PlaneGeometry = class _PlaneGeometry extends MeshGeometry {\n  constructor(...args) {\n    super({});\n    let options = args[0] ?? {};\n    if (typeof options === \"number\") {\n      deprecation(v8_0_0, \"PlaneGeometry constructor changed please use { width, height, verticesX, verticesY } instead\");\n      options = {\n        width: options,\n        height: args[1],\n        verticesX: args[2],\n        verticesY: args[3]\n      };\n    }\n    this.build(options);\n  }\n  /**\n   * Refreshes plane coordinates\n   * @param options - Options to be applied to plane geometry\n   */\n  build(options) {\n    options = { ..._PlaneGeometry.defaultOptions, ...options };\n    this.verticesX = this.verticesX ?? options.verticesX;\n    this.verticesY = this.verticesY ?? options.verticesY;\n    this.width = this.width ?? options.width;\n    this.height = this.height ?? options.height;\n    const total = this.verticesX * this.verticesY;\n    const verts = [];\n    const uvs = [];\n    const indices = [];\n    const verticesX = this.verticesX - 1;\n    const verticesY = this.verticesY - 1;\n    const sizeX = this.width / verticesX;\n    const sizeY = this.height / verticesY;\n    for (let i = 0; i < total; i++) {\n      const x = i % this.verticesX;\n      const y = i / this.verticesX | 0;\n      verts.push(x * sizeX, y * sizeY);\n      uvs.push(x / verticesX, y / verticesY);\n    }\n    const totalSub = verticesX * verticesY;\n    for (let i = 0; i < totalSub; i++) {\n      const xpos = i % verticesX;\n      const ypos = i / verticesX | 0;\n      const value = ypos * this.verticesX + xpos;\n      const value2 = ypos * this.verticesX + xpos + 1;\n      const value3 = (ypos + 1) * this.verticesX + xpos;\n      const value4 = (ypos + 1) * this.verticesX + xpos + 1;\n      indices.push(\n        value,\n        value2,\n        value3,\n        value2,\n        value4,\n        value3\n      );\n    }\n    this.buffers[0].data = new Float32Array(verts);\n    this.buffers[1].data = new Float32Array(uvs);\n    this.indexBuffer.data = new Uint32Array(indices);\n    this.buffers[0].update();\n    this.buffers[1].update();\n    this.indexBuffer.update();\n  }\n};\n_PlaneGeometry.defaultOptions = {\n  width: 100,\n  height: 100,\n  verticesX: 10,\n  verticesY: 10\n};\nlet PlaneGeometry = _PlaneGeometry;\n\nexport { PlaneGeometry };\n//# sourceMappingURL=PlaneGeometry.mjs.map\n","import { definedProps } from '../container/utils/definedProps.mjs';\nimport { Mesh } from '../mesh/shared/Mesh.mjs';\nimport { PlaneGeometry } from './PlaneGeometry.mjs';\n\n\"use strict\";\nclass MeshPlane extends Mesh {\n  /**\n   * @param options - Options to be applied to MeshPlane\n   */\n  constructor(options) {\n    const { texture, verticesX, verticesY, ...rest } = options;\n    const planeGeometry = new PlaneGeometry(definedProps({\n      width: texture.width,\n      height: texture.height,\n      verticesX,\n      verticesY\n    }));\n    super(definedProps({ ...rest, geometry: planeGeometry, texture }));\n    this.texture = texture;\n    this.autoResize = true;\n  }\n  /**\n   * Method used for overrides, to do something in case texture frame was changed.\n   * Meshes based on plane can override it and change more details based on texture.\n   */\n  textureUpdated() {\n    const geometry = this.geometry;\n    const { width, height } = this.texture;\n    if (this.autoResize && (geometry.width !== width || geometry.height !== height)) {\n      geometry.width = width;\n      geometry.height = height;\n      geometry.build({});\n    }\n  }\n  set texture(value) {\n    this._texture?.off(\"update\", this.textureUpdated, this);\n    super.texture = value;\n    value.on(\"update\", this.textureUpdated, this);\n    this.textureUpdated();\n  }\n  /** The texture of the MeshPlane */\n  get texture() {\n    return this._texture;\n  }\n  /**\n   * Destroys this sprite renderable and optionally its texture.\n   * @param options - Options parameter. A boolean will act as if all options\n   *  have been set to that value\n   * @param {boolean} [options.texture=false] - Should it destroy the current texture of the renderable as well\n   * @param {boolean} [options.textureSource=false] - Should it destroy the textureSource of the renderable as well\n   */\n  destroy(options) {\n    this.texture.off(\"update\", this.textureUpdated, this);\n    super.destroy(options);\n  }\n}\n\nexport { MeshPlane };\n//# sourceMappingURL=MeshPlane.mjs.map\n","import { MeshGeometry } from '../mesh/shared/MeshGeometry.mjs';\n\n\"use strict\";\nconst _RopeGeometry = class _RopeGeometry extends MeshGeometry {\n  /**\n   * @param options - Options to be applied to rope geometry\n   */\n  constructor(options) {\n    const { width, points, textureScale } = { ..._RopeGeometry.defaultOptions, ...options };\n    super({\n      positions: new Float32Array(points.length * 4),\n      uvs: new Float32Array(points.length * 4),\n      indices: new Uint32Array((points.length - 1) * 6)\n    });\n    this.points = points;\n    this._width = width;\n    this.textureScale = textureScale;\n    this._build();\n  }\n  /**\n   * The width (i.e., thickness) of the rope.\n   * @readonly\n   */\n  get width() {\n    return this._width;\n  }\n  /** Refreshes Rope indices and uvs */\n  _build() {\n    const points = this.points;\n    if (!points)\n      return;\n    const vertexBuffer = this.getBuffer(\"aPosition\");\n    const uvBuffer = this.getBuffer(\"aUV\");\n    const indexBuffer = this.getIndex();\n    if (points.length < 1) {\n      return;\n    }\n    if (vertexBuffer.data.length / 4 !== points.length) {\n      vertexBuffer.data = new Float32Array(points.length * 4);\n      uvBuffer.data = new Float32Array(points.length * 4);\n      indexBuffer.data = new Uint16Array((points.length - 1) * 6);\n    }\n    const uvs = uvBuffer.data;\n    const indices = indexBuffer.data;\n    uvs[0] = 0;\n    uvs[1] = 0;\n    uvs[2] = 0;\n    uvs[3] = 1;\n    let amount = 0;\n    let prev = points[0];\n    const textureWidth = this._width * this.textureScale;\n    const total = points.length;\n    for (let i = 0; i < total; i++) {\n      const index = i * 4;\n      if (this.textureScale > 0) {\n        const dx = prev.x - points[i].x;\n        const dy = prev.y - points[i].y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        prev = points[i];\n        amount += distance / textureWidth;\n      } else {\n        amount = i / (total - 1);\n      }\n      uvs[index] = amount;\n      uvs[index + 1] = 0;\n      uvs[index + 2] = amount;\n      uvs[index + 3] = 1;\n    }\n    let indexCount = 0;\n    for (let i = 0; i < total - 1; i++) {\n      const index = i * 2;\n      indices[indexCount++] = index;\n      indices[indexCount++] = index + 1;\n      indices[indexCount++] = index + 2;\n      indices[indexCount++] = index + 2;\n      indices[indexCount++] = index + 1;\n      indices[indexCount++] = index + 3;\n    }\n    uvBuffer.update();\n    indexBuffer.update();\n    this.updateVertices();\n  }\n  /** refreshes vertices of Rope mesh */\n  updateVertices() {\n    const points = this.points;\n    if (points.length < 1) {\n      return;\n    }\n    let lastPoint = points[0];\n    let nextPoint;\n    let perpX = 0;\n    let perpY = 0;\n    const vertices = this.buffers[0].data;\n    const total = points.length;\n    const halfWidth = this.textureScale > 0 ? this.textureScale * this._width / 2 : this._width / 2;\n    for (let i = 0; i < total; i++) {\n      const point = points[i];\n      const index = i * 4;\n      if (i < points.length - 1) {\n        nextPoint = points[i + 1];\n      } else {\n        nextPoint = point;\n      }\n      perpY = -(nextPoint.x - lastPoint.x);\n      perpX = nextPoint.y - lastPoint.y;\n      let ratio = (1 - i / (total - 1)) * 10;\n      if (ratio > 1) {\n        ratio = 1;\n      }\n      const perpLength = Math.sqrt(perpX * perpX + perpY * perpY);\n      if (perpLength < 1e-6) {\n        perpX = 0;\n        perpY = 0;\n      } else {\n        perpX /= perpLength;\n        perpY /= perpLength;\n        perpX *= halfWidth;\n        perpY *= halfWidth;\n      }\n      vertices[index] = point.x + perpX;\n      vertices[index + 1] = point.y + perpY;\n      vertices[index + 2] = point.x - perpX;\n      vertices[index + 3] = point.y - perpY;\n      lastPoint = point;\n    }\n    this.buffers[0].update();\n  }\n  /** Refreshes Rope indices and uvs */\n  update() {\n    if (this.textureScale > 0) {\n      this._build();\n    } else {\n      this.updateVertices();\n    }\n  }\n};\n/** Default options for RopeGeometry constructor. */\n_RopeGeometry.defaultOptions = {\n  /** The width (i.e., thickness) of the rope. */\n  width: 200,\n  /** An array of points that determine the rope. */\n  points: [],\n  /** Rope texture scale, if zero then the rope texture is stretched. */\n  textureScale: 0\n};\nlet RopeGeometry = _RopeGeometry;\n\nexport { RopeGeometry };\n//# sourceMappingURL=RopeGeometry.mjs.map\n","import { definedProps } from '../container/utils/definedProps.mjs';\nimport { Mesh } from '../mesh/shared/Mesh.mjs';\nimport { RopeGeometry } from './RopeGeometry.mjs';\n\n\"use strict\";\nconst _MeshRope = class _MeshRope extends Mesh {\n  /**\n   * Note: The wrap mode of the texture is set to REPEAT if `textureScale` is positive.\n   * @param options\n   * @param options.texture - The texture to use on the rope.\n   * @param options.points - An array of {@link math.Point} objects to construct this rope.\n   * @param {number} options.textureScale - Optional. Positive values scale rope texture\n   * keeping its aspect ratio. You can reduce alpha channel artifacts by providing a larger texture\n   * and downsampling here. If set to zero, texture will be stretched instead.\n   */\n  constructor(options) {\n    const { texture, points, textureScale, ...rest } = { ..._MeshRope.defaultOptions, ...options };\n    const ropeGeometry = new RopeGeometry(definedProps({ width: texture.height, points, textureScale }));\n    if (textureScale > 0) {\n      texture.source.style.addressMode = \"repeat\";\n    }\n    super(definedProps({\n      ...rest,\n      texture,\n      geometry: ropeGeometry\n    }));\n    this.autoUpdate = true;\n    this.onRender = this._render;\n  }\n  _render() {\n    const geometry = this.geometry;\n    if (this.autoUpdate || geometry._width !== this.texture.height) {\n      geometry._width = this.texture.height;\n      geometry.update();\n    }\n  }\n};\n_MeshRope.defaultOptions = {\n  textureScale: 0\n};\nlet MeshRope = _MeshRope;\n\nexport { MeshRope };\n//# sourceMappingURL=MeshRope.mjs.map\n","import { browserExt } from './environment-browser/browserExt.mjs';\nimport { webworkerExt } from './environment-webworker/webworkerExt.mjs';\nimport { extensions } from './extensions/Extensions.mjs';\nexport { ExtensionType, normalizeExtensionPriority } from './extensions/Extensions.mjs';\nimport './rendering/init.mjs';\nimport './spritesheet/init.mjs';\nimport './accessibility/index.mjs';\nimport './advanced-blend-modes/index.mjs';\nimport './app/index.mjs';\nimport './assets/index.mjs';\nimport './color/index.mjs';\nimport './compressed-textures/index.mjs';\nimport './culling/index.mjs';\nimport './dom/index.mjs';\nimport './environment/index.mjs';\nimport './environment-browser/index.mjs';\nimport './environment-webworker/index.mjs';\nimport './events/index.mjs';\nimport './extensions/index.mjs';\nimport './filters/index.mjs';\nimport './maths/index.mjs';\nimport './prepare/index.mjs';\nimport './rendering/index.mjs';\nimport './scene/index.mjs';\nimport './spritesheet/index.mjs';\nimport './ticker/index.mjs';\nimport './utils/index.mjs';\nexport { AccessibilitySystem } from './accessibility/AccessibilitySystem.mjs';\nexport { accessibilityTarget } from './accessibility/accessibilityTarget.mjs';\nexport { ColorBlend } from './advanced-blend-modes/ColorBlend.mjs';\nexport { ColorBurnBlend } from './advanced-blend-modes/ColorBurnBlend.mjs';\nexport { ColorDodgeBlend } from './advanced-blend-modes/ColorDodgeBlend.mjs';\nexport { DarkenBlend } from './advanced-blend-modes/DarkenBlend.mjs';\nexport { DifferenceBlend } from './advanced-blend-modes/DifferenceBlend.mjs';\nexport { DivideBlend } from './advanced-blend-modes/DivideBlend.mjs';\nexport { ExclusionBlend } from './advanced-blend-modes/ExclusionBlend.mjs';\nexport { HardLightBlend } from './advanced-blend-modes/HardLightBlend.mjs';\nexport { HardMixBlend } from './advanced-blend-modes/HardMixBlend.mjs';\nexport { LightenBlend } from './advanced-blend-modes/LightenBlend.mjs';\nexport { LinearBurnBlend } from './advanced-blend-modes/LinearBurnBlend.mjs';\nexport { LinearDodgeBlend } from './advanced-blend-modes/LinearDodgeBlend.mjs';\nexport { LinearLightBlend } from './advanced-blend-modes/LinearLightBlend.mjs';\nexport { LuminosityBlend } from './advanced-blend-modes/LuminosityBlend.mjs';\nexport { NegationBlend } from './advanced-blend-modes/NegationBlend.mjs';\nexport { OverlayBlend } from './advanced-blend-modes/OverlayBlend.mjs';\nexport { PinLightBlend } from './advanced-blend-modes/PinLightBlend.mjs';\nexport { SaturationBlend } from './advanced-blend-modes/SaturationBlend.mjs';\nexport { SoftLightBlend } from './advanced-blend-modes/SoftLightBlend.mjs';\nexport { SubtractBlend } from './advanced-blend-modes/SubtractBlend.mjs';\nexport { VividLightBlend } from './advanced-blend-modes/VividLightBlend.mjs';\nexport { Application } from './app/Application.mjs';\nexport { ResizePlugin } from './app/ResizePlugin.mjs';\nexport { TickerPlugin } from './app/TickerPlugin.mjs';\nexport { Assets, AssetsClass } from './assets/Assets.mjs';\nexport { BackgroundLoader } from './assets/BackgroundLoader.mjs';\nexport { Cache } from './assets/cache/Cache.mjs';\nexport { cacheTextureArray } from './assets/cache/parsers/cacheTextureArray.mjs';\nexport { detectAvif } from './assets/detections/parsers/detectAvif.mjs';\nexport { detectDefaults } from './assets/detections/parsers/detectDefaults.mjs';\nexport { detectMp4 } from './assets/detections/parsers/detectMp4.mjs';\nexport { detectOgv } from './assets/detections/parsers/detectOgv.mjs';\nexport { detectWebm } from './assets/detections/parsers/detectWebm.mjs';\nexport { detectWebp } from './assets/detections/parsers/detectWebp.mjs';\nexport { testImageFormat } from './assets/detections/utils/testImageFormat.mjs';\nexport { testVideoFormat } from './assets/detections/utils/testVideoFormat.mjs';\nexport { Loader } from './assets/loader/Loader.mjs';\nexport { LoaderParserPriority } from './assets/loader/parsers/LoaderParser.mjs';\nexport { loadJson } from './assets/loader/parsers/loadJson.mjs';\nexport { loadTxt } from './assets/loader/parsers/loadTxt.mjs';\nexport { getFontFamilyName, loadWebFont } from './assets/loader/parsers/loadWebFont.mjs';\nexport { loadSvg } from './assets/loader/parsers/textures/loadSVG.mjs';\nexport { loadImageBitmap, loadTextures } from './assets/loader/parsers/textures/loadTextures.mjs';\nexport { crossOrigin, determineCrossOrigin, loadVideoTextures, preloadVideo } from './assets/loader/parsers/textures/loadVideoTextures.mjs';\nexport { createTexture } from './assets/loader/parsers/textures/utils/createTexture.mjs';\nexport { WorkerManager } from './assets/loader/workers/WorkerManager.mjs';\nexport { resolveJsonUrl } from './assets/resolver/parsers/resolveJsonUrl.mjs';\nexport { resolveTextureUrl } from './assets/resolver/parsers/resolveTextureUrl.mjs';\nexport { Resolver, getUrlExtension } from './assets/resolver/Resolver.mjs';\nexport { checkDataUrl } from './assets/utils/checkDataUrl.mjs';\nexport { checkExtension } from './assets/utils/checkExtension.mjs';\nexport { convertToList } from './assets/utils/convertToList.mjs';\nexport { copySearchParams } from './assets/utils/copySearchParams.mjs';\nexport { createStringVariations } from './assets/utils/createStringVariations.mjs';\nexport { isSingleItem } from './assets/utils/isSingleItem.mjs';\nexport { Color } from './color/Color.mjs';\nexport { detectBasis } from './compressed-textures/basis/detectBasis.mjs';\nexport { loadBasis } from './compressed-textures/basis/loadBasis.mjs';\nexport { createLevelBuffers } from './compressed-textures/basis/utils/createLevelBuffers.mjs';\nexport { gpuFormatToBasisTranscoderFormat } from './compressed-textures/basis/utils/gpuFormatToBasisTranscoderFormat.mjs';\nexport { basisTranscoderUrls, setBasisTranscoderPath } from './compressed-textures/basis/utils/setBasisTranscoderPath.mjs';\nexport { loadBasisOnWorker } from './compressed-textures/basis/worker/loadBasisOnWorker.mjs';\nexport { D3D10_RESOURCE_DIMENSION, D3DFMT, DDS, DXGI_FORMAT, DXGI_TO_TEXTURE_FORMAT, FOURCC_TO_TEXTURE_FORMAT, TEXTURE_FORMAT_BLOCK_SIZE } from './compressed-textures/dds/const.mjs';\nexport { loadDDS } from './compressed-textures/dds/loadDDS.mjs';\nexport { parseDDS } from './compressed-textures/dds/parseDDS.mjs';\nexport { loadKTX } from './compressed-textures/ktx/loadKTX.mjs';\nexport { parseKTX } from './compressed-textures/ktx/parseKTX.mjs';\nexport { GL_INTERNAL_FORMAT, KTX } from './compressed-textures/ktx2/const.mjs';\nexport { loadKTX2 } from './compressed-textures/ktx2/loadKTX2.mjs';\nexport { convertFormatIfRequired } from './compressed-textures/ktx2/utils/convertFormatIfRequired.mjs';\nexport { createLevelBuffersFromKTX } from './compressed-textures/ktx2/utils/createLevelBuffersFromKTX.mjs';\nexport { getTextureFormatFromKTXTexture } from './compressed-textures/ktx2/utils/getTextureFormatFromKTXTexture.mjs';\nexport { glFormatToGPUFormat } from './compressed-textures/ktx2/utils/glFormatToGPUFormat.mjs';\nexport { gpuFormatToKTXBasisTranscoderFormat } from './compressed-textures/ktx2/utils/gpuFormatToKTXBasisTranscoderFormat.mjs';\nexport { ktxTranscoderUrls, setKTXTranscoderPath } from './compressed-textures/ktx2/utils/setKTXTranscoderPath.mjs';\nexport { vkFormatToGPUFormat } from './compressed-textures/ktx2/utils/vkFormatToGPUFormat.mjs';\nexport { loadKTX2onWorker } from './compressed-textures/ktx2/worker/loadKTX2onWorker.mjs';\nexport { detectCompressed } from './compressed-textures/shared/detectCompressed.mjs';\nexport { resolveCompressedTextureUrl, validFormats } from './compressed-textures/shared/resolveCompressedTextureUrl.mjs';\nexport { Culler } from './culling/Culler.mjs';\nexport { CullerPlugin } from './culling/CullerPlugin.mjs';\nexport { cullingMixin } from './culling/cullingMixin.mjs';\nexport { DOMContainer } from './dom/DOMContainer.mjs';\nexport { DOMPipe } from './dom/DOMPipe.mjs';\nexport { DOMAdapter } from './environment/adapter.mjs';\nexport { autoDetectEnvironment, loadEnvironmentExtensions } from './environment/autoDetectEnvironment.mjs';\nexport { BrowserAdapter } from './environment-browser/BrowserAdapter.mjs';\nexport { WebWorkerAdapter } from './environment-webworker/WebWorkerAdapter.mjs';\nexport { EventBoundary } from './events/EventBoundary.mjs';\nexport { EventSystem } from './events/EventSystem.mjs';\nexport { EventsTicker } from './events/EventTicker.mjs';\nexport { FederatedEvent } from './events/FederatedEvent.mjs';\nexport { FederatedContainer } from './events/FederatedEventTarget.mjs';\nexport { FederatedMouseEvent } from './events/FederatedMouseEvent.mjs';\nexport { FederatedPointerEvent } from './events/FederatedPointerEvent.mjs';\nexport { FederatedWheelEvent } from './events/FederatedWheelEvent.mjs';\nexport { default as blendTemplateFrag } from './filters/blend-modes/blend-template.frag.mjs';\nexport { default as blendTemplateVert } from './filters/blend-modes/blend-template.vert.mjs';\nexport { default as blendTemplateWgsl } from './filters/blend-modes/blend-template.wgsl.mjs';\nexport { default as hslWgsl } from './filters/blend-modes/hsl.wgsl.mjs';\nexport { default as alphaFrag } from './filters/defaults/alpha/alpha.frag.mjs';\nexport { default as alphaWgsl } from './filters/defaults/alpha/alpha.wgsl.mjs';\nexport { default as blurTemplateWgsl } from './filters/defaults/blur/gpu/blur-template.wgsl.mjs';\nexport { default as colorMatrixFilterFrag } from './filters/defaults/color-matrix/colorMatrixFilter.frag.mjs';\nexport { default as colorMatrixFilterWgsl } from './filters/defaults/color-matrix/colorMatrixFilter.wgsl.mjs';\nexport { default as defaultFilterVert } from './filters/defaults/defaultFilter.vert.mjs';\nexport { default as displacementFrag } from './filters/defaults/displacement/displacement.frag.mjs';\nexport { default as displacementVert } from './filters/defaults/displacement/displacement.vert.mjs';\nexport { default as displacementWgsl } from './filters/defaults/displacement/displacement.wgsl.mjs';\nexport { default as noiseFrag } from './filters/defaults/noise/noise.frag.mjs';\nexport { default as noiseWgsl } from './filters/defaults/noise/noise.wgsl.mjs';\nexport { default as maskFrag } from './filters/mask/mask.frag.mjs';\nexport { default as maskVert } from './filters/mask/mask.vert.mjs';\nexport { default as maskWgsl } from './filters/mask/mask.wgsl.mjs';\nexport { BlendModeFilter } from './filters/blend-modes/BlendModeFilter.mjs';\nexport { hslgl } from './filters/blend-modes/hls/GLhls.mjs';\nexport { hslgpu } from './filters/blend-modes/hls/GPUhls.mjs';\nexport { AlphaFilter } from './filters/defaults/alpha/AlphaFilter.mjs';\nexport { BlurFilter } from './filters/defaults/blur/BlurFilter.mjs';\nexport { BlurFilterPass } from './filters/defaults/blur/BlurFilterPass.mjs';\nexport { GAUSSIAN_VALUES } from './filters/defaults/blur/const.mjs';\nexport { generateBlurFragSource } from './filters/defaults/blur/gl/generateBlurFragSource.mjs';\nexport { generateBlurGlProgram } from './filters/defaults/blur/gl/generateBlurGlProgram.mjs';\nexport { generateBlurVertSource } from './filters/defaults/blur/gl/generateBlurVertSource.mjs';\nexport { generateBlurProgram } from './filters/defaults/blur/gpu/generateBlurProgram.mjs';\nexport { ColorMatrixFilter } from './filters/defaults/color-matrix/ColorMatrixFilter.mjs';\nexport { DisplacementFilter } from './filters/defaults/displacement/DisplacementFilter.mjs';\nexport { NoiseFilter } from './filters/defaults/noise/NoiseFilter.mjs';\nexport { Filter } from './filters/Filter.mjs';\nexport { FilterEffect } from './filters/FilterEffect.mjs';\nexport { FilterPipe } from './filters/FilterPipe.mjs';\nexport { FilterSystem } from './filters/FilterSystem.mjs';\nexport { MaskFilter } from './filters/mask/MaskFilter.mjs';\nexport { groupD8 } from './maths/matrix/groupD8.mjs';\nexport { Matrix } from './maths/matrix/Matrix.mjs';\nexport { DEG_TO_RAD, PI_2, RAD_TO_DEG } from './maths/misc/const.mjs';\nexport { isPow2, log2, nextPow2 } from './maths/misc/pow2.mjs';\nexport { squaredDistanceToLineSegment } from './maths/misc/squaredDistanceToLineSegment.mjs';\nexport { ObservablePoint } from './maths/point/ObservablePoint.mjs';\nexport { Point } from './maths/point/Point.mjs';\nexport { pointInTriangle } from './maths/point/pointInTriangle.mjs';\nexport { Circle } from './maths/shapes/Circle.mjs';\nexport { Ellipse } from './maths/shapes/Ellipse.mjs';\nexport { Polygon } from './maths/shapes/Polygon.mjs';\nexport { Rectangle } from './maths/shapes/Rectangle.mjs';\nexport { RoundedRectangle } from './maths/shapes/RoundedRectangle.mjs';\nexport { Triangle } from './maths/shapes/Triangle.mjs';\nexport { PrepareBase } from './prepare/PrepareBase.mjs';\nexport { PrepareQueue } from './prepare/PrepareQueue.mjs';\nexport { PrepareSystem } from './prepare/PrepareSystem.mjs';\nexport { PrepareUpload } from './prepare/PrepareUpload.mjs';\nexport { GlBatchAdaptor } from './rendering/batcher/gl/GlBatchAdaptor.mjs';\nexport { checkMaxIfStatementsInShader } from './rendering/batcher/gl/utils/checkMaxIfStatementsInShader.mjs';\nexport { getMaxTexturesPerBatch } from './rendering/batcher/gl/utils/maxRecommendedTextures.mjs';\nexport { generateGPULayout } from './rendering/batcher/gpu/generateGPULayout.mjs';\nexport { generateLayout } from './rendering/batcher/gpu/generateLayout.mjs';\nexport { getTextureBatchBindGroup } from './rendering/batcher/gpu/getTextureBatchBindGroup.mjs';\nexport { GpuBatchAdaptor } from './rendering/batcher/gpu/GpuBatchAdaptor.mjs';\nexport { Batch, Batcher } from './rendering/batcher/shared/Batcher.mjs';\nexport { BatcherPipe } from './rendering/batcher/shared/BatcherPipe.mjs';\nexport { BatchGeometry } from './rendering/batcher/shared/BatchGeometry.mjs';\nexport { BatchTextureArray } from './rendering/batcher/shared/BatchTextureArray.mjs';\nexport { DefaultBatcher } from './rendering/batcher/shared/DefaultBatcher.mjs';\nexport { DefaultShader } from './rendering/batcher/shared/DefaultShader.mjs';\nexport { compileHighShaderGlProgram, compileHighShaderGpuProgram } from './rendering/high-shader/compileHighShaderToProgram.mjs';\nexport { compileHighShader, compileHighShaderGl } from './rendering/high-shader/compiler/compileHighShader.mjs';\nexport { addBits } from './rendering/high-shader/compiler/utils/addBits.mjs';\nexport { compileHooks, findHooksRx } from './rendering/high-shader/compiler/utils/compileHooks.mjs';\nexport { compileInputs } from './rendering/high-shader/compiler/utils/compileInputs.mjs';\nexport { compileOutputs } from './rendering/high-shader/compiler/utils/compileOutputs.mjs';\nexport { formatShader } from './rendering/high-shader/compiler/utils/formatShader.mjs';\nexport { injectBits } from './rendering/high-shader/compiler/utils/injectBits.mjs';\nexport { fragmentGPUTemplate, fragmentGlTemplate, vertexGPUTemplate, vertexGlTemplate } from './rendering/high-shader/defaultProgramTemplate.mjs';\nexport { colorBit, colorBitGl } from './rendering/high-shader/shader-bits/colorBit.mjs';\nexport { generateTextureBatchBit, generateTextureBatchBitGl } from './rendering/high-shader/shader-bits/generateTextureBatchBit.mjs';\nexport { globalUniformsBit, globalUniformsBitGl, globalUniformsUBOBitGl } from './rendering/high-shader/shader-bits/globalUniformsBit.mjs';\nexport { localUniformBit, localUniformBitGl, localUniformBitGroup2 } from './rendering/high-shader/shader-bits/localUniformBit.mjs';\nexport { roundPixelsBit, roundPixelsBitGl } from './rendering/high-shader/shader-bits/roundPixelsBit.mjs';\nexport { textureBit, textureBitGl } from './rendering/high-shader/shader-bits/textureBit.mjs';\nexport { AlphaMask } from './rendering/mask/alpha/AlphaMask.mjs';\nexport { AlphaMaskPipe } from './rendering/mask/alpha/AlphaMaskPipe.mjs';\nexport { ColorMask } from './rendering/mask/color/ColorMask.mjs';\nexport { ColorMaskPipe } from './rendering/mask/color/ColorMaskPipe.mjs';\nexport { MaskEffectManager, MaskEffectManagerClass } from './rendering/mask/MaskEffectManager.mjs';\nexport { ScissorMask } from './rendering/mask/scissor/ScissorMask.mjs';\nexport { StencilMask } from './rendering/mask/stencil/StencilMask.mjs';\nexport { StencilMaskPipe } from './rendering/mask/stencil/StencilMaskPipe.mjs';\nexport { addMaskBounds } from './rendering/mask/utils/addMaskBounds.mjs';\nexport { addMaskLocalBounds, getMatrixRelativeToParent } from './rendering/mask/utils/addMaskLocalBounds.mjs';\nexport { autoDetectRenderer } from './rendering/renderers/autoDetectRenderer.mjs';\nexport { BUFFER_TYPE } from './rendering/renderers/gl/buffer/const.mjs';\nexport { GlBuffer } from './rendering/renderers/gl/buffer/GlBuffer.mjs';\nexport { GlBufferSystem } from './rendering/renderers/gl/buffer/GlBufferSystem.mjs';\nexport { CLEAR } from './rendering/renderers/gl/const.mjs';\nexport { GlContextSystem } from './rendering/renderers/gl/context/GlContextSystem.mjs';\nexport { GlGeometrySystem } from './rendering/renderers/gl/geometry/GlGeometrySystem.mjs';\nexport { getGlTypeFromFormat } from './rendering/renderers/gl/geometry/utils/getGlTypeFromFormat.mjs';\nexport { GlBackBufferSystem } from './rendering/renderers/gl/GlBackBufferSystem.mjs';\nexport { GlColorMaskSystem } from './rendering/renderers/gl/GlColorMaskSystem.mjs';\nexport { GlEncoderSystem } from './rendering/renderers/gl/GlEncoderSystem.mjs';\nexport { GlRenderTarget } from './rendering/renderers/gl/GlRenderTarget.mjs';\nexport { GlStencilSystem } from './rendering/renderers/gl/GlStencilSystem.mjs';\nexport { GlUboSystem } from './rendering/renderers/gl/GlUboSystem.mjs';\nexport { GlRenderTargetAdaptor } from './rendering/renderers/gl/renderTarget/GlRenderTargetAdaptor.mjs';\nexport { GlRenderTargetSystem } from './rendering/renderers/gl/renderTarget/GlRenderTargetSystem.mjs';\nexport { generateShaderSyncCode } from './rendering/renderers/gl/shader/GenerateShaderSyncCode.mjs';\nexport { getBatchSamplersUniformGroup } from './rendering/renderers/gl/shader/getBatchSamplersUniformGroup.mjs';\nexport { GlProgram } from './rendering/renderers/gl/shader/GlProgram.mjs';\nexport { GlProgramData, IGLUniformData } from './rendering/renderers/gl/shader/GlProgramData.mjs';\nexport { GlShaderSystem } from './rendering/renderers/gl/shader/GlShaderSystem.mjs';\nexport { GlUniformGroupSystem } from './rendering/renderers/gl/shader/GlUniformGroupSystem.mjs';\nexport { migrateFragmentFromV7toV8 } from './rendering/renderers/gl/shader/migrateFragmentFromV7toV8.mjs';\nexport { compileShader } from './rendering/renderers/gl/shader/program/compileShader.mjs';\nexport { defaultValue } from './rendering/renderers/gl/shader/program/defaultValue.mjs';\nexport { ensureAttributes } from './rendering/renderers/gl/shader/program/ensureAttributes.mjs';\nexport { extractAttributesFromGlProgram } from './rendering/renderers/gl/shader/program/extractAttributesFromGlProgram.mjs';\nexport { generateProgram } from './rendering/renderers/gl/shader/program/generateProgram.mjs';\nexport { getMaxFragmentPrecision } from './rendering/renderers/gl/shader/program/getMaxFragmentPrecision.mjs';\nexport { getTestContext } from './rendering/renderers/gl/shader/program/getTestContext.mjs';\nexport { getUboData } from './rendering/renderers/gl/shader/program/getUboData.mjs';\nexport { getUniformData } from './rendering/renderers/gl/shader/program/getUniformData.mjs';\nexport { logProgramError } from './rendering/renderers/gl/shader/program/logProgramError.mjs';\nexport { mapSize } from './rendering/renderers/gl/shader/program/mapSize.mjs';\nexport { mapGlToVertexFormat, mapType } from './rendering/renderers/gl/shader/program/mapType.mjs';\nexport { addProgramDefines } from './rendering/renderers/gl/shader/program/preprocessors/addProgramDefines.mjs';\nexport { ensurePrecision } from './rendering/renderers/gl/shader/program/preprocessors/ensurePrecision.mjs';\nexport { insertVersion } from './rendering/renderers/gl/shader/program/preprocessors/insertVersion.mjs';\nexport { setProgramName } from './rendering/renderers/gl/shader/program/preprocessors/setProgramName.mjs';\nexport { stripVersion } from './rendering/renderers/gl/shader/program/preprocessors/stripVersion.mjs';\nexport { WGSL_TO_STD40_SIZE, createUboElementsSTD40 } from './rendering/renderers/gl/shader/utils/createUboElementsSTD40.mjs';\nexport { createUboSyncFunctionSTD40 } from './rendering/renderers/gl/shader/utils/createUboSyncSTD40.mjs';\nexport { generateArraySyncSTD40 } from './rendering/renderers/gl/shader/utils/generateArraySyncSTD40.mjs';\nexport { generateUniformsSync } from './rendering/renderers/gl/shader/utils/generateUniformsSync.mjs';\nexport { UNIFORM_TO_ARRAY_SETTERS, UNIFORM_TO_SINGLE_SETTERS } from './rendering/renderers/gl/shader/utils/generateUniformsSyncTypes.mjs';\nexport { GlStateSystem } from './rendering/renderers/gl/state/GlStateSystem.mjs';\nexport { mapWebGLBlendModesToPixi } from './rendering/renderers/gl/state/mapWebGLBlendModesToPixi.mjs';\nexport { GL_FORMATS, GL_TARGETS, GL_TYPES, GL_WRAP_MODES } from './rendering/renderers/gl/texture/const.mjs';\nexport { GlTexture } from './rendering/renderers/gl/texture/GlTexture.mjs';\nexport { GlTextureSystem } from './rendering/renderers/gl/texture/GlTextureSystem.mjs';\nexport { glUploadBufferImageResource } from './rendering/renderers/gl/texture/uploaders/glUploadBufferImageResource.mjs';\nexport { glUploadCompressedTextureResource } from './rendering/renderers/gl/texture/uploaders/glUploadCompressedTextureResource.mjs';\nexport { glUploadImageResource } from './rendering/renderers/gl/texture/uploaders/glUploadImageResource.mjs';\nexport { glUploadVideoResource } from './rendering/renderers/gl/texture/uploaders/glUploadVideoResource.mjs';\nexport { applyStyleParams } from './rendering/renderers/gl/texture/utils/applyStyleParams.mjs';\nexport { getSupportedGlCompressedTextureFormats } from './rendering/renderers/gl/texture/utils/getSupportedGlCompressedTextureFormats.mjs';\nexport { mapFormatToGlFormat } from './rendering/renderers/gl/texture/utils/mapFormatToGlFormat.mjs';\nexport { mapFormatToGlInternalFormat } from './rendering/renderers/gl/texture/utils/mapFormatToGlInternalFormat.mjs';\nexport { mapFormatToGlType } from './rendering/renderers/gl/texture/utils/mapFormatToGlType.mjs';\nexport { compareModeToGlCompare, mipmapScaleModeToGlFilter, scaleModeToGlFilter, wrapModeToGlAddress } from './rendering/renderers/gl/texture/utils/pixiToGlMaps.mjs';\nexport { unpremultiplyAlpha } from './rendering/renderers/gl/texture/utils/unpremultiplyAlpha.mjs';\nexport { WebGLRenderer } from './rendering/renderers/gl/WebGLRenderer.mjs';\nexport { BindGroupSystem } from './rendering/renderers/gpu/BindGroupSystem.mjs';\nexport { GpuBufferSystem } from './rendering/renderers/gpu/buffer/GpuBufferSystem.mjs';\nexport { GpuReadBuffer } from './rendering/renderers/gpu/buffer/GpuReadBuffer.mjs';\nexport { UboBatch } from './rendering/renderers/gpu/buffer/UboBatch.mjs';\nexport { GpuColorMaskSystem } from './rendering/renderers/gpu/GpuColorMaskSystem.mjs';\nexport { GpuDeviceSystem } from './rendering/renderers/gpu/GpuDeviceSystem.mjs';\nexport { GpuEncoderSystem } from './rendering/renderers/gpu/GpuEncoderSystem.mjs';\nexport { GpuStencilSystem } from './rendering/renderers/gpu/GpuStencilSystem.mjs';\nexport { GpuUboSystem } from './rendering/renderers/gpu/GpuUboSystem.mjs';\nexport { GpuUniformBatchPipe } from './rendering/renderers/gpu/GpuUniformBatchPipe.mjs';\nexport { PipelineSystem } from './rendering/renderers/gpu/pipeline/PipelineSystem.mjs';\nexport { calculateProjection } from './rendering/renderers/gpu/renderTarget/calculateProjection.mjs';\nexport { GpuRenderTarget } from './rendering/renderers/gpu/renderTarget/GpuRenderTarget.mjs';\nexport { GpuRenderTargetAdaptor } from './rendering/renderers/gpu/renderTarget/GpuRenderTargetAdaptor.mjs';\nexport { GpuRenderTargetSystem } from './rendering/renderers/gpu/renderTarget/GpuRenderTargetSystem.mjs';\nexport { BindGroup } from './rendering/renderers/gpu/shader/BindGroup.mjs';\nexport { GpuProgram } from './rendering/renderers/gpu/shader/GpuProgram.mjs';\nexport { GpuShaderSystem } from './rendering/renderers/gpu/shader/GpuShaderSystem.mjs';\nexport { WGSL_ALIGN_SIZE_DATA, createUboElementsWGSL } from './rendering/renderers/gpu/shader/utils/createUboElementsWGSL.mjs';\nexport { createUboSyncFunctionWGSL } from './rendering/renderers/gpu/shader/utils/createUboSyncFunctionWGSL.mjs';\nexport { extractAttributesFromGpuProgram } from './rendering/renderers/gpu/shader/utils/extractAttributesFromGpuProgram.mjs';\nexport { extractStructAndGroups } from './rendering/renderers/gpu/shader/utils/extractStructAndGroups.mjs';\nexport { generateArraySyncWGSL } from './rendering/renderers/gpu/shader/utils/generateArraySyncWGSL.mjs';\nexport { generateGpuLayoutGroups } from './rendering/renderers/gpu/shader/utils/generateGpuLayoutGroups.mjs';\nexport { generateLayoutHash } from './rendering/renderers/gpu/shader/utils/generateLayoutHash.mjs';\nexport { removeStructAndGroupDuplicates } from './rendering/renderers/gpu/shader/utils/removeStructAndGroupDuplicates.mjs';\nexport { GpuBlendModesToPixi } from './rendering/renderers/gpu/state/GpuBlendModesToPixi.mjs';\nexport { GpuStateSystem } from './rendering/renderers/gpu/state/GpuStateSystem.mjs';\nexport { GpuStencilModesToPixi } from './rendering/renderers/gpu/state/GpuStencilModesToPixi.mjs';\nexport { GpuTextureSystem } from './rendering/renderers/gpu/texture/GpuTextureSystem.mjs';\nexport { gpuUploadBufferImageResource } from './rendering/renderers/gpu/texture/uploaders/gpuUploadBufferImageResource.mjs';\nexport { blockDataMap, gpuUploadCompressedTextureResource } from './rendering/renderers/gpu/texture/uploaders/gpuUploadCompressedTextureResource.mjs';\nexport { gpuUploadImageResource } from './rendering/renderers/gpu/texture/uploaders/gpuUploadImageSource.mjs';\nexport { gpuUploadVideoResource } from './rendering/renderers/gpu/texture/uploaders/gpuUploadVideoSource.mjs';\nexport { getSupportedGPUCompressedTextureFormats } from './rendering/renderers/gpu/texture/utils/getSupportedGPUCompressedTextureFormats.mjs';\nexport { GpuMipmapGenerator } from './rendering/renderers/gpu/texture/utils/GpuMipmapGenerator.mjs';\nexport { WebGPURenderer } from './rendering/renderers/gpu/WebGPURenderer.mjs';\nexport { BackgroundSystem } from './rendering/renderers/shared/background/BackgroundSystem.mjs';\nexport { BlendModePipe } from './rendering/renderers/shared/blendModes/BlendModePipe.mjs';\nexport { Buffer } from './rendering/renderers/shared/buffer/Buffer.mjs';\nexport { BufferResource } from './rendering/renderers/shared/buffer/BufferResource.mjs';\nexport { BufferUsage } from './rendering/renderers/shared/buffer/const.mjs';\nexport { fastCopy } from './rendering/renderers/shared/buffer/utils/fastCopy.mjs';\nexport { ExtractSystem } from './rendering/renderers/shared/extract/ExtractSystem.mjs';\nexport { GenerateTextureSystem } from './rendering/renderers/shared/extract/GenerateTextureSystem.mjs';\nexport { DRAW_MODES } from './rendering/renderers/shared/geometry/const.mjs';\nexport { Geometry } from './rendering/renderers/shared/geometry/Geometry.mjs';\nexport { buildSimpleUvs, buildUvs } from './rendering/renderers/shared/geometry/utils/buildUvs.mjs';\nexport { ensureIsBuffer } from './rendering/renderers/shared/geometry/utils/ensureIsBuffer.mjs';\nexport { getAttributeInfoFromFormat } from './rendering/renderers/shared/geometry/utils/getAttributeInfoFromFormat.mjs';\nexport { getGeometryBounds } from './rendering/renderers/shared/geometry/utils/getGeometryBounds.mjs';\nexport { transformVertices } from './rendering/renderers/shared/geometry/utils/transformVertices.mjs';\nexport { InstructionSet } from './rendering/renderers/shared/instructions/InstructionSet.mjs';\nexport { GlobalUniformSystem } from './rendering/renderers/shared/renderTarget/GlobalUniformSystem.mjs';\nexport { isRenderingToScreen } from './rendering/renderers/shared/renderTarget/isRenderingToScreen.mjs';\nexport { RenderTarget } from './rendering/renderers/shared/renderTarget/RenderTarget.mjs';\nexport { RenderTargetSystem } from './rendering/renderers/shared/renderTarget/RenderTargetSystem.mjs';\nexport { viewportFromFrame } from './rendering/renderers/shared/renderTarget/viewportFromFrame.mjs';\nexport { SchedulerSystem } from './rendering/renderers/shared/SchedulerSystem.mjs';\nexport { ShaderStage } from './rendering/renderers/shared/shader/const.mjs';\nexport { Shader } from './rendering/renderers/shared/shader/Shader.mjs';\nexport { UNIFORM_TYPES_MAP, UNIFORM_TYPES_VALUES } from './rendering/renderers/shared/shader/types.mjs';\nexport { UboSystem } from './rendering/renderers/shared/shader/UboSystem.mjs';\nexport { UniformGroup } from './rendering/renderers/shared/shader/UniformGroup.mjs';\nexport { createUboSyncFunction } from './rendering/renderers/shared/shader/utils/createUboSyncFunction.mjs';\nexport { getDefaultUniformValue } from './rendering/renderers/shared/shader/utils/getDefaultUniformValue.mjs';\nexport { uboSyncFunctionsSTD40, uboSyncFunctionsWGSL } from './rendering/renderers/shared/shader/utils/uboSyncFunctions.mjs';\nexport { uniformParsers } from './rendering/renderers/shared/shader/utils/uniformParsers.mjs';\nexport { HelloSystem } from './rendering/renderers/shared/startup/HelloSystem.mjs';\nexport { BLEND_TO_NPM, STENCIL_MODES } from './rendering/renderers/shared/state/const.mjs';\nexport { getAdjustedBlendModeBlend } from './rendering/renderers/shared/state/getAdjustedBlendModeBlend.mjs';\nexport { State } from './rendering/renderers/shared/state/State.mjs';\nexport { AbstractRenderer } from './rendering/renderers/shared/system/AbstractRenderer.mjs';\nexport { SharedRenderPipes, SharedSystems } from './rendering/renderers/shared/system/SharedSystems.mjs';\nexport { SystemRunner } from './rendering/renderers/shared/system/SystemRunner.mjs';\nexport { CanvasPool, CanvasPoolClass } from './rendering/renderers/shared/texture/CanvasPool.mjs';\nexport { DEPRECATED_SCALE_MODES, DEPRECATED_WRAP_MODES, MSAA_QUALITY, SCALE_MODES, WRAP_MODES } from './rendering/renderers/shared/texture/const.mjs';\nexport { RenderableGCSystem } from './rendering/renderers/shared/texture/RenderableGCSystem.mjs';\nexport { RenderTexture } from './rendering/renderers/shared/texture/RenderTexture.mjs';\nexport { BufferImageSource } from './rendering/renderers/shared/texture/sources/BufferImageSource.mjs';\nexport { CanvasSource } from './rendering/renderers/shared/texture/sources/CanvasSource.mjs';\nexport { CompressedSource } from './rendering/renderers/shared/texture/sources/CompressedSource.mjs';\nexport { ImageSource } from './rendering/renderers/shared/texture/sources/ImageSource.mjs';\nexport { TextureSource } from './rendering/renderers/shared/texture/sources/TextureSource.mjs';\nexport { VideoSource } from './rendering/renderers/shared/texture/sources/VideoSource.mjs';\nexport { Texture } from './rendering/renderers/shared/texture/Texture.mjs';\nexport { TextureGCSystem } from './rendering/renderers/shared/texture/TextureGCSystem.mjs';\nexport { TextureMatrix } from './rendering/renderers/shared/texture/TextureMatrix.mjs';\nexport { TexturePool, TexturePoolClass } from './rendering/renderers/shared/texture/TexturePool.mjs';\nexport { TextureStyle } from './rendering/renderers/shared/texture/TextureStyle.mjs';\nexport { TextureUvs } from './rendering/renderers/shared/texture/TextureUvs.mjs';\nexport { generateUID } from './rendering/renderers/shared/texture/utils/generateUID.mjs';\nexport { getCanvasTexture, hasCachedCanvasTexture } from './rendering/renderers/shared/texture/utils/getCanvasTexture.mjs';\nexport { getSupportedCompressedTextureFormats } from './rendering/renderers/shared/texture/utils/getSupportedCompressedTextureFormats.mjs';\nexport { getSupportedTextureFormats, nonCompressedFormats } from './rendering/renderers/shared/texture/utils/getSupportedTextureFormats.mjs';\nexport { autoDetectSource, resourceToTexture, textureFrom } from './rendering/renderers/shared/texture/utils/textureFrom.mjs';\nexport { createIdFromString } from './rendering/renderers/shared/utils/createIdFromString.mjs';\nexport { parseFunctionBody } from './rendering/renderers/shared/utils/parseFunctionBody.mjs';\nexport { ViewSystem } from './rendering/renderers/shared/view/ViewSystem.mjs';\nexport { RendererType } from './rendering/renderers/types.mjs';\nexport { default as particlesFrag } from './scene/particle-container/shared/shader/particles.frag.mjs';\nexport { default as particlesVert } from './scene/particle-container/shared/shader/particles.vert.mjs';\nexport { default as particlesWgsl } from './scene/particle-container/shared/shader/particles.wgsl.mjs';\nexport { Bounds } from './scene/container/bounds/Bounds.mjs';\nexport { getFastGlobalBounds } from './scene/container/bounds/getFastGlobalBounds.mjs';\nexport { _getGlobalBounds, getGlobalBounds, updateTransformBackwards } from './scene/container/bounds/getGlobalBounds.mjs';\nexport { getLocalBounds, getParent } from './scene/container/bounds/getLocalBounds.mjs';\nexport { getGlobalRenderableBounds } from './scene/container/bounds/getRenderableBounds.mjs';\nexport { boundsPool, matrixPool } from './scene/container/bounds/utils/matrixAndBoundsPool.mjs';\nexport { cacheAsTextureMixin } from './scene/container/container-mixins/cacheAsTextureMixin.mjs';\nexport { childrenHelperMixin } from './scene/container/container-mixins/childrenHelperMixin.mjs';\nexport { collectRenderablesMixin } from './scene/container/container-mixins/collectRenderablesMixin.mjs';\nexport { effectsMixin } from './scene/container/container-mixins/effectsMixin.mjs';\nexport { findMixin } from './scene/container/container-mixins/findMixin.mjs';\nexport { getFastGlobalBoundsMixin } from './scene/container/container-mixins/getFastGlobalBoundsMixin.mjs';\nexport { bgr2rgb, getGlobalMixin } from './scene/container/container-mixins/getGlobalMixin.mjs';\nexport { measureMixin } from './scene/container/container-mixins/measureMixin.mjs';\nexport { onRenderMixin } from './scene/container/container-mixins/onRenderMixin.mjs';\nexport { sortMixin } from './scene/container/container-mixins/sortMixin.mjs';\nexport { toLocalGlobalMixin } from './scene/container/container-mixins/toLocalGlobalMixin.mjs';\nexport { Container, UPDATE_BLEND, UPDATE_COLOR, UPDATE_TRANSFORM, UPDATE_VISIBLE } from './scene/container/Container.mjs';\nexport { CustomRenderPipe } from './scene/container/CustomRenderPipe.mjs';\nexport { RenderContainer } from './scene/container/RenderContainer.mjs';\nexport { RenderGroup } from './scene/container/RenderGroup.mjs';\nexport { RenderGroupPipe } from './scene/container/RenderGroupPipe.mjs';\nexport { RenderGroupSystem } from './scene/container/RenderGroupSystem.mjs';\nexport { assignWithIgnore } from './scene/container/utils/assignWithIgnore.mjs';\nexport { checkChildrenDidChange } from './scene/container/utils/checkChildrenDidChange.mjs';\nexport { clearList } from './scene/container/utils/clearList.mjs';\nexport { collectAllRenderables } from './scene/container/utils/collectAllRenderables.mjs';\nexport { definedProps } from './scene/container/utils/definedProps.mjs';\nexport { executeInstructions } from './scene/container/utils/executeInstructions.mjs';\nexport { mixHexColors } from './scene/container/utils/mixHexColors.mjs';\nexport { multiplyColors } from './scene/container/utils/multiplyColors.mjs';\nexport { multiplyHexColors } from './scene/container/utils/multiplyHexColors.mjs';\nexport { updateLocalTransform } from './scene/container/utils/updateLocalTransform.mjs';\nexport { updateRenderGroupTransform, updateRenderGroupTransforms, updateTransformAndChildren } from './scene/container/utils/updateRenderGroupTransforms.mjs';\nexport { updateWorldTransform } from './scene/container/utils/updateWorldTransform.mjs';\nexport { validateRenderables } from './scene/container/utils/validateRenderables.mjs';\nexport { GlGraphicsAdaptor } from './scene/graphics/gl/GlGraphicsAdaptor.mjs';\nexport { color32BitToUniform, colorToUniform } from './scene/graphics/gpu/colorToUniform.mjs';\nexport { GpuGraphicsAdaptor } from './scene/graphics/gpu/GpuGraphicsAdaptor.mjs';\nexport { BatchableGraphics } from './scene/graphics/shared/BatchableGraphics.mjs';\nexport { buildAdaptiveBezier } from './scene/graphics/shared/buildCommands/buildAdaptiveBezier.mjs';\nexport { buildAdaptiveQuadratic } from './scene/graphics/shared/buildCommands/buildAdaptiveQuadratic.mjs';\nexport { buildArc } from './scene/graphics/shared/buildCommands/buildArc.mjs';\nexport { buildArcTo } from './scene/graphics/shared/buildCommands/buildArcTo.mjs';\nexport { buildArcToSvg } from './scene/graphics/shared/buildCommands/buildArcToSvg.mjs';\nexport { buildCircle, buildEllipse, buildRoundedRectangle } from './scene/graphics/shared/buildCommands/buildCircle.mjs';\nexport { buildLine } from './scene/graphics/shared/buildCommands/buildLine.mjs';\nexport { buildPixelLine } from './scene/graphics/shared/buildCommands/buildPixelLine.mjs';\nexport { buildPolygon } from './scene/graphics/shared/buildCommands/buildPolygon.mjs';\nexport { buildRectangle } from './scene/graphics/shared/buildCommands/buildRectangle.mjs';\nexport { buildTriangle } from './scene/graphics/shared/buildCommands/buildTriangle.mjs';\nexport { closePointEps, curveEps } from './scene/graphics/shared/const.mjs';\nexport { FillGradient } from './scene/graphics/shared/fill/FillGradient.mjs';\nexport { FillPattern } from './scene/graphics/shared/fill/FillPattern.mjs';\nexport { Graphics } from './scene/graphics/shared/Graphics.mjs';\nexport { GraphicsContext } from './scene/graphics/shared/GraphicsContext.mjs';\nexport { GpuGraphicsContext, GraphicsContextRenderData, GraphicsContextSystem } from './scene/graphics/shared/GraphicsContextSystem.mjs';\nexport { GraphicsPipe } from './scene/graphics/shared/GraphicsPipe.mjs';\nexport { GraphicsPath } from './scene/graphics/shared/path/GraphicsPath.mjs';\nexport { roundedShapeArc, roundedShapeQuadraticCurve } from './scene/graphics/shared/path/roundShape.mjs';\nexport { ShapePath } from './scene/graphics/shared/path/ShapePath.mjs';\nexport { parseSVGDefinitions } from './scene/graphics/shared/svg/parseSVGDefinitions.mjs';\nexport { parseSVGFloatAttribute } from './scene/graphics/shared/svg/parseSVGFloatAttribute.mjs';\nexport { parseSVGPath } from './scene/graphics/shared/svg/parseSVGPath.mjs';\nexport { parseAttribute, parseSVGStyle, styleAttributes } from './scene/graphics/shared/svg/parseSVGStyle.mjs';\nexport { SVGParser } from './scene/graphics/shared/svg/SVGParser.mjs';\nexport { extractSvgUrlId } from './scene/graphics/shared/svg/utils/extractSvgUrlId.mjs';\nexport { buildContextBatches, shapeBuilders } from './scene/graphics/shared/utils/buildContextBatches.mjs';\nexport { buildGeometryFromPath } from './scene/graphics/shared/utils/buildGeometryFromPath.mjs';\nexport { toFillStyle, toStrokeStyle } from './scene/graphics/shared/utils/convertFillInputToFillStyle.mjs';\nexport { generateTextureMatrix } from './scene/graphics/shared/utils/generateTextureFillMatrix.mjs';\nexport { getOrientationOfPoints } from './scene/graphics/shared/utils/getOrientationOfPoints.mjs';\nexport { triangulateWithHoles } from './scene/graphics/shared/utils/triangulateWithHoles.mjs';\nexport { RenderLayer, RenderLayerClass } from './scene/layers/RenderLayer.mjs';\nexport { PerspectiveMesh } from './scene/mesh-perspective/PerspectiveMesh.mjs';\nexport { PerspectivePlaneGeometry } from './scene/mesh-perspective/PerspectivePlaneGeometry.mjs';\nexport { applyProjectiveTransformationToPlane } from './scene/mesh-perspective/utils/applyProjectiveTransformationToPlane.mjs';\nexport { compute2DProjection } from './scene/mesh-perspective/utils/compute2DProjections.mjs';\nexport { MeshPlane } from './scene/mesh-plane/MeshPlane.mjs';\nexport { PlaneGeometry } from './scene/mesh-plane/PlaneGeometry.mjs';\nexport { MeshRope } from './scene/mesh-simple/MeshRope.mjs';\nexport { MeshSimple } from './scene/mesh-simple/MeshSimple.mjs';\nexport { RopeGeometry } from './scene/mesh-simple/RopeGeometry.mjs';\nexport { GlMeshAdaptor } from './scene/mesh/gl/GlMeshAdaptor.mjs';\nexport { GpuMeshAdapter } from './scene/mesh/gpu/GpuMeshAdapter.mjs';\nexport { BatchableMesh } from './scene/mesh/shared/BatchableMesh.mjs';\nexport { getTextureDefaultMatrix } from './scene/mesh/shared/getTextureDefaultMatrix.mjs';\nexport { Mesh } from './scene/mesh/shared/Mesh.mjs';\nexport { MeshGeometry } from './scene/mesh/shared/MeshGeometry.mjs';\nexport { MeshPipe } from './scene/mesh/shared/MeshPipe.mjs';\nexport { GlParticleContainerAdaptor } from './scene/particle-container/gl/GlParticleContainerAdaptor.mjs';\nexport { GpuParticleContainerAdaptor } from './scene/particle-container/gpu/GpuParticleContainerAdaptor.mjs';\nexport { GlParticleContainerPipe } from './scene/particle-container/shared/GlParticleContainerPipe.mjs';\nexport { GpuParticleContainerPipe } from './scene/particle-container/shared/GpuParticleContainerPipe.mjs';\nexport { Particle } from './scene/particle-container/shared/Particle.mjs';\nexport { ParticleBuffer } from './scene/particle-container/shared/ParticleBuffer.mjs';\nexport { ParticleContainer } from './scene/particle-container/shared/ParticleContainer.mjs';\nexport { ParticleContainerPipe } from './scene/particle-container/shared/ParticleContainerPipe.mjs';\nexport { particleData } from './scene/particle-container/shared/particleData.mjs';\nexport { ParticleShader } from './scene/particle-container/shared/shader/ParticleShader.mjs';\nexport { createIndicesForQuads } from './scene/particle-container/shared/utils/createIndicesForQuads.mjs';\nexport { generateParticleUpdateFunction } from './scene/particle-container/shared/utils/generateParticleUpdateFunction.mjs';\nexport { AnimatedSprite } from './scene/sprite-animated/AnimatedSprite.mjs';\nexport { NineSliceGeometry } from './scene/sprite-nine-slice/NineSliceGeometry.mjs';\nexport { NineSlicePlane, NineSliceSprite } from './scene/sprite-nine-slice/NineSliceSprite.mjs';\nexport { NineSliceSpritePipe } from './scene/sprite-nine-slice/NineSliceSpritePipe.mjs';\nexport { tilingBit, tilingBitGl } from './scene/sprite-tiling/shader/tilingBit.mjs';\nexport { TilingSpriteShader } from './scene/sprite-tiling/shader/TilingSpriteShader.mjs';\nexport { TilingSprite } from './scene/sprite-tiling/TilingSprite.mjs';\nexport { TilingSpritePipe } from './scene/sprite-tiling/TilingSpritePipe.mjs';\nexport { applyMatrix } from './scene/sprite-tiling/utils/applyMatrix.mjs';\nexport { QuadGeometry } from './scene/sprite-tiling/utils/QuadGeometry.mjs';\nexport { setPositions } from './scene/sprite-tiling/utils/setPositions.mjs';\nexport { setUvs } from './scene/sprite-tiling/utils/setUvs.mjs';\nexport { BatchableSprite } from './scene/sprite/BatchableSprite.mjs';\nexport { Sprite } from './scene/sprite/Sprite.mjs';\nexport { SpritePipe } from './scene/sprite/SpritePipe.mjs';\nexport { AbstractBitmapFont } from './scene/text-bitmap/AbstractBitmapFont.mjs';\nexport { bitmapFontTextParser } from './scene/text-bitmap/asset/bitmapFontTextParser.mjs';\nexport { bitmapFontXMLParser } from './scene/text-bitmap/asset/bitmapFontXMLParser.mjs';\nexport { bitmapFontXMLStringParser } from './scene/text-bitmap/asset/bitmapFontXMLStringParser.mjs';\nexport { bitmapFontCachePlugin, loadBitmapFont } from './scene/text-bitmap/asset/loadBitmapFont.mjs';\nexport { BitmapFont } from './scene/text-bitmap/BitmapFont.mjs';\nexport { BitmapFontManager } from './scene/text-bitmap/BitmapFontManager.mjs';\nexport { BitmapText } from './scene/text-bitmap/BitmapText.mjs';\nexport { BitmapTextPipe } from './scene/text-bitmap/BitmapTextPipe.mjs';\nexport { DynamicBitmapFont } from './scene/text-bitmap/DynamicBitmapFont.mjs';\nexport { getBitmapTextLayout } from './scene/text-bitmap/utils/getBitmapTextLayout.mjs';\nexport { resolveCharacters } from './scene/text-bitmap/utils/resolveCharacters.mjs';\nexport { HTMLText } from './scene/text-html/HTMLText.mjs';\nexport { HTMLTextPipe } from './scene/text-html/HTMLTextPipe.mjs';\nexport { HTMLTextRenderData, nssvg, nsxhtml } from './scene/text-html/HTMLTextRenderData.mjs';\nexport { HTMLTextStyle } from './scene/text-html/HTMLTextStyle.mjs';\nexport { HTMLTextSystem } from './scene/text-html/HTMLTextSystem.mjs';\nexport { extractFontFamilies } from './scene/text-html/utils/extractFontFamilies.mjs';\nexport { FontStylePromiseCache, getFontCss } from './scene/text-html/utils/getFontCss.mjs';\nexport { getSVGUrl } from './scene/text-html/utils/getSVGUrl.mjs';\nexport { getTemporaryCanvasFromImage } from './scene/text-html/utils/getTemporaryCanvasFromImage.mjs';\nexport { loadFontAsBase64 } from './scene/text-html/utils/loadFontAsBase64.mjs';\nexport { loadFontCSS } from './scene/text-html/utils/loadFontCSS.mjs';\nexport { loadSVGImage } from './scene/text-html/utils/loadSVGImage.mjs';\nexport { measureHtmlText } from './scene/text-html/utils/measureHtmlText.mjs';\nexport { textStyleToCSS } from './scene/text-html/utils/textStyleToCSS.mjs';\nexport { AbstractText, ensureTextOptions } from './scene/text/AbstractText.mjs';\nexport { CanvasTextMetrics } from './scene/text/canvas/CanvasTextMetrics.mjs';\nexport { CanvasTextPipe } from './scene/text/canvas/CanvasTextPipe.mjs';\nexport { CanvasTextSystem } from './scene/text/canvas/CanvasTextSystem.mjs';\nexport { fontStringFromTextStyle } from './scene/text/canvas/utils/fontStringFromTextStyle.mjs';\nexport { getCanvasFillStyle } from './scene/text/canvas/utils/getCanvasFillStyle.mjs';\nexport { SdfShader } from './scene/text/sdfShader/SdfShader.mjs';\nexport { localUniformMSDFBit, localUniformMSDFBitGl } from './scene/text/sdfShader/shader-bits/localUniformMSDFBit.mjs';\nexport { mSDFBit, mSDFBitGl } from './scene/text/sdfShader/shader-bits/mSDFBit.mjs';\nexport { Text } from './scene/text/Text.mjs';\nexport { TextStyle } from './scene/text/TextStyle.mjs';\nexport { ensureTextStyle } from './scene/text/utils/ensureTextStyle.mjs';\nexport { generateTextStyleKey } from './scene/text/utils/generateTextStyleKey.mjs';\nexport { getPo2TextureFromSource } from './scene/text/utils/getPo2TextureFromSource.mjs';\nexport { updateTextBounds } from './scene/text/utils/updateTextBounds.mjs';\nexport { ViewContainer } from './scene/view/ViewContainer.mjs';\nexport { Spritesheet } from './spritesheet/Spritesheet.mjs';\nexport { spritesheetAsset } from './spritesheet/spritesheetAsset.mjs';\nexport { UPDATE_PRIORITY } from './ticker/const.mjs';\nexport { Ticker } from './ticker/Ticker.mjs';\nexport { TickerListener } from './ticker/TickerListener.mjs';\nexport { detectVideoAlphaMode } from './utils/browser/detectVideoAlphaMode.mjs';\nexport { isMobile } from './utils/browser/isMobile.mjs';\nexport { isSafari } from './utils/browser/isSafari.mjs';\nexport { isWebGLSupported } from './utils/browser/isWebGLSupported.mjs';\nexport { isWebGPUSupported } from './utils/browser/isWebGPUSupported.mjs';\nexport { unsafeEvalSupported } from './utils/browser/unsafeEvalSupported.mjs';\nexport { getCanvasBoundingBox } from './utils/canvas/getCanvasBoundingBox.mjs';\nexport { DATA_URI, VERSION } from './utils/const.mjs';\nexport { default as EventEmitter } from 'eventemitter3';\nexport { cleanArray, cleanHash } from './utils/data/clean.mjs';\nexport { removeItems } from './utils/data/removeItems.mjs';\nexport { resetUids, uid } from './utils/data/uid.mjs';\nexport { updateQuadBounds } from './utils/data/updateQuadBounds.mjs';\nexport { ViewableBuffer } from './utils/data/ViewableBuffer.mjs';\nexport { ApplicationInitHook, RendererInitHook } from './utils/global/globalHooks.mjs';\nexport { deprecation, v8_0_0, v8_3_4 } from './utils/logging/deprecation.mjs';\nexport { logDebugTexture } from './utils/logging/logDebugTexture.mjs';\nexport { logRenderGroupScene, logScene } from './utils/logging/logScene.mjs';\nexport { warn } from './utils/logging/warn.mjs';\nexport { NOOP } from './utils/misc/NOOP.mjs';\nexport { Transform } from './utils/misc/Transform.mjs';\nexport { getResolutionOfUrl } from './utils/network/getResolutionOfUrl.mjs';\nexport { path } from './utils/path.mjs';\nexport { Pool } from './utils/pool/Pool.mjs';\nexport { BigPool, PoolGroupClass } from './utils/pool/PoolGroup.mjs';\nexport { sayHello } from './utils/sayHello.mjs';\nexport { default as earcut } from 'earcut';\n\n\"use strict\";\nextensions.add(browserExt, webworkerExt);\n\nexport { browserExt, extensions, webworkerExt };\n//# sourceMappingURL=index.mjs.map\n","type LogType = \"jsx\" | \"pixi\";\n\nfunction isDebugEnabled(type: LogType): boolean {\n  const value = window.localStorage.getItem(\"pixi-solid\");\n  return value === \"*\" || value === type;\n}\n\nexport const createLogger = (type: LogType) => {\n  const namespace = `pixi-solid:${type}`;\n  return {\n    log: (...args: unknown[]) => {\n      if (isDebugEnabled(type)) {\n        console.log(`[${namespace}]`, ...args);\n      }\n    },\n    error: (...args: unknown[]) => {\n      if (isDebugEnabled(type)) {\n        console.error(`[${namespace}]`, ...args);\n      }\n    },\n  };\n};\n","// runtime.ts\nimport { createRenderer } from \"solid-js/universal\";\nimport { type Container } from \"pixi.js\";\nimport { createLogger } from \"./debug\";\n\nconst console = createLogger(\"jsx\");\n\nexport const {\n  // Hmm, this is all I need to wrap pixi.js with solid-js?\n  insert,\n  effect,\n  spread,\n\n  // render,\n  // memo,\n  // createComponent,\n  // createElement,\n  // createTextNode,\n  // insertNode,\n  // setProp,\n  // mergeProps,\n  // use,\n} = createRenderer<Container>({\n  createElement(type: string): Container {\n    console.log(\"createElement\", type);\n    // return document.createElement(type);\n    return undefined as unknown as Container;\n  },\n\n  createTextNode(value: string): Container {\n    console.log(\"createTextNode\", value);\n    return undefined as unknown as Container;\n  },\n\n  replaceText(textNode: Container, value: string): void {\n    console.log(\"replaceText\", textNode, value);\n  },\n\n  insertNode(parent: Container, node: Container, anchor?: Container): void {\n    console.log(\"insertNode\", { parent, node, anchor });\n\n    if (anchor) {\n      const anchorIndex = parent.children.indexOf(anchor);\n      if (anchorIndex !== -1) {\n        parent.addChildAt(node, anchorIndex);\n      } else {\n        parent.addChild(node);\n      }\n    } else {\n      parent.addChild(node);\n    }\n    return;\n  },\n\n  removeNode(parent: Container, node: Container): void {\n    console.log(\"removeNode\", parent, node);\n    parent.removeChild(node);\n  },\n\n  setProperty(node: Container, name: string, value: unknown): void {\n    // log(\"setProperty\", node, name, value);\n\n    // I was using Object.assign(node, props) until it didn't work on\n    // <BitmapText style={{ fontFamily: \"Desyrel\" }}> in the text/bitmap-text demo.\n    const target = node as Container & Record<string, unknown>;\n    if (isPlainObject(value) && target[name]) {\n      Object.assign(target[name], value);\n    } else {\n      target[name] = value;\n    }\n  },\n\n  isTextNode(node: Container): boolean {\n    console.log(\"isTextNode\", node);\n    return false;\n  },\n\n  getParentNode(node: Container): Container | undefined {\n    console.log(\"getParentNode\", node);\n    return (node.parent ?? undefined) as Container;\n  },\n\n  getFirstChild(node: Container): Container | undefined {\n    console.log(\"getFirstChild\", node);\n    return node.children[0] as Container | undefined;\n  },\n\n  getNextSibling(node: Container): Container | undefined {\n    console.log(\"getNextSibling\", node);\n    if (node.parent) {\n      const index = node.parent.children.indexOf(node);\n      if (index !== -1 && index < node.parent.children.length - 1) {\n        return node.parent.children[index + 1] as Container;\n      }\n    }\n\n    return undefined;\n  },\n});\n\nfunction isPlainObject(value: unknown): value is Record<string, unknown> {\n  return (\n    typeof value === \"object\" &&\n    value !== null &&\n    !Array.isArray(value) &&\n    value.constructor === Object &&\n    Object.getPrototypeOf(value) === Object.prototype\n  );\n}\n\n// Re-export components from solid-js\nexport {\n  For,\n  Show,\n  Suspense,\n  SuspenseList,\n  Switch,\n  Match,\n  Index,\n  ErrorBoundary,\n} from \"solid-js\";\n","import { createMemo, createRoot, createRenderEffect, untrack, sharedConfig, enableHydration, getOwner, createEffect, runWithOwner, createSignal, onCleanup, splitProps } from 'solid-js';\nexport { ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, createComponent, createRenderEffect as effect, getOwner, mergeProps, untrack } from 'solid-js';\n\nconst booleans = [\"allowfullscreen\", \"async\", \"autofocus\", \"autoplay\", \"checked\", \"controls\", \"default\", \"disabled\", \"formnovalidate\", \"hidden\", \"indeterminate\", \"inert\", \"ismap\", \"loop\", \"multiple\", \"muted\", \"nomodule\", \"novalidate\", \"open\", \"playsinline\", \"readonly\", \"required\", \"reversed\", \"seamless\", \"selected\"];\nconst Properties = /*#__PURE__*/new Set([\"className\", \"value\", \"readOnly\", \"noValidate\", \"formNoValidate\", \"isMap\", \"noModule\", \"playsInline\", ...booleans]);\nconst ChildProperties = /*#__PURE__*/new Set([\"innerHTML\", \"textContent\", \"innerText\", \"children\"]);\nconst Aliases = /*#__PURE__*/Object.assign(Object.create(null), {\n  className: \"class\",\n  htmlFor: \"for\"\n});\nconst PropAliases = /*#__PURE__*/Object.assign(Object.create(null), {\n  class: \"className\",\n  novalidate: {\n    $: \"noValidate\",\n    FORM: 1\n  },\n  formnovalidate: {\n    $: \"formNoValidate\",\n    BUTTON: 1,\n    INPUT: 1\n  },\n  ismap: {\n    $: \"isMap\",\n    IMG: 1\n  },\n  nomodule: {\n    $: \"noModule\",\n    SCRIPT: 1\n  },\n  playsinline: {\n    $: \"playsInline\",\n    VIDEO: 1\n  },\n  readonly: {\n    $: \"readOnly\",\n    INPUT: 1,\n    TEXTAREA: 1\n  }\n});\nfunction getPropAlias(prop, tagName) {\n  const a = PropAliases[prop];\n  return typeof a === \"object\" ? a[tagName] ? a[\"$\"] : undefined : a;\n}\nconst DelegatedEvents = /*#__PURE__*/new Set([\"beforeinput\", \"click\", \"dblclick\", \"contextmenu\", \"focusin\", \"focusout\", \"input\", \"keydown\", \"keyup\", \"mousedown\", \"mousemove\", \"mouseout\", \"mouseover\", \"mouseup\", \"pointerdown\", \"pointermove\", \"pointerout\", \"pointerover\", \"pointerup\", \"touchend\", \"touchmove\", \"touchstart\"]);\nconst SVGElements = /*#__PURE__*/new Set([\n\"altGlyph\", \"altGlyphDef\", \"altGlyphItem\", \"animate\", \"animateColor\", \"animateMotion\", \"animateTransform\", \"circle\", \"clipPath\", \"color-profile\", \"cursor\", \"defs\", \"desc\", \"ellipse\", \"feBlend\", \"feColorMatrix\", \"feComponentTransfer\", \"feComposite\", \"feConvolveMatrix\", \"feDiffuseLighting\", \"feDisplacementMap\", \"feDistantLight\", \"feDropShadow\", \"feFlood\", \"feFuncA\", \"feFuncB\", \"feFuncG\", \"feFuncR\", \"feGaussianBlur\", \"feImage\", \"feMerge\", \"feMergeNode\", \"feMorphology\", \"feOffset\", \"fePointLight\", \"feSpecularLighting\", \"feSpotLight\", \"feTile\", \"feTurbulence\", \"filter\", \"font\", \"font-face\", \"font-face-format\", \"font-face-name\", \"font-face-src\", \"font-face-uri\", \"foreignObject\", \"g\", \"glyph\", \"glyphRef\", \"hkern\", \"image\", \"line\", \"linearGradient\", \"marker\", \"mask\", \"metadata\", \"missing-glyph\", \"mpath\", \"path\", \"pattern\", \"polygon\", \"polyline\", \"radialGradient\", \"rect\",\n\"set\", \"stop\",\n\"svg\", \"switch\", \"symbol\", \"text\", \"textPath\",\n\"tref\", \"tspan\", \"use\", \"view\", \"vkern\"]);\nconst SVGNamespace = {\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\"\n};\nconst DOMElements = /*#__PURE__*/new Set([\"html\", \"base\", \"head\", \"link\", \"meta\", \"style\", \"title\", \"body\", \"address\", \"article\", \"aside\", \"footer\", \"header\", \"main\", \"nav\", \"section\", \"body\", \"blockquote\", \"dd\", \"div\", \"dl\", \"dt\", \"figcaption\", \"figure\", \"hr\", \"li\", \"ol\", \"p\", \"pre\", \"ul\", \"a\", \"abbr\", \"b\", \"bdi\", \"bdo\", \"br\", \"cite\", \"code\", \"data\", \"dfn\", \"em\", \"i\", \"kbd\", \"mark\", \"q\", \"rp\", \"rt\", \"ruby\", \"s\", \"samp\", \"small\", \"span\", \"strong\", \"sub\", \"sup\", \"time\", \"u\", \"var\", \"wbr\", \"area\", \"audio\", \"img\", \"map\", \"track\", \"video\", \"embed\", \"iframe\", \"object\", \"param\", \"picture\", \"portal\", \"source\", \"svg\", \"math\", \"canvas\", \"noscript\", \"script\", \"del\", \"ins\", \"caption\", \"col\", \"colgroup\", \"table\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\", \"button\", \"datalist\", \"fieldset\", \"form\", \"input\", \"label\", \"legend\", \"meter\", \"optgroup\", \"option\", \"output\", \"progress\", \"select\", \"textarea\", \"details\", \"dialog\", \"menu\", \"summary\", \"details\", \"slot\", \"template\", \"acronym\", \"applet\", \"basefont\", \"bgsound\", \"big\", \"blink\", \"center\", \"content\", \"dir\", \"font\", \"frame\", \"frameset\", \"hgroup\", \"image\", \"keygen\", \"marquee\", \"menuitem\", \"nobr\", \"noembed\", \"noframes\", \"plaintext\", \"rb\", \"rtc\", \"shadow\", \"spacer\", \"strike\", \"tt\", \"xmp\", \"a\", \"abbr\", \"acronym\", \"address\", \"applet\", \"area\", \"article\", \"aside\", \"audio\", \"b\", \"base\", \"basefont\", \"bdi\", \"bdo\", \"bgsound\", \"big\", \"blink\", \"blockquote\", \"body\", \"br\", \"button\", \"canvas\", \"caption\", \"center\", \"cite\", \"code\", \"col\", \"colgroup\", \"content\", \"data\", \"datalist\", \"dd\", \"del\", \"details\", \"dfn\", \"dialog\", \"dir\", \"div\", \"dl\", \"dt\", \"em\", \"embed\", \"fieldset\", \"figcaption\", \"figure\", \"font\", \"footer\", \"form\", \"frame\", \"frameset\", \"head\", \"header\", \"hgroup\", \"hr\", \"html\", \"i\", \"iframe\", \"image\", \"img\", \"input\", \"ins\", \"kbd\", \"keygen\", \"label\", \"legend\", \"li\", \"link\", \"main\", \"map\", \"mark\", \"marquee\", \"menu\", \"menuitem\", \"meta\", \"meter\", \"nav\", \"nobr\", \"noembed\", \"noframes\", \"noscript\", \"object\", \"ol\", \"optgroup\", \"option\", \"output\", \"p\", \"param\", \"picture\", \"plaintext\", \"portal\", \"pre\", \"progress\", \"q\", \"rb\", \"rp\", \"rt\", \"rtc\", \"ruby\", \"s\", \"samp\", \"script\", \"section\", \"select\", \"shadow\", \"slot\", \"small\", \"source\", \"spacer\", \"span\", \"strike\", \"strong\", \"style\", \"sub\", \"summary\", \"sup\", \"table\", \"tbody\", \"td\", \"template\", \"textarea\", \"tfoot\", \"th\", \"thead\", \"time\", \"title\", \"tr\", \"track\", \"tt\", \"u\", \"ul\", \"var\", \"video\", \"wbr\", \"xmp\", \"input\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"]);\n\nconst memo = fn => createMemo(() => fn());\n\nfunction reconcileArrays(parentNode, a, b) {\n  let bLength = b.length,\n    aEnd = a.length,\n    bEnd = bLength,\n    aStart = 0,\n    bStart = 0,\n    after = a[aEnd - 1].nextSibling,\n    map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    if (a[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n      continue;\n    }\n    while (a[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    }\n    if (aEnd === aStart) {\n      const node = bEnd < bLength ? bStart ? b[bStart - 1].nextSibling : b[bEnd - bStart] : after;\n      while (bStart < bEnd) parentNode.insertBefore(b[bStart++], node);\n    } else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        if (!map || !map.has(a[aStart])) a[aStart].remove();\n        aStart++;\n      }\n    } else if (a[aStart] === b[bEnd - 1] && b[bStart] === a[aEnd - 1]) {\n      const node = a[--aEnd].nextSibling;\n      parentNode.insertBefore(b[bStart++], a[aStart++].nextSibling);\n      parentNode.insertBefore(b[--bEnd], node);\n      a[aEnd] = b[bEnd];\n    } else {\n      if (!map) {\n        map = new Map();\n        let i = bStart;\n        while (i < bEnd) map.set(b[i], i++);\n      }\n      const index = map.get(a[aStart]);\n      if (index != null) {\n        if (bStart < index && index < bEnd) {\n          let i = aStart,\n            sequence = 1,\n            t;\n          while (++i < aEnd && i < bEnd) {\n            if ((t = map.get(a[i])) == null || t !== index + sequence) break;\n            sequence++;\n          }\n          if (sequence > index - bStart) {\n            const node = a[aStart];\n            while (bStart < index) parentNode.insertBefore(b[bStart++], node);\n          } else parentNode.replaceChild(b[bStart++], a[aStart++]);\n        } else aStart++;\n      } else a[aStart++].remove();\n    }\n  }\n}\n\nconst $$EVENTS = \"_$DX_DELEGATE\";\nfunction render(code, element, init, options = {}) {\n  let disposer;\n  createRoot(dispose => {\n    disposer = dispose;\n    element === document ? code() : insert(element, code(), element.firstChild ? null : undefined, init);\n  }, options.owner);\n  return () => {\n    disposer();\n    element.textContent = \"\";\n  };\n}\nfunction template(html, isImportNode, isSVG, isMathML) {\n  let node;\n  const create = () => {\n    const t = isMathML ? document.createElementNS(\"http://www.w3.org/1998/Math/MathML\", \"template\") : document.createElement(\"template\");\n    t.innerHTML = html;\n    return isSVG ? t.content.firstChild.firstChild : isMathML ? t.firstChild : t.content.firstChild;\n  };\n  const fn = isImportNode ? () => untrack(() => document.importNode(node || (node = create()), true)) : () => (node || (node = create())).cloneNode(true);\n  fn.cloneNode = fn;\n  return fn;\n}\nfunction delegateEvents(eventNames, document = window.document) {\n  const e = document[$$EVENTS] || (document[$$EVENTS] = new Set());\n  for (let i = 0, l = eventNames.length; i < l; i++) {\n    const name = eventNames[i];\n    if (!e.has(name)) {\n      e.add(name);\n      document.addEventListener(name, eventHandler);\n    }\n  }\n}\nfunction clearDelegatedEvents(document = window.document) {\n  if (document[$$EVENTS]) {\n    for (let name of document[$$EVENTS].keys()) document.removeEventListener(name, eventHandler);\n    delete document[$$EVENTS];\n  }\n}\nfunction setProperty(node, name, value) {\n  if (isHydrating(node)) return;\n  node[name] = value;\n}\nfunction setAttribute(node, name, value) {\n  if (isHydrating(node)) return;\n  if (value == null) node.removeAttribute(name);else node.setAttribute(name, value);\n}\nfunction setAttributeNS(node, namespace, name, value) {\n  if (isHydrating(node)) return;\n  if (value == null) node.removeAttributeNS(namespace, name);else node.setAttributeNS(namespace, name, value);\n}\nfunction setBoolAttribute(node, name, value) {\n  if (isHydrating(node)) return;\n  value ? node.setAttribute(name, \"\") : node.removeAttribute(name);\n}\nfunction className(node, value) {\n  if (isHydrating(node)) return;\n  if (value == null) node.removeAttribute(\"class\");else node.className = value;\n}\nfunction addEventListener(node, name, handler, delegate) {\n  if (delegate) {\n    if (Array.isArray(handler)) {\n      node[`$$${name}`] = handler[0];\n      node[`$$${name}Data`] = handler[1];\n    } else node[`$$${name}`] = handler;\n  } else if (Array.isArray(handler)) {\n    const handlerFn = handler[0];\n    node.addEventListener(name, handler[0] = e => handlerFn.call(node, handler[1], e));\n  } else node.addEventListener(name, handler, typeof handler !== \"function\" && handler);\n}\nfunction classList(node, value, prev = {}) {\n  const classKeys = Object.keys(value || {}),\n    prevKeys = Object.keys(prev);\n  let i, len;\n  for (i = 0, len = prevKeys.length; i < len; i++) {\n    const key = prevKeys[i];\n    if (!key || key === \"undefined\" || value[key]) continue;\n    toggleClassKey(node, key, false);\n    delete prev[key];\n  }\n  for (i = 0, len = classKeys.length; i < len; i++) {\n    const key = classKeys[i],\n      classValue = !!value[key];\n    if (!key || key === \"undefined\" || prev[key] === classValue || !classValue) continue;\n    toggleClassKey(node, key, true);\n    prev[key] = classValue;\n  }\n  return prev;\n}\nfunction style(node, value, prev) {\n  if (!value) return prev ? setAttribute(node, \"style\") : value;\n  const nodeStyle = node.style;\n  if (typeof value === \"string\") return nodeStyle.cssText = value;\n  typeof prev === \"string\" && (nodeStyle.cssText = prev = undefined);\n  prev || (prev = {});\n  value || (value = {});\n  let v, s;\n  for (s in prev) {\n    value[s] == null && nodeStyle.removeProperty(s);\n    delete prev[s];\n  }\n  for (s in value) {\n    v = value[s];\n    if (v !== prev[s]) {\n      nodeStyle.setProperty(s, v);\n      prev[s] = v;\n    }\n  }\n  return prev;\n}\nfunction spread(node, props = {}, isSVG, skipChildren) {\n  const prevProps = {};\n  if (!skipChildren) {\n    createRenderEffect(() => prevProps.children = insertExpression(node, props.children, prevProps.children));\n  }\n  createRenderEffect(() => typeof props.ref === \"function\" && use(props.ref, node));\n  createRenderEffect(() => assign(node, props, isSVG, true, prevProps, true));\n  return prevProps;\n}\nfunction dynamicProperty(props, key) {\n  const src = props[key];\n  Object.defineProperty(props, key, {\n    get() {\n      return src();\n    },\n    enumerable: true\n  });\n  return props;\n}\nfunction use(fn, element, arg) {\n  return untrack(() => fn(element, arg));\n}\nfunction insert(parent, accessor, marker, initial) {\n  if (marker !== undefined && !initial) initial = [];\n  if (typeof accessor !== \"function\") return insertExpression(parent, accessor, initial, marker);\n  createRenderEffect(current => insertExpression(parent, accessor(), current, marker), initial);\n}\nfunction assign(node, props, isSVG, skipChildren, prevProps = {}, skipRef = false) {\n  props || (props = {});\n  for (const prop in prevProps) {\n    if (!(prop in props)) {\n      if (prop === \"children\") continue;\n      prevProps[prop] = assignProp(node, prop, null, prevProps[prop], isSVG, skipRef, props);\n    }\n  }\n  for (const prop in props) {\n    if (prop === \"children\") {\n      if (!skipChildren) insertExpression(node, props.children);\n      continue;\n    }\n    const value = props[prop];\n    prevProps[prop] = assignProp(node, prop, value, prevProps[prop], isSVG, skipRef, props);\n  }\n}\nfunction hydrate$1(code, element, options = {}) {\n  if (globalThis._$HY.done) return render(code, element, [...element.childNodes], options);\n  sharedConfig.completed = globalThis._$HY.completed;\n  sharedConfig.events = globalThis._$HY.events;\n  sharedConfig.load = id => globalThis._$HY.r[id];\n  sharedConfig.has = id => id in globalThis._$HY.r;\n  sharedConfig.gather = root => gatherHydratable(element, root);\n  sharedConfig.registry = new Map();\n  sharedConfig.context = {\n    id: options.renderId || \"\",\n    count: 0\n  };\n  try {\n    gatherHydratable(element, options.renderId);\n    return render(code, element, [...element.childNodes], options);\n  } finally {\n    sharedConfig.context = null;\n  }\n}\nfunction getNextElement(template) {\n  let node,\n    key,\n    hydrating = isHydrating();\n  if (!hydrating || !(node = sharedConfig.registry.get(key = getHydrationKey()))) {\n    return template();\n  }\n  if (sharedConfig.completed) sharedConfig.completed.add(node);\n  sharedConfig.registry.delete(key);\n  return node;\n}\nfunction getNextMatch(el, nodeName) {\n  while (el && el.localName !== nodeName) el = el.nextSibling;\n  return el;\n}\nfunction getNextMarker(start) {\n  let end = start,\n    count = 0,\n    current = [];\n  if (isHydrating(start)) {\n    while (end) {\n      if (end.nodeType === 8) {\n        const v = end.nodeValue;\n        if (v === \"$\") count++;else if (v === \"/\") {\n          if (count === 0) return [end, current];\n          count--;\n        }\n      }\n      current.push(end);\n      end = end.nextSibling;\n    }\n  }\n  return [end, current];\n}\nfunction runHydrationEvents() {\n  if (sharedConfig.events && !sharedConfig.events.queued) {\n    queueMicrotask(() => {\n      const {\n        completed,\n        events\n      } = sharedConfig;\n      if (!events) return;\n      events.queued = false;\n      while (events.length) {\n        const [el, e] = events[0];\n        if (!completed.has(el)) return;\n        events.shift();\n        eventHandler(e);\n      }\n      if (sharedConfig.done) {\n        sharedConfig.events = _$HY.events = null;\n        sharedConfig.completed = _$HY.completed = null;\n      }\n    });\n    sharedConfig.events.queued = true;\n  }\n}\nfunction isHydrating(node) {\n  return !!sharedConfig.context && !sharedConfig.done && (!node || node.isConnected);\n}\nfunction toPropertyName(name) {\n  return name.toLowerCase().replace(/-([a-z])/g, (_, w) => w.toUpperCase());\n}\nfunction toggleClassKey(node, key, value) {\n  const classNames = key.trim().split(/\\s+/);\n  for (let i = 0, nameLen = classNames.length; i < nameLen; i++) node.classList.toggle(classNames[i], value);\n}\nfunction assignProp(node, prop, value, prev, isSVG, skipRef, props) {\n  let isCE, isProp, isChildProp, propAlias, forceProp;\n  if (prop === \"style\") return style(node, value, prev);\n  if (prop === \"classList\") return classList(node, value, prev);\n  if (value === prev) return prev;\n  if (prop === \"ref\") {\n    if (!skipRef) value(node);\n  } else if (prop.slice(0, 3) === \"on:\") {\n    const e = prop.slice(3);\n    prev && node.removeEventListener(e, prev, typeof prev !== \"function\" && prev);\n    value && node.addEventListener(e, value, typeof value !== \"function\" && value);\n  } else if (prop.slice(0, 10) === \"oncapture:\") {\n    const e = prop.slice(10);\n    prev && node.removeEventListener(e, prev, true);\n    value && node.addEventListener(e, value, true);\n  } else if (prop.slice(0, 2) === \"on\") {\n    const name = prop.slice(2).toLowerCase();\n    const delegate = DelegatedEvents.has(name);\n    if (!delegate && prev) {\n      const h = Array.isArray(prev) ? prev[0] : prev;\n      node.removeEventListener(name, h);\n    }\n    if (delegate || value) {\n      addEventListener(node, name, value, delegate);\n      delegate && delegateEvents([name]);\n    }\n  } else if (prop.slice(0, 5) === \"attr:\") {\n    setAttribute(node, prop.slice(5), value);\n  } else if (prop.slice(0, 5) === \"bool:\") {\n    setBoolAttribute(node, prop.slice(5), value);\n  } else if ((forceProp = prop.slice(0, 5) === \"prop:\") || (isChildProp = ChildProperties.has(prop)) || !isSVG && ((propAlias = getPropAlias(prop, node.tagName)) || (isProp = Properties.has(prop))) || (isCE = node.nodeName.includes(\"-\") || \"is\" in props)) {\n    if (forceProp) {\n      prop = prop.slice(5);\n      isProp = true;\n    } else if (isHydrating(node)) return value;\n    if (prop === \"class\" || prop === \"className\") className(node, value);else if (isCE && !isProp && !isChildProp) node[toPropertyName(prop)] = value;else node[propAlias || prop] = value;\n  } else {\n    const ns = isSVG && prop.indexOf(\":\") > -1 && SVGNamespace[prop.split(\":\")[0]];\n    if (ns) setAttributeNS(node, ns, prop, value);else setAttribute(node, Aliases[prop] || prop, value);\n  }\n  return value;\n}\nfunction eventHandler(e) {\n  if (sharedConfig.registry && sharedConfig.events) {\n    if (sharedConfig.events.find(([el, ev]) => ev === e)) return;\n  }\n  let node = e.target;\n  const key = `$$${e.type}`;\n  const oriTarget = e.target;\n  const oriCurrentTarget = e.currentTarget;\n  const retarget = value => Object.defineProperty(e, \"target\", {\n    configurable: true,\n    value\n  });\n  const handleNode = () => {\n    const handler = node[key];\n    if (handler && !node.disabled) {\n      const data = node[`${key}Data`];\n      data !== undefined ? handler.call(node, data, e) : handler.call(node, e);\n      if (e.cancelBubble) return;\n    }\n    node.host && typeof node.host !== \"string\" && !node.host._$host && node.contains(e.target) && retarget(node.host);\n    return true;\n  };\n  const walkUpTree = () => {\n    while (handleNode() && (node = node._$host || node.parentNode || node.host));\n  };\n  Object.defineProperty(e, \"currentTarget\", {\n    configurable: true,\n    get() {\n      return node || document;\n    }\n  });\n  if (sharedConfig.registry && !sharedConfig.done) sharedConfig.done = _$HY.done = true;\n  if (e.composedPath) {\n    const path = e.composedPath();\n    retarget(path[0]);\n    for (let i = 0; i < path.length - 2; i++) {\n      node = path[i];\n      if (!handleNode()) break;\n      if (node._$host) {\n        node = node._$host;\n        walkUpTree();\n        break;\n      }\n      if (node.parentNode === oriCurrentTarget) {\n        break;\n      }\n    }\n  }\n  else walkUpTree();\n  retarget(oriTarget);\n}\nfunction insertExpression(parent, value, current, marker, unwrapArray) {\n  const hydrating = isHydrating(parent);\n  if (hydrating) {\n    !current && (current = [...parent.childNodes]);\n    let cleaned = [];\n    for (let i = 0; i < current.length; i++) {\n      const node = current[i];\n      if (node.nodeType === 8 && node.data.slice(0, 2) === \"!$\") node.remove();else cleaned.push(node);\n    }\n    current = cleaned;\n  }\n  while (typeof current === \"function\") current = current();\n  if (value === current) return current;\n  const t = typeof value,\n    multi = marker !== undefined;\n  parent = multi && current[0] && current[0].parentNode || parent;\n  if (t === \"string\" || t === \"number\") {\n    if (hydrating) return current;\n    if (t === \"number\") {\n      value = value.toString();\n      if (value === current) return current;\n    }\n    if (multi) {\n      let node = current[0];\n      if (node && node.nodeType === 3) {\n        node.data !== value && (node.data = value);\n      } else node = document.createTextNode(value);\n      current = cleanChildren(parent, current, marker, node);\n    } else {\n      if (current !== \"\" && typeof current === \"string\") {\n        current = parent.firstChild.data = value;\n      } else current = parent.textContent = value;\n    }\n  } else if (value == null || t === \"boolean\") {\n    if (hydrating) return current;\n    current = cleanChildren(parent, current, marker);\n  } else if (t === \"function\") {\n    createRenderEffect(() => {\n      let v = value();\n      while (typeof v === \"function\") v = v();\n      current = insertExpression(parent, v, current, marker);\n    });\n    return () => current;\n  } else if (Array.isArray(value)) {\n    const array = [];\n    const currentArray = current && Array.isArray(current);\n    if (normalizeIncomingArray(array, value, current, unwrapArray)) {\n      createRenderEffect(() => current = insertExpression(parent, array, current, marker, true));\n      return () => current;\n    }\n    if (hydrating) {\n      if (!array.length) return current;\n      if (marker === undefined) return current = [...parent.childNodes];\n      let node = array[0];\n      if (node.parentNode !== parent) return current;\n      const nodes = [node];\n      while ((node = node.nextSibling) !== marker) nodes.push(node);\n      return current = nodes;\n    }\n    if (array.length === 0) {\n      current = cleanChildren(parent, current, marker);\n      if (multi) return current;\n    } else if (currentArray) {\n      if (current.length === 0) {\n        appendNodes(parent, array, marker);\n      } else reconcileArrays(parent, current, array);\n    } else {\n      current && cleanChildren(parent);\n      appendNodes(parent, array);\n    }\n    current = array;\n  } else if (value.nodeType) {\n    if (hydrating && value.parentNode) return current = multi ? [value] : value;\n    if (Array.isArray(current)) {\n      if (multi) return current = cleanChildren(parent, current, marker, value);\n      cleanChildren(parent, current, null, value);\n    } else if (current == null || current === \"\" || !parent.firstChild) {\n      parent.appendChild(value);\n    } else parent.replaceChild(value, parent.firstChild);\n    current = value;\n  } else ;\n  return current;\n}\nfunction normalizeIncomingArray(normalized, array, current, unwrap) {\n  let dynamic = false;\n  for (let i = 0, len = array.length; i < len; i++) {\n    let item = array[i],\n      prev = current && current[normalized.length],\n      t;\n    if (item == null || item === true || item === false) ; else if ((t = typeof item) === \"object\" && item.nodeType) {\n      normalized.push(item);\n    } else if (Array.isArray(item)) {\n      dynamic = normalizeIncomingArray(normalized, item, prev) || dynamic;\n    } else if (t === \"function\") {\n      if (unwrap) {\n        while (typeof item === \"function\") item = item();\n        dynamic = normalizeIncomingArray(normalized, Array.isArray(item) ? item : [item], Array.isArray(prev) ? prev : [prev]) || dynamic;\n      } else {\n        normalized.push(item);\n        dynamic = true;\n      }\n    } else {\n      const value = String(item);\n      if (prev && prev.nodeType === 3 && prev.data === value) normalized.push(prev);else normalized.push(document.createTextNode(value));\n    }\n  }\n  return dynamic;\n}\nfunction appendNodes(parent, array, marker = null) {\n  for (let i = 0, len = array.length; i < len; i++) parent.insertBefore(array[i], marker);\n}\nfunction cleanChildren(parent, current, marker, replacement) {\n  if (marker === undefined) return parent.textContent = \"\";\n  const node = replacement || document.createTextNode(\"\");\n  if (current.length) {\n    let inserted = false;\n    for (let i = current.length - 1; i >= 0; i--) {\n      const el = current[i];\n      if (node !== el) {\n        const isParent = el.parentNode === parent;\n        if (!inserted && !i) isParent ? parent.replaceChild(node, el) : parent.insertBefore(node, marker);else isParent && el.remove();\n      } else inserted = true;\n    }\n  } else parent.insertBefore(node, marker);\n  return [node];\n}\nfunction gatherHydratable(element, root) {\n  const templates = element.querySelectorAll(`*[data-hk]`);\n  for (let i = 0; i < templates.length; i++) {\n    const node = templates[i];\n    const key = node.getAttribute(\"data-hk\");\n    if ((!root || key.startsWith(root)) && !sharedConfig.registry.has(key)) sharedConfig.registry.set(key, node);\n  }\n}\nfunction getHydrationKey() {\n  return sharedConfig.getNextContextId();\n}\nfunction NoHydration(props) {\n  return sharedConfig.context ? undefined : props.children;\n}\nfunction Hydration(props) {\n  return props.children;\n}\nconst voidFn = () => undefined;\nconst RequestContext = Symbol();\nfunction innerHTML(parent, content) {\n  !sharedConfig.context && (parent.innerHTML = content);\n}\n\nfunction throwInBrowser(func) {\n  const err = new Error(`${func.name} is not supported in the browser, returning undefined`);\n  console.error(err);\n}\nfunction renderToString(fn, options) {\n  throwInBrowser(renderToString);\n}\nfunction renderToStringAsync(fn, options) {\n  throwInBrowser(renderToStringAsync);\n}\nfunction renderToStream(fn, options) {\n  throwInBrowser(renderToStream);\n}\nfunction ssr(template, ...nodes) {}\nfunction ssrElement(name, props, children, needsId) {}\nfunction ssrClassList(value) {}\nfunction ssrStyle(value) {}\nfunction ssrAttribute(key, value) {}\nfunction ssrHydrationKey() {}\nfunction resolveSSRNode(node) {}\nfunction escape(html) {}\nfunction ssrSpread(props, isSVG, skipChildren) {}\n\nconst isServer = false;\nconst isDev = false;\nconst SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nfunction createElement(tagName, isSVG = false) {\n  return isSVG ? document.createElementNS(SVG_NAMESPACE, tagName) : document.createElement(tagName);\n}\nconst hydrate = (...args) => {\n  enableHydration();\n  return hydrate$1(...args);\n};\nfunction Portal(props) {\n  const {\n      useShadow\n    } = props,\n    marker = document.createTextNode(\"\"),\n    mount = () => props.mount || document.body,\n    owner = getOwner();\n  let content;\n  let hydrating = !!sharedConfig.context;\n  createEffect(() => {\n    if (hydrating) getOwner().user = hydrating = false;\n    content || (content = runWithOwner(owner, () => createMemo(() => props.children)));\n    const el = mount();\n    if (el instanceof HTMLHeadElement) {\n      const [clean, setClean] = createSignal(false);\n      const cleanup = () => setClean(true);\n      createRoot(dispose => insert(el, () => !clean() ? content() : dispose(), null));\n      onCleanup(cleanup);\n    } else {\n      const container = createElement(props.isSVG ? \"g\" : \"div\", props.isSVG),\n        renderRoot = useShadow && container.attachShadow ? container.attachShadow({\n          mode: \"open\"\n        }) : container;\n      Object.defineProperty(container, \"_$host\", {\n        get() {\n          return marker.parentNode;\n        },\n        configurable: true\n      });\n      insert(renderRoot, content);\n      el.appendChild(container);\n      props.ref && props.ref(container);\n      onCleanup(() => el.removeChild(container));\n    }\n  }, undefined, {\n    render: !hydrating\n  });\n  return marker;\n}\nfunction createDynamic(component, props) {\n  const cached = createMemo(component);\n  return createMemo(() => {\n    const component = cached();\n    switch (typeof component) {\n      case \"function\":\n        return untrack(() => component(props));\n      case \"string\":\n        const isSvg = SVGElements.has(component);\n        const el = sharedConfig.context ? getNextElement() : createElement(component, isSvg);\n        spread(el, props, isSvg);\n        return el;\n    }\n  });\n}\nfunction Dynamic(props) {\n  const [, others] = splitProps(props, [\"component\"]);\n  return createDynamic(() => props.component, others);\n}\n\nexport { Aliases, voidFn as Assets, ChildProperties, DOMElements, DelegatedEvents, Dynamic, Hydration, voidFn as HydrationScript, NoHydration, Portal, Properties, RequestContext, SVGElements, SVGNamespace, addEventListener, assign, classList, className, clearDelegatedEvents, createDynamic, delegateEvents, dynamicProperty, escape, voidFn as generateHydrationScript, voidFn as getAssets, getHydrationKey, getNextElement, getNextMarker, getNextMatch, getPropAlias, voidFn as getRequestEvent, hydrate, innerHTML, insert, isDev, isServer, memo, render, renderToStream, renderToString, renderToStringAsync, resolveSSRNode, runHydrationEvents, setAttribute, setAttributeNS, setBoolAttribute, setProperty, spread, ssr, ssrAttribute, ssrClassList, ssrElement, ssrHydrationKey, ssrSpread, ssrStyle, style, template, use, voidFn as useAssets };\n","// pixi.tsx\nimport * as PIXI from \"pixi.js\";\nimport {\n  createContext,\n  createResource,\n  onCleanup,\n  onMount,\n  Show,\n  splitProps,\n  useContext,\n  type Component,\n  type JSX,\n} from \"solid-js\";\nimport { effect, insert, spread } from \"./runtime\";\nimport { createLogger } from \"./debug\";\n\nconst console = createLogger(\"pixi\");\n\nfunction assert(condition: unknown, msg?: string): asserts condition {\n  if (!condition) {\n    throw new Error(msg);\n  }\n}\n\nconst ApplicationContext = createContext<PIXI.Application | null>(null);\n\nexport const useApp = () => {\n  const app = useContext(ApplicationContext);\n  if (!app) {\n    throw new Error(\n      \"App not found: You must only call useApp() from a component nested inside <Application>\"\n    );\n  }\n  return app;\n};\n\nexport function onTick(callback: PIXI.TickerCallback<unknown>) {\n  console.log(\"onTick called\");\n  const app = useApp();\n\n  app.ticker.add(callback);\n\n  onCleanup(() => {\n    console.log(\"onTick cleanup\");\n    app.ticker.remove(callback);\n  });\n}\nconst Stage: Component<{\n  stage: PIXI.Container;\n  children?: JSX.Element;\n}> = (props) => {\n  // Why was I inserting ()=>children instead of just children?\n  // insert(props.stage, () => props.children);\n  insert(props.stage, props.children);\n\n  return undefined as unknown as JSX.Element;\n};\n\nexport const Application: Component<\n  {\n    ref?: (el: PIXI.Application) => void;\n    children?: JSX.Element;\n    onscreenCanvas?: HTMLCanvasElement;\n  } & Partial<PIXI.ApplicationOptions>\n> = (props) => {\n  console.log(\"Application init\", props);\n\n  if (props.onscreenCanvas) {\n    assert(\n      props.canvas instanceof OffscreenCanvas,\n      \"You must provide either props.visibleCanvas or props.canvas as an OffscreenCanvas\"\n    );\n  }\n  if (props.canvas instanceof OffscreenCanvas) {\n    assert(\n      props.onscreenCanvas instanceof HTMLCanvasElement,\n      \"If you provide props.canvas as an OffscreenCanvas, then you must provide props.visibleCanvas as an HTMLCanvasElement\"\n    );\n  }\n\n  const [nodeProps, pixiProps] = splitProps(props, [\n    \"children\",\n    \"ref\",\n    \"onscreenCanvas\",\n  ]);\n\n  const [app] = createResource(async () => {\n    const a = new PIXI.Application();\n    await a.init(pixiProps);\n    return a;\n  });\n\n  onMount(() => {\n    console.log(\"Application mount\");\n    const currentApp = app();\n    if (currentApp) {\n      props.ref?.(currentApp);\n    }\n  });\n\n  onCleanup(() => {\n    console.log(\"Application cleanup\");\n    app()?.destroy(true);\n  });\n\n  return (\n    <Show when={app()}>\n      {(currentApp) => (\n        <ApplicationContext.Provider value={currentApp()}>\n          {\n            // Mount the app's internal canvas unless user provided an onscreenCanvas.\n            nodeProps.onscreenCanvas\n              ? nodeProps.onscreenCanvas\n              : currentApp().canvas\n          }\n\n          <Stage stage={currentApp().stage}>{props.children}</Stage>\n        </ApplicationContext.Provider>\n      )}\n    </Show>\n  );\n};\n\nexport const Container: Component<\n  {\n    ref?: (el: PIXI.Container) => void;\n    children?: JSX.Element;\n    as?: PIXI.Container;\n  } & Omit<Partial<PIXI.ContainerOptions>, \"children\" | \"ref\">\n> = (_props) => {\n  const container = _props.as ?? new PIXI.Container();\n\n  const [nodeProps, pixiProps] = splitProps(_props, [\"children\", \"ref\"]);\n\n  // Object.assign(container, pixiProps);\n\n  effect(() => {\n    spread(container, pixiProps);\n    // Object.assign(container, pixiProps);\n  });\n\n  onMount(() => {\n    nodeProps.ref?.(container);\n  });\n\n  onCleanup(() => {\n    console.log(\"Container cleanup\");\n    container.destroy();\n  });\n\n  insert(container, nodeProps.children);\n\n  return (() => container) as unknown as JSX.Element;\n};\n\nexport const Sprite: Component<\n  {\n    ref?: (el: PIXI.Sprite) => void;\n    as?: PIXI.Sprite;\n  } & Partial<PIXI.SpriteOptions>\n> = (props) => {\n  console.log(\"Sprite init\", props);\n  const [_nodeProps, pixiProps] = splitProps(props, [\"ref\", \"as\"]);\n\n  const sprite = props.as ?? new PIXI.Sprite();\n\n  // Object.assign(sprite, pixiProps);\n\n  effect(() => {\n    // Object.assign(sprite, pixiProps);\n    spread(sprite, pixiProps);\n  });\n\n  onMount(() => {\n    _nodeProps.ref?.(sprite);\n  });\n\n  onCleanup(() => {\n    console.log(\"Sprite cleanup\");\n    sprite.destroy();\n  });\n\n  // Don't manually add to stage - let the renderer handle it\n  // app.stage.addChild(sprite);\n\n  return (() => sprite) as unknown as JSX.Element;\n};\n\nexport const Text: Component<\n  {\n    ref?: (el: PIXI.Text) => void;\n  } & Partial<PIXI.TextOptions>\n> = (props) => {\n  console.log(\"Text init\", props);\n  const text = new PIXI.Text();\n\n  const [nodeProps, pixiProps] = splitProps(props, [\"ref\"]);\n\n  // Object.assign(text, pixiProps);\n\n  effect(() => {\n    // Object.assign(text, pixiProps);\n    spread(text, pixiProps);\n  });\n\n  onMount(() => {\n    nodeProps.ref?.(text);\n  });\n\n  onCleanup(() => {\n    console.log(\"Text cleanup\");\n    text.destroy();\n  });\n\n  return (() => text) as unknown as JSX.Element;\n};\n\nexport const TilingSprite: Component<\n  {\n    ref?: (el: PIXI.TilingSprite) => void;\n  } & PIXI.TilingSpriteOptions\n> = (props) => {\n  console.log(\"TilingSprite init\", props);\n  const pixiElement = new PIXI.TilingSprite();\n\n  const [_nodeProps, pixiProps] = splitProps(props, [\"ref\"]);\n\n  // Object.assign(pixiElement, pixiProps);\n\n  effect(() => {\n    // Object.assign(pixiElement, pixiProps);\n    spread(pixiElement, pixiProps);\n  });\n\n  onCleanup(() => {\n    console.log(\"TilingSprite cleanup\");\n    pixiElement.destroy();\n  });\n\n  return (() => pixiElement) as unknown as JSX.Element;\n};\n\nexport const Graphics: Component<\n  {\n    ref?: (el: PIXI.Graphics) => void;\n  } & PIXI.GraphicsOptions\n> = (props) => {\n  const pixiElement = new PIXI.Graphics();\n\n  const [nodeProps, pixiProps] = splitProps(props, [\"ref\"]);\n\n  // Object.assign(pixiElement, pixiProps);\n\n  effect(() => {\n    // Object.assign(pixiElement, pixiProps);\n    spread(pixiElement, pixiProps);\n  });\n\n  onMount(() => {\n    nodeProps.ref?.(pixiElement);\n  });\n\n  onCleanup(() => {\n    console.log(\"Graphics cleanup\");\n    pixiElement.destroy();\n  });\n\n  return (() => pixiElement) as unknown as JSX.Element;\n};\n\nexport const AnimatedSprite: Component<\n  {\n    ref?: (el: PIXI.AnimatedSprite) => void;\n  } & PIXI.AnimatedSpriteOptions\n> = (props) => {\n  console.log(\"AnimatedSprite init\", props);\n  const [_nodeProps, pixiProps] = splitProps(props, [\"ref\"]);\n\n  const pixiElement = new PIXI.AnimatedSprite(pixiProps);\n\n  effect(() => {\n    spread(pixiElement, pixiProps);\n  });\n\n  onMount(() => {\n    _nodeProps.ref?.(pixiElement);\n  });\n\n  onCleanup(() => {\n    console.log(\"AnimatedSprite cleanup\");\n    pixiElement.destroy();\n  });\n\n  return (() => pixiElement) as unknown as JSX.Element;\n};\n\nexport const BitmapText: Component<\n  {\n    ref?: (el: PIXI.BitmapText) => void;\n  } & PIXI.TextOptions\n> = (props) => {\n  console.log(\"BitmapText init\", props);\n  const pixiElement = new PIXI.BitmapText();\n\n  const [_nodeProps, pixiProps] = splitProps(props, [\"ref\"]);\n\n  effect(() => {\n    spread(pixiElement, pixiProps);\n  });\n\n  onCleanup(() => {\n    console.log(\"BitmapText cleanup\");\n    pixiElement.destroy();\n  });\n\n  return (() => pixiElement) as unknown as JSX.Element;\n};\n\nexport const MeshRope: Component<\n  {\n    ref?: (el: PIXI.MeshRope) => void;\n  } & PIXI.MeshRopeOptions\n> = (props) => {\n  const [_nodeProps, pixiProps] = splitProps(props, [\"ref\"]);\n  const pixiElement = new PIXI.MeshRope(pixiProps);\n\n  effect(() => {\n    spread(pixiElement, pixiProps);\n  });\n\n  onMount(() => {\n    _nodeProps.ref?.(pixiElement);\n  });\n\n  onCleanup(() => {\n    console.log(\"MeshRope cleanup\");\n    pixiElement.destroy();\n  });\n\n  return (() => pixiElement) as unknown as JSX.Element;\n};\n\nexport const MeshPlane: Component<\n  {\n    ref?: (el: PIXI.MeshPlane) => void;\n  } & PIXI.MeshPlaneOptions\n> = (props) => {\n  const [_nodeProps, pixiProps] = splitProps(props, [\"ref\"]);\n  const pixiElement = new PIXI.MeshPlane(pixiProps);\n\n  effect(() => {\n    spread(pixiElement, pixiProps);\n  });\n\n  onMount(() => {\n    _nodeProps.ref?.(pixiElement);\n  });\n\n  onCleanup(() => {\n    console.log(\"MeshPlane cleanup\");\n    pixiElement.destroy();\n  });\n\n  return (() => pixiElement) as unknown as JSX.Element;\n};\n"],"file":"assets/pixi-OK8lHWGx.js"}