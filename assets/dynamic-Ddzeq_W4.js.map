{"version":3,"file":"dynamic-Ddzeq_W4.js","sources":["../../src/pages/demo/graphics/dynamic.tsx"],"sourcesContent":["import { Application, Graphics, onTick } from \"@danneu/solid-pixi\";\nimport * as PIXI from \"pixi.js\";\nimport { createEffect, createSignal, Suspense, type Component } from \"solid-js\";\n\nconst MovingShape: Component = () => {\n  let g: PIXI.Graphics | undefined;\n\n  const [count, setCount] = createSignal(0);\n\n  onTick(() => {\n    setCount((c) => c + 0.1);\n  });\n\n  createEffect(() => {\n    const c = count();\n    if (!g) return;\n    // Redraw every time count changes\n    g.clear();\n    g.moveTo(-120 + Math.sin(c) * 20, -100 + Math.cos(c) * 20)\n      .lineTo(120 + Math.cos(c) * 20, -100 + Math.sin(c) * 20)\n      .lineTo(120 + Math.sin(c) * 20, 100 + Math.cos(c) * 20)\n      .lineTo(-120 + Math.cos(c) * 20, 100 + Math.sin(c) * 20)\n      .lineTo(-120 + Math.sin(c) * 20, -100 + Math.cos(c) * 20)\n      .fill({ color: 0xffff00, alpha: 0.5 })\n      .stroke({ width: 10, color: 0xff0000 });\n  });\n\n  const rotation = () => count() * 0.1;\n\n  return (\n    <Graphics\n      x={800 / 2}\n      y={600 / 2}\n      ref={(el) => {\n        g = el;\n      }}\n      rotation={rotation()}\n    />\n  );\n};\n\nexport default function () {\n  // We'll use the same graphics object for everything\n  let graphics = new PIXI.Graphics();\n\n  const handleClick = () => {\n    if (!graphics) return;\n    graphics.moveTo(Math.random() * 800, Math.random() * 600);\n    graphics.bezierCurveTo(\n      Math.random() * 800,\n      Math.random() * 600,\n      Math.random() * 800,\n      Math.random() * 600,\n      Math.random() * 800,\n      Math.random() * 600\n    );\n    graphics.stroke({\n      width: Math.random() * 30,\n      color: Math.random() * 0xffffff,\n    });\n  };\n\n  return (\n    <>\n      <p>Click on the canvas to draw random curves.</p>\n      <Suspense fallback={<div>Loading</div>}>\n        <Application\n          antialias\n          eventMode=\"static\"\n          ref={(app) => {\n            console.log(\"app ref. app.screen\", app.screen);\n            app.stage.hitArea = app.screen;\n            app.stage.on(\"pointerdown\", handleClick);\n          }}\n        >\n          <Graphics\n            ref={(g) => {\n              graphics = g;\n              g.moveTo(50, 50)\n                .lineTo(250, 50)\n                .lineTo(100, 100)\n                .lineTo(250, 220)\n                .lineTo(50, 220)\n                .lineTo(50, 50)\n                .fill({ color: 0xff3300 })\n                .stroke({ width: 10, color: 0xffd900 });\n\n              g.moveTo(210, 300)\n                .lineTo(450, 320)\n                .lineTo(570, 350)\n                .quadraticCurveTo(600, 0, 480, 100)\n                .lineTo(330, 120)\n                .lineTo(410, 200)\n                .lineTo(210, 300)\n                .fill({ color: 0xff700b })\n                .stroke({ width: 10, color: 0xff0000, alpha: 0.8 });\n\n              // Draw a rectangle\n              g.rect(50, 250, 100, 100);\n              g.stroke({ width: 2, color: 0x0000ff });\n\n              // Draw a circle\n              g.circle(470, 200, 100);\n              g.fill({ color: 0xffff0b, alpha: 0.5 });\n\n              g.moveTo(30, 30);\n              g.lineTo(600, 300);\n              g.stroke({ width: 20, color: 0x33ff00 });\n            }}\n          />\n\n          <MovingShape />\n        </Application>\n      </Suspense>\n    </>\n  );\n}\n"],"names":["MovingShape","g","count","setCount","createSignal","onTick","c","createEffect","clear","moveTo","Math","sin","cos","lineTo","fill","color","alpha","stroke","width","rotation","_$createComponent","Graphics","x","y","ref","el","graphics","PIXI","handleClick","random","bezierCurveTo","_tmpl$","Suspense","fallback","_tmpl$2","children","Application","antialias","eventMode","app","log","screen","stage","hitArea","on","quadraticCurveTo","rect","circle"],"mappings":"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"}