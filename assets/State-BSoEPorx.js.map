{"version":3,"file":"State-BSoEPorx.js","sources":["../../node_modules/pixi.js/lib/rendering/renderers/shared/state/State.mjs"],"sourcesContent":["\"use strict\";\nconst blendModeIds = {\n  normal: 0,\n  add: 1,\n  multiply: 2,\n  screen: 3,\n  overlay: 4,\n  erase: 5,\n  \"normal-npm\": 6,\n  \"add-npm\": 7,\n  \"screen-npm\": 8,\n  min: 9,\n  max: 10\n};\nconst BLEND = 0;\nconst OFFSET = 1;\nconst CULLING = 2;\nconst DEPTH_TEST = 3;\nconst WINDING = 4;\nconst DEPTH_MASK = 5;\nconst _State = class _State {\n  constructor() {\n    this.data = 0;\n    this.blendMode = \"normal\";\n    this.polygonOffset = 0;\n    this.blend = true;\n    this.depthMask = true;\n  }\n  /**\n   * Activates blending of the computed fragment color values.\n   * @default true\n   */\n  get blend() {\n    return !!(this.data & 1 << BLEND);\n  }\n  set blend(value) {\n    if (!!(this.data & 1 << BLEND) !== value) {\n      this.data ^= 1 << BLEND;\n    }\n  }\n  /**\n   * Activates adding an offset to depth values of polygon's fragments\n   * @default false\n   */\n  get offsets() {\n    return !!(this.data & 1 << OFFSET);\n  }\n  set offsets(value) {\n    if (!!(this.data & 1 << OFFSET) !== value) {\n      this.data ^= 1 << OFFSET;\n    }\n  }\n  /** The culling settings for this state none - No culling back - Back face culling front - Front face culling */\n  set cullMode(value) {\n    if (value === \"none\") {\n      this.culling = false;\n      return;\n    }\n    this.culling = true;\n    this.clockwiseFrontFace = value === \"front\";\n  }\n  get cullMode() {\n    if (!this.culling) {\n      return \"none\";\n    }\n    return this.clockwiseFrontFace ? \"front\" : \"back\";\n  }\n  /**\n   * Activates culling of polygons.\n   * @default false\n   */\n  get culling() {\n    return !!(this.data & 1 << CULLING);\n  }\n  set culling(value) {\n    if (!!(this.data & 1 << CULLING) !== value) {\n      this.data ^= 1 << CULLING;\n    }\n  }\n  /**\n   * Activates depth comparisons and updates to the depth buffer.\n   * @default false\n   */\n  get depthTest() {\n    return !!(this.data & 1 << DEPTH_TEST);\n  }\n  set depthTest(value) {\n    if (!!(this.data & 1 << DEPTH_TEST) !== value) {\n      this.data ^= 1 << DEPTH_TEST;\n    }\n  }\n  /**\n   * Enables or disables writing to the depth buffer.\n   * @default true\n   */\n  get depthMask() {\n    return !!(this.data & 1 << DEPTH_MASK);\n  }\n  set depthMask(value) {\n    if (!!(this.data & 1 << DEPTH_MASK) !== value) {\n      this.data ^= 1 << DEPTH_MASK;\n    }\n  }\n  /**\n   * Specifies whether or not front or back-facing polygons can be culled.\n   * @default false\n   */\n  get clockwiseFrontFace() {\n    return !!(this.data & 1 << WINDING);\n  }\n  set clockwiseFrontFace(value) {\n    if (!!(this.data & 1 << WINDING) !== value) {\n      this.data ^= 1 << WINDING;\n    }\n  }\n  /**\n   * The blend mode to be applied when this state is set. Apply a value of `normal` to reset the blend mode.\n   * Setting this mode to anything other than NO_BLEND will automatically switch blending on.\n   * @default 'normal'\n   */\n  get blendMode() {\n    return this._blendMode;\n  }\n  set blendMode(value) {\n    this.blend = value !== \"none\";\n    this._blendMode = value;\n    this._blendModeId = blendModeIds[value] || 0;\n  }\n  /**\n   * The polygon offset. Setting this property to anything other than 0 will automatically enable polygon offset fill.\n   * @default 0\n   */\n  get polygonOffset() {\n    return this._polygonOffset;\n  }\n  set polygonOffset(value) {\n    this.offsets = !!value;\n    this._polygonOffset = value;\n  }\n  toString() {\n    return `[pixi.js/core:State blendMode=${this.blendMode} clockwiseFrontFace=${this.clockwiseFrontFace} culling=${this.culling} depthMask=${this.depthMask} polygonOffset=${this.polygonOffset}]`;\n  }\n  /**\n   * A quickly getting an instance of a State that is configured for 2d rendering.\n   * @returns a new State with values set for 2d rendering\n   */\n  static for2d() {\n    const state = new _State();\n    state.depthTest = false;\n    state.blend = true;\n    return state;\n  }\n};\n_State.default2d = _State.for2d();\nlet State = _State;\n\nexport { State };\n//# sourceMappingURL=State.mjs.map\n"],"names":["_State"],"mappings":"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","x_google_ignoreList":[0]}